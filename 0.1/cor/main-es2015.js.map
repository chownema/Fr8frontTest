{"version":3,"sources":["webpack:///../Fr8models/dist/helper/modelUtils.js","webpack:///../Fr8models/dist/index.js","webpack:///../Fr8models/dist/model/domain/company.js","webpack:///../Fr8models/dist/model/domain/dispatchDefinition.js","webpack:///../Fr8models/dist/model/domain/dispatchRecord.js","webpack:///../Fr8models/dist/model/domain/quote/priceConfig.js","webpack:///../Fr8models/dist/model/domain/quote/priceRule.js","webpack:///../Fr8models/dist/model/domain/quote/priceRuleConfig.js","webpack:///../Fr8models/dist/model/domain/quote/priceRuleLocationConditional.js","webpack:///../Fr8models/dist/model/domain/quote/priceRuleSet.js","webpack:///../Fr8models/dist/model/domain/quote/pricingLevel.js","webpack:///../Fr8models/dist/model/domain/quote/pricingRateLevel.js","webpack:///../Fr8models/dist/model/domain/quote/quote.js","webpack:///../Fr8models/dist/model/domain/quote/quoteInterfaceRequest.js","webpack:///../Fr8models/dist/model/domain/quote/quoteInterfaceResponse.js","webpack:///../Fr8models/dist/model/domain/quote/ratingCard.js","webpack:///../Fr8models/dist/model/domain/user.js","webpack:///../Fr8models/dist/model/exception/badRequestException.js","webpack:///../Fr8models/dist/model/exception/forbiddenException.js","webpack:///../Fr8models/dist/model/exception/notFoundException.js","webpack:///../Fr8models/dist/model/request/createRatingCardRequest.js","webpack:///../Fr8models/dist/model/request/dataContainerRequest.js","webpack:///../Fr8models/dist/model/request/getRecordsRequest.js","webpack:///../Fr8models/dist/model/request/loginRequest.js","webpack:///../Fr8models/dist/model/request/registerRequest.js","webpack:///../Fr8models/dist/model/request/resetPasswordRequest.js","webpack:///../Fr8models/dist/model/request/saveCompanyRequest.js","webpack:///../Fr8models/dist/model/request/savePriceRuleConfigRequest.js","webpack:///../Fr8models/dist/model/request/saveUserRequest.js","webpack:///../Fr8models/dist/model/request/updateCompanyRequest.js","webpack:///../Fr8models/dist/model/request/updateRatingCardRequest.js","webpack:///../Fr8models/dist/model/request/updateUserRequest.js","webpack:///../Fr8models/dist/model/response/getCompaniesResponse.js","webpack:///../Fr8models/dist/model/response/getCompanyResponse.js","webpack:///../Fr8models/dist/model/response/getCompanyUserResponse.js","webpack:///../Fr8models/dist/model/response/getCompanyUsersResponse.js","webpack:///../Fr8models/dist/model/response/getPriceRuleConfigs.js","webpack:///../Fr8models/dist/model/response/getQuotesResponse.js","webpack:///../Fr8models/dist/model/response/getRatingCardResponse.js","webpack:///../Fr8models/dist/model/response/getRatingCardsResponse.js","webpack:///../Fr8models/dist/model/response/getRecordsResponse.js","webpack:///../Fr8models/dist/model/response/loginResponse.js","webpack:///../Fr8models/dist/model/response/registerResponse.js","webpack:///../Fr8models/dist/model/response/resetPasswordResponse.js","webpack:///../Fr8models/dist/model/response/saveCompanyResponse.js","webpack:///../Fr8models/dist/model/response/saveRatingCardResponse.js","webpack:///../Fr8models/dist/model/response/saveUserResponse.js","webpack:///../Fr8models/dist/model/response/tokenVerificationResponse.js","webpack:///../Fr8models/dist/model/response/updateCompanyResponse.js","webpack:///../Fr8models/dist/model/response/updateRatingCardResponse.js","webpack:///../Fr8models/dist/model/response/updateUserResponse.js","webpack:///../Fr8models/dist/model/utils/errorResponse.js","webpack:///../Fr8models/dist/model/utils/userInfoFromToken.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/company-add/company-add.component.html","webpack:///./src/app/company-get/company-get.component.html","webpack:///./src/app/dispatch-add/dispatch-add.component.html","webpack:///./src/app/dispatch-get/dispatch-get.component.html","webpack:///./src/app/dispatch-quote-get/dispatch-quote-get.component.html","webpack:///./src/app/dispatch-quote/dispatch-quote.component.html","webpack:///./src/app/dispatch-upload/dispatch-upload.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/price-rule-add/manage-price-rule.component.html","webpack:///./src/app/price-rule-list/price-rule-list.component.html","webpack:///./src/app/product-add/product-add.component.html","webpack:///./src/app/product-edit/product-edit.component.html","webpack:///./src/app/rating-card-add/rating-card-add.component.html","webpack:///./src/app/rating-card-get/rating-card-get.component.html","webpack:///./src/app/user-add/user-add.component.html","webpack:///./src/app/user-get/user-get.component.html","webpack:///./src/app/app-feature-config.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.gateway.ts","webpack:///./src/app/auth.provider.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/company-add/company-add.component.css","webpack:///./src/app/company-add/company-add.component.ts","webpack:///./src/app/company-get/company-get.component.css","webpack:///./src/app/company-get/company-get.component.ts","webpack:///./src/app/component-helper.ts","webpack:///./src/app/dispatch-add/dispatch-add.component.css","webpack:///./src/app/dispatch-add/dispatch-add.component.ts","webpack:///./src/app/dispatch-get/dispatch-get.component.css","webpack:///./src/app/dispatch-get/dispatch-get.component.ts","webpack:///./src/app/dispatch-quote-get/dispatch-quote-get.component.css","webpack:///./src/app/dispatch-quote-get/dispatch-quote-get.component.ts","webpack:///./src/app/dispatch-quote.gateway.ts","webpack:///./src/app/dispatch-quote/dispatch-quote.component.css","webpack:///./src/app/dispatch-quote/dispatch-quote.component.ts","webpack:///./src/app/dispatch-quote/dispatch-quote.service.ts","webpack:///./src/app/dispatch-quote/quote-config.service.ts","webpack:///./src/app/dispatch-quote/quote-interface.ts","webpack:///./src/app/dispatch-quote/quote-price-level.service.ts","webpack:///./src/app/dispatch-upload/dispatch-upload.component.css","webpack:///./src/app/dispatch-upload/dispatch-upload.component.ts","webpack:///./src/app/dispatch-uploader.service.ts","webpack:///./src/app/dispatch.gateway.ts","webpack:///./src/app/dispatch.provider.ts","webpack:///./src/app/dispatch.service.ts","webpack:///./src/app/location.service.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/notify-fail-toastr.ts","webpack:///./src/app/notify-success-toastr.ts","webpack:///./src/app/price-rule-add/manage-price-rule.component.css","webpack:///./src/app/price-rule-add/manage-price-rule.component.ts","webpack:///./src/app/price-rule-list/price-rule-list.component.css","webpack:///./src/app/price-rule-list/price-rule-list.component.ts","webpack:///./src/app/product-add/product-add.component.css","webpack:///./src/app/product-add/product-add.component.ts","webpack:///./src/app/product-edit/product-edit.component.css","webpack:///./src/app/product-edit/product-edit.component.ts","webpack:///./src/app/rating-card-add/rating-add.component.ts","webpack:///./src/app/rating-card-add/rating-card-add.component.css","webpack:///./src/app/rating-card-get/rating-card-get.component.css","webpack:///./src/app/rating-card-get/rating-card-get.component.ts","webpack:///./src/app/rating-card.service.ts","webpack:///./src/app/storage.service.ts","webpack:///./src/app/user-add/user-add.component.css","webpack:///./src/app/user-add/user-add.component.ts","webpack:///./src/app/user-get/user-get.component.css","webpack:///./src/app/user-get/user-get.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AACA;AACA,gCAAgC;AAChC,8BAA8B;AAC9B,yBAAyB;AACzB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,4BAA4B;AAC5B,gCAAgC;AAChC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,oFAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,oFAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc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,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;oBACvC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,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AAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACtC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;gBACvC,EAAE,EAAE,EAAE,GA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","file":"main-es2015.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ModelUtils {\n    constructor() { }\n    // Merges the object fields if the object matchest the src object fields\n    static merge(src, obj) {\n        if (src && obj) {\n            for (var key in src) {\n                if (key && src.hasOwnProperty(key) && obj[key])\n                    src[key] = obj[key];\n            }\n        }\n        return src;\n    }\n    static keyValueToList(src) {\n        const keys = Object.keys(src);\n        const list = [];\n        keys.forEach((value) => {\n            list.push(src[value]);\n        });\n        return list;\n    }\n    static keysToLowerCase(obj) {\n        var key, keys = Object.keys(obj);\n        var n = keys.length;\n        var newobj = {};\n        while (n--) {\n            key = keys[n];\n            newobj[key.toLowerCase()] = obj[key];\n        }\n        return newobj;\n    }\n    static valuesToLowerCase(obj) {\n        obj.forEach((item) => {\n            const idx = obj.indexOf(item);\n            obj[idx] = item.toLowerCase();\n        });\n        return obj;\n    }\n    static uuidv4() {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        for (var i = 0; i < 20; i++)\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        return text;\n    }\n}\nexports.ModelUtils = ModelUtils;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Domain\n__export(require(\"./model/domain/user\"));\n__export(require(\"./model/domain/company\"));\n__export(require(\"./model/domain/dispatchDefinition\"));\n__export(require(\"./model/domain/dispatchRecord\"));\n//// Quote\n__export(require(\"./model/domain/quote/pricingLevel\"));\n__export(require(\"./model/domain/quote/priceConfig\"));\n__export(require(\"./model/domain/quote/quoteInterfaceRequest\"));\n__export(require(\"./model/domain/quote/quoteInterfaceResponse\"));\n__export(require(\"./model/domain/quote/pricingRateLevel\"));\n__export(require(\"./model/domain/quote/priceRule\"));\n__export(require(\"./model/domain/quote/priceRuleSet\"));\n__export(require(\"./model/domain/quote/priceRuleLocationConditional\"));\n__export(require(\"./model/domain/quote/priceRuleConfig\"));\n__export(require(\"./model/domain/quote/ratingCard\"));\n__export(require(\"./model/domain/quote/quote\"));\n// Exception\n__export(require(\"./model/exception/notFoundException\"));\n__export(require(\"./model/exception/forbiddenException\"));\n__export(require(\"./model/exception/badRequestException\"));\n// Request\n__export(require(\"./model/request/createRatingCardRequest\"));\n__export(require(\"./model/request/updateRatingCardRequest\"));\n__export(require(\"./model/request/savePriceRuleConfigRequest\"));\n__export(require(\"./model/request/dataContainerRequest\"));\n__export(require(\"./model/request/loginRequest\"));\n__export(require(\"./model/request/registerRequest\"));\n__export(require(\"./model/request/saveUserRequest\"));\n__export(require(\"./model/request/updateUserRequest\"));\n__export(require(\"./model/request/saveCompanyRequest\"));\n__export(require(\"./model/request/updateCompanyRequest\"));\n__export(require(\"./model/request/resetPasswordRequest\"));\n__export(require(\"./model/request/getRecordsRequest\"));\n// Response\n__export(require(\"./model/response/loginResponse\"));\n__export(require(\"./model/response/tokenVerificationResponse\"));\n// Super\n__export(require(\"./model/response/getRecordsResponse\"));\n__export(require(\"./model/response/getCompanyResponse\"));\n__export(require(\"./model/response/getCompaniesResponse\"));\n__export(require(\"./model/response/getCompanyUserResponse\"));\n__export(require(\"./model/response/getCompanyUsersResponse\"));\n__export(require(\"./model/response/getRatingCardResponse\"));\n__export(require(\"./model/response/getRatingCardsResponse\"));\n__export(require(\"./model/response/getQuotesResponse\"));\n__export(require(\"./model/response/getPriceRuleConfigs\"));\n__export(require(\"./model/response/resetPasswordResponse\"));\n__export(require(\"./model/response/updateUserResponse\"));\n__export(require(\"./model/response/updateCompanyResponse\"));\n__export(require(\"./model/response/updateRatingCardResponse\"));\n__export(require(\"./model/response/saveCompanyResponse\"));\n__export(require(\"./model/response/saveUserResponse\"));\n__export(require(\"./model/response/saveRatingCardResponse\"));\n__export(require(\"./model/response/saveCompanyResponse\"));\n__export(require(\"./model/response/registerResponse\"));\n// Utils\n__export(require(\"./model/utils/errorResponse\"));\n__export(require(\"./model/utils/userInfoFromToken\"));\n// Helper\n__export(require(\"./helper/modelUtils\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass companyTemplate {\n    constructor(id, parentId, childrenIds, companyName, companyMainEmail, companyNotifyEmail, companyQuoteEmail, createdAt, updatedAt) {\n        this.id = id;\n        this.parentId = parentId;\n        this.childrenIds = childrenIds;\n        this.companyName = companyName;\n        this.companyMainEmail = companyMainEmail;\n        this.companyNotifyEmail = companyNotifyEmail;\n        this.companyQuoteEmail = companyQuoteEmail;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n}\nexports.companyTemplate = companyTemplate;\nclass Company extends companyTemplate {\n    constructor(id, parentId, childrenIds, companyName, companyMainEmail, companyNotifyEmail, companyQuoteEmail, createdAt, updatedAt) {\n        super(id, parentId, childrenIds, companyName, companyMainEmail, companyNotifyEmail, companyQuoteEmail, createdAt, updatedAt);\n        this.id = id;\n        this.parentId = parentId;\n        this.childrenIds = childrenIds;\n        this.companyName = companyName;\n        this.companyMainEmail = companyMainEmail;\n        this.companyNotifyEmail = companyNotifyEmail;\n        this.companyQuoteEmail = companyQuoteEmail;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n}\nexports.Company = Company;\n/**\n * This model may or may not reflect the db model, this is to give all the fields that can be added to\n * the company object when joining queries\n */\nclass CompanyExtended extends companyTemplate {\n    constructor(id, parentId, childrenIds, companyName, companyMainEmail, companyNotifyEmail, companyQuoteEmail, createdAt, updatedAt, users) {\n        super(id, parentId, childrenIds, companyName, companyMainEmail, companyNotifyEmail, companyQuoteEmail, createdAt, updatedAt);\n        this.id = id;\n        this.parentId = parentId;\n        this.childrenIds = childrenIds;\n        this.companyName = companyName;\n        this.companyMainEmail = companyMainEmail;\n        this.companyNotifyEmail = companyNotifyEmail;\n        this.companyQuoteEmail = companyQuoteEmail;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.users = users;\n    }\n}\nexports.CompanyExtended = CompanyExtended;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass JobDefinition {\n    constructor(pricingRules) {\n        this.pricingRules = pricingRules;\n    }\n}\nexports.JobDefinition = JobDefinition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DispatchRecord {\n    constructor(args) {\n        this.id = '';\n        this.flags = '';\n        this.jobType = '';\n        this.docketId = '';\n        this.orderRefId = '';\n        this.deliveryRefId = '';\n        this.pickupRefId = ''; // TODO= not in back\n        this.iCOSRef = 0;\n        this.exportCertNumber = '';\n        this.isNoDisp = false;\n        this.isQuote = false;\n        this.pickupRefId = ''; // TODO= not in back\n        this.shipperName = '';\n        this.shipperAddr = '';\n        this.consigneeName = '';\n        this.consigneeAddr = {}; // NOTE= multi line (4 lines) address\n        this.createdDate = ''; // TODO= best to be a real date obj\n        this.status = ''; // TODO= best to be a real enum obj\n        this.serviceType = ''; // TODO= best to be a real enum obj\n        this.hirePallets = 0;\n        this.nonHirePallets = 0;\n        this.lifts = 0;\n        this.hireRetn = 0;\n        this.goodsType = 0;\n        this.reqTempDeg = 0;\n        this.actualTempDeg = 0;\n        this.unloadFee = 0;\n        this.noChg = false;\n        this.noDisp = false;\n        this.reqPickupDateTime = ''; // TODO= best to be a real date obj\n        this.actPickupDateTime = ''; // TODO= best to be a real date obj\n        this.reqDeliveryTime = '';\n        this.actDeliveryTime = '';\n        this.deliveredTo = '';\n        this.hasPOD = false;\n        this.comments = ''; // TODO= set limit 255\n        this.nextDepot = ''; // TODO= load from db\n        this.deliveryDepot = ''; // TODO= load from db\n        this.currentDepot = ''; // TODO: load from db\n        this.shipPayer = '';\n        // Load in kwargs here\n        Object.assign(this, args);\n    }\n}\nexports.DispatchRecord = DispatchRecord;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PriceConfig {\n    constructor(ratingCard, tonneRate, massRate, palletRate, gstRate, flatCost, fafRate, minCharge) {\n        this.ratingCard = ratingCard;\n        this.tonneRate = tonneRate;\n        this.massRate = massRate;\n        this.palletRate = palletRate;\n        this.gstRate = gstRate;\n        this.flatCost = flatCost;\n        this.fafRate = fafRate;\n        this.minCharge = minCharge;\n    }\n}\nexports.PriceConfig = PriceConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PriceRule {\n    constructor(stepNo, type) {\n        this.stepNo = stepNo;\n        this.type = type;\n        this.compareSteps = {\n            stepA: 0,\n            stepB: 0\n        };\n    }\n    setAsGreaterNext(stepA, stepB) {\n        this.stepNo = PriceRule.NON_SEQ_STEP_NO; // reserved for non sequenciable steps i.e. filter out\n        this.type = PriceRule.TYPE.GET_GREATER_NEXT;\n        this.compareSteps.stepA = stepA;\n        this.compareSteps.stepB = stepB;\n    }\n}\n// Type of Pricing Rules\nPriceRule.TYPE = {\n    RATING_CARD: 'type_rating_card',\n    TONNE_RATE: 'type_tonne_rate',\n    MASS_RATE: 'type_mass_rate',\n    PALLET_RATE: 'type_pallet_rate',\n    // Additional Costs\n    DRIVER_COST: 'type_driver_cost',\n    UPLIFT_COST: 'type_uplift_cost',\n    FUEL_ADJUST_FEE: 'type_fuel_adjust_fee',\n    PALLET_COST: 'type_pallet_cost',\n    MIN_CHARGE: 'type_min_charge',\n    FLAT_CHARGE: 'type_flat_charge',\n    GST: 'type_gst',\n    GET_GREATER_NEXT: 'type_get_greater_next' // compares next step and chooses greater\n};\nPriceRule.NON_SEQ_STEP_NO = -1;\nexports.PriceRule = PriceRule;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PriceRuleConfig {\n    constructor(id, companyName, companyId, priceRuleSet, priceRuleLocationConditionals) {\n        this.id = id;\n        this.companyName = companyName;\n        this.companyId = companyId;\n        this.priceRuleSet = priceRuleSet;\n        this.priceRuleLocationConditionals = priceRuleLocationConditionals;\n    }\n}\nexports.PriceRuleConfig = PriceRuleConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PriceRuleLocationConditional {\n    constructor(locationList, priceRuleSet, id, name) {\n        this.locationList = locationList;\n        this.priceRuleSet = priceRuleSet;\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.PriceRuleLocationConditional = PriceRuleLocationConditional;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PriceRuleSet {\n    constructor(priceRules) {\n        this.priceRules = priceRules;\n    }\n    getPriceRules() {\n        return this.priceRules.filter((rule) => {\n            return rule && rule.stepNo && rule.stepNo > -1;\n        });\n    }\n}\nexports.PriceRuleSet = PriceRuleSet;\n","\"use strict\";\n/**\n* This file stores all of the models dedicated to the pricing level logic\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PricingLevel {\n    constructor(m3, tonne, cost) {\n        this.m3 = m3;\n        this.tonne = tonne;\n        this.cost = cost;\n    }\n}\nexports.PricingLevel = PricingLevel;\nclass PricingLevelPair {\n    constructor(locationKey, pricingLevelList) {\n        this.locationKey = locationKey;\n        this.pricingLevelList = pricingLevelList;\n    }\n}\nexports.PricingLevelPair = PricingLevelPair;\nclass MinorLocationSet {\n    constructor(pricingLevelPair) {\n        this.pricingLevelPair = pricingLevelPair;\n    }\n}\nexports.MinorLocationSet = MinorLocationSet;\nclass MajorLocationSet {\n    constructor(pricingLevelPair) {\n        this.pricingLevelPair = pricingLevelPair;\n    }\n}\nexports.MajorLocationSet = MajorLocationSet;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PricingRateLevel {\n    constructor(cost_p_tonne, cost_p_m3) {\n        this.cost_p_tonne = cost_p_tonne;\n        this.cost_p_m3 = cost_p_m3;\n    }\n}\nexports.PricingRateLevel = PricingRateLevel;\nclass PricingRateLevelPair {\n    constructor(locationKey, pricingRateLevel) {\n        this.locationKey = locationKey;\n        this.pricingRateLevel = pricingRateLevel;\n    }\n}\nexports.PricingRateLevelPair = PricingRateLevelPair;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Quote {\n    constructor(id, iCOSRef, quoteId, companyId, companyName, createdAt, updatedAt, weight, mass, cost, to, from, parentCompanyNote, parentCompanyId) {\n        this.id = id;\n        this.iCOSRef = iCOSRef;\n        this.quoteId = quoteId;\n        this.companyId = companyId;\n        this.companyName = companyName;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.weight = weight;\n        this.mass = mass;\n        this.cost = cost;\n        this.to = to;\n        this.from = from;\n        this.parentCompanyNote = parentCompanyNote;\n        this.parentCompanyId = parentCompanyId;\n    }\n}\nexports.Quote = Quote;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass QuoteInterfaceRequest {\n    constructor(to = '', from = '', weight = 0, mass = 0, palletAmount = 0, driverCost = 0, upliftCost = 0) {\n        this.to = to;\n        this.from = from;\n        this.weight = weight;\n        this.mass = mass;\n        this.palletAmount = palletAmount;\n        this.driverCost = driverCost;\n        this.upliftCost = upliftCost;\n        this.totalCalculatedCost = 0;\n        this.totalCost = 0;\n        this.tonne = this.weight * 0.001;\n    }\n}\nexports.QuoteInterfaceRequest = QuoteInterfaceRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass QuoteInterfaceResponse {\n    constructor(success, cost) {\n        this.success = success;\n        this.cost = cost;\n    }\n}\nexports.QuoteInterfaceResponse = QuoteInterfaceResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CardData {\n    constructor(id, companyId, parentCompany) {\n        this.id = id;\n        this.companyId = companyId;\n        this.parentCompany = parentCompany;\n    }\n}\nexports.CardData = CardData;\nclass RatingCard {\n    constructor(id, majorLocations, minorLocations, pricingRateLevelList, cardData) {\n        this.id = id;\n        this.majorLocations = majorLocations;\n        this.minorLocations = minorLocations;\n        this.pricingRateLevelList = pricingRateLevelList;\n        this.cardData = cardData;\n    }\n}\nexports.RatingCard = RatingCard;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UserTemplate {\n    constructor(id, username, password, companyId, parentCompanyId, updatedAt, createdAt) {\n        this.id = id;\n        this.username = username;\n        this.password = password;\n        this.companyId = companyId;\n        this.parentCompanyId = parentCompanyId;\n        this.updatedAt = updatedAt;\n        this.createdAt = createdAt;\n    }\n}\nexports.UserTemplate = UserTemplate;\nclass User extends UserTemplate {\n    constructor(id, username, password, companyId, parentCompanyId, updatedAt, createdAt) {\n        super(id, username, password, companyId, parentCompanyId, updatedAt, createdAt);\n        this.id = id;\n        this.username = username;\n        this.password = password;\n        this.companyId = companyId;\n        this.parentCompanyId = parentCompanyId;\n        this.updatedAt = updatedAt;\n        this.createdAt = createdAt;\n    }\n}\nexports.User = User;\n/**\n * This model may or may not reflect the db model, this is to give all the fields that can be added to\n * the company object when joining queries\n */\nclass UserExtended extends UserTemplate {\n    constructor(id, username, password, companyId, parentCompanyId, updatedAt, createdAt, company) {\n        super(id, username, password, companyId, parentCompanyId, updatedAt, createdAt);\n        this.id = id;\n        this.username = username;\n        this.password = password;\n        this.companyId = companyId;\n        this.parentCompanyId = parentCompanyId;\n        this.updatedAt = updatedAt;\n        this.createdAt = createdAt;\n        this.company = company;\n    }\n}\nexports.UserExtended = UserExtended;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BadRequestException extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.BadRequestException = BadRequestException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ForbiddenException extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ForbiddenException = ForbiddenException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NotFoundException extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.NotFoundException = NotFoundException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CreateRatingCardRequest {\n    constructor(companyId, majorLocations, minorLocations, pricingRateLevelList) {\n        this.companyId = companyId;\n        this.majorLocations = majorLocations;\n        this.minorLocations = minorLocations;\n        this.pricingRateLevelList = pricingRateLevelList;\n    }\n}\nexports.CreateRatingCardRequest = CreateRatingCardRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DataContainerRequest {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.DataContainerRequest = DataContainerRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetRecordsRequest {\n    constructor(page, pageSize) {\n        this.page = page;\n        this.pageSize = pageSize;\n        this.page = this.page && this.page > 0 ? this.page : 0;\n        this.pageSize = this.pageSize && this.pageSize > 0 ? this.pageSize : 20;\n    }\n}\nexports.GetRecordsRequest = GetRecordsRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass LoginRequest {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n}\nexports.LoginRequest = LoginRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RegisterRequest {\n    constructor(username, password, companyName, companyMainEmail, companyQuoteEmail, companyNotifyEmail) {\n        this.username = username;\n        this.password = password;\n        this.companyName = companyName;\n        this.companyMainEmail = companyMainEmail;\n        this.companyQuoteEmail = companyQuoteEmail;\n        this.companyNotifyEmail = companyNotifyEmail;\n    }\n}\nexports.RegisterRequest = RegisterRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ResetPasswordRequest {\n    constructor(userId, password) {\n        this.userId = userId;\n        this.password = password;\n    }\n}\nexports.ResetPasswordRequest = ResetPasswordRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SaveCompanyRequest {\n    constructor(companyName, companyMainEmail, companyQuoteEmail, companyNotifyEmail) {\n        this.companyName = companyName;\n        this.companyMainEmail = companyMainEmail;\n        this.companyQuoteEmail = companyQuoteEmail;\n        this.companyNotifyEmail = companyNotifyEmail;\n    }\n}\nexports.SaveCompanyRequest = SaveCompanyRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SavePriceRuleConfigRequest {\n    constructor(companyId, priceRuleConfigs) {\n        this.companyId = companyId;\n        this.priceRuleConfigs = priceRuleConfigs;\n    }\n}\nexports.SavePriceRuleConfigRequest = SavePriceRuleConfigRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SaveUserRequest {\n    constructor(username, password, companyId) {\n        this.username = username;\n        this.password = password;\n        this.companyId = companyId;\n    }\n}\nexports.SaveUserRequest = SaveUserRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UpdateCompanyRequest {\n    constructor(company) {\n        this.company = company;\n    }\n}\nexports.UpdateCompanyRequest = UpdateCompanyRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UpdateRatingCardRequest {\n    constructor(id, ratingCard) {\n        this.id = id;\n        this.ratingCard = ratingCard;\n    }\n}\nexports.UpdateRatingCardRequest = UpdateRatingCardRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UpdateUserRequest {\n    constructor(user) {\n        this.user = user;\n    }\n}\nexports.UpdateUserRequest = UpdateUserRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetCompaniesResponse {\n    constructor(companies) {\n        this.companies = companies;\n    }\n}\nexports.GetCompaniesResponse = GetCompaniesResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetCompanyResponse {\n    constructor(company) {\n        this.company = company;\n    }\n}\nexports.GetCompanyResponse = GetCompanyResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetCompanyUserResponse {\n    constructor(user) {\n        this.user = user;\n    }\n}\nexports.GetCompanyUserResponse = GetCompanyUserResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetCompanyUsersResponse {\n    // Returns a list of companies with their users\n    constructor(companies) {\n        this.companies = companies;\n    }\n}\nexports.GetCompanyUsersResponse = GetCompanyUsersResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getRecordsResponse_1 = require(\"./getRecordsResponse\");\nclass GetPriceRuleConfigsResponse extends getRecordsResponse_1.GetRecordsResponse {\n    constructor(page, pageSize, totalCount, records) {\n        super(page, pageSize, totalCount);\n        this.page = page;\n        this.pageSize = pageSize;\n        this.totalCount = totalCount;\n        this.records = records;\n    }\n}\nexports.GetPriceRuleConfigsResponse = GetPriceRuleConfigsResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getRecordsResponse_1 = require(\"./getRecordsResponse\");\nclass GetQuotesResponse extends getRecordsResponse_1.GetRecordsResponse {\n    constructor(page, pageSize, totalCount, records) {\n        super(page, pageSize, totalCount);\n        this.page = page;\n        this.pageSize = pageSize;\n        this.totalCount = totalCount;\n        this.records = records;\n    }\n}\nexports.GetQuotesResponse = GetQuotesResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetRatingCardResponse {\n    constructor(ratingCard) {\n        this.ratingCard = ratingCard;\n    }\n}\nexports.GetRatingCardResponse = GetRatingCardResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetRatingCardsResponse {\n    constructor(ratingCards) {\n        this.ratingCards = ratingCards;\n    }\n}\nexports.GetRatingCardsResponse = GetRatingCardsResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetRecordsResponse {\n    constructor(page, pageSize, totalCount) {\n        this.page = page;\n        this.pageSize = pageSize;\n        this.totalCount = totalCount;\n    }\n}\nexports.GetRecordsResponse = GetRecordsResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass LoginResponse {\n    constructor(username, token, company) {\n        this.username = username;\n        this.token = token;\n        this.company = company;\n    }\n}\nexports.LoginResponse = LoginResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RegisterResponse {\n    constructor(user, company) {\n        this.user = user;\n        this.company = company;\n    }\n}\nexports.RegisterResponse = RegisterResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ResetPasswordResponse {\n    constructor(user) {\n        this.user = user;\n    }\n}\nexports.ResetPasswordResponse = ResetPasswordResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SaveCompanyResponse {\n    constructor(company) {\n        this.company = company;\n    }\n}\nexports.SaveCompanyResponse = SaveCompanyResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SaveRatingCardResponse {\n    constructor(ratingCard) {\n        this.ratingCard = ratingCard;\n    }\n}\nexports.SaveRatingCardResponse = SaveRatingCardResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SaveUserResponse {\n    constructor(user, company) {\n        this.user = user;\n        this.company = company;\n    }\n}\nexports.SaveUserResponse = SaveUserResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TokenVerificationResponse {\n    constructor(errorMessage, user) {\n        this.errorMessage = errorMessage;\n        this.user = user;\n    }\n}\nexports.TokenVerificationResponse = TokenVerificationResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UpdateCompanyResponse {\n    constructor(company) {\n        this.company = company;\n    }\n}\nexports.UpdateCompanyResponse = UpdateCompanyResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UpdateRatingCardResponse {\n    constructor(ratingCard) {\n        this.ratingCard = ratingCard;\n    }\n}\nexports.UpdateRatingCardResponse = UpdateRatingCardResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UpdateUserResponse {\n    constructor(user) {\n        this.user = user;\n    }\n}\nexports.UpdateUserResponse = UpdateUserResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ErrorResponse {\n    constructor(error, message) {\n        this.error = error;\n        this.message = message;\n    }\n}\nexports.ErrorResponse = ErrorResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass UserInfoFromToken {\n    // Treat as a session class\n    constructor(userId, parentCompanyId, companyId, companyName, username, access) {\n        this.userId = userId;\n        this.parentCompanyId = parentCompanyId;\n        this.companyId = companyId;\n        this.companyName = companyName;\n        this.username = username;\n        this.access = access;\n    }\n}\nexports.UserInfoFromToken = UserInfoFromToken;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-white justify-content-between\\\">\\n    <div>\\n        <!-- become dynamic post mvp -->\\n        <img src=\\\"assets/titus-logo.png\\\" class=\\\"mt-1 mr-2 float-left img-thumbnail\\\" style=\\\"background-color: black; filter: invert(100%);\\\">\\n        <h1 class=\\\"mr-3 float-left\\\">{{'TITUS TRANSPORT'}}</h1>\\n    </div>\\n    <div [hidden]=\\\"!isLoggedIn\\\">\\n        <a routerLink=\\\"login\\\" (click)=\\\"logout()\\\" class=\\\"nav-link float-right\\\" routerLinkActive=\\\"active\\\">\\n            Logout\\n        </a>\\n        <div class=\\\"float-right pt-2 pt-2\\\">\\n            {{username}} | {{altCompanyName}}\\n        </div>\\n    </div>\\n</nav>\\n\\n<div class=\\\"row\\\">\\n    <div [hidden]=\\\"!isLoggedIn\\\" class=\\\"col-md-2 card\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"container-fluid\\\">\\n                <ul class=\\\"navbar-nav\\\">\\n\\n                    <li [hidden]=\\\"isLoggedIn || (!enabledFeature.login || !enabledPermission.login)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"login\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Login\\n                        </a>\\n                    </li>\\n\\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.dispatch || !enabledPermission.dispatch)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"dispatch\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Freight Dispatch\\n                        </a>\\n                    </li> \\n\\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.quote || !enabledPermission.quote)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"dispatch/quote\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Dispatch Quotes\\n                        </a>\\n                    </li> \\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.user || !enabledPermission.user)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"user\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Manage Users\\n                        </a>\\n                    </li>\\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.company || !enabledPermission.company)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"company\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Manage Customers\\n                        </a>\\n                    </li>\\n\\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.uploadDispatch || !enabledPermission.uploadDispatch)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"dispatch/upload\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Import CSV\\n                        </a>\\n                    </li>\\n\\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.ratingCard || !enabledPermission.ratingCard)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"rating-card\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Manage Rating Card\\n                        </a>\\n                    </li>\\n\\n                    <li [hidden]=\\\"!isLoggedIn || (!enabledFeature.priceRule || !enabledPermission.priceRule)\\\" class=\\\"nav-item\\\">\\n                        <a routerLink=\\\"price-rule\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n                            Manage Price Rules\\n                        </a>\\n                    </li>\\n\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n<ngx-spinner></ngx-spinner>\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <button [routerLink]=\\\"['/company']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n</div>\\n\\n<h2 *ngIf=\\\"!isEdit\\\">Create Company</h2>\\n<h2 *ngIf=\\\"isEdit\\\">Update Company</h2>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Customer Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n          formControlName=\\\"CompanyName\\\" \\n          #CompanyName />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['CompanyName'].invalid && (angForm.controls['CompanyName'].dirty || angForm.controls['CompanyName'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['CompanyName'].errors.required\\\">\\n          Customer Name is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Main Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n        formControlName=\\\"CompanyMainEmail\\\" \\n        #CompanyMainEmail/>\\n      </div>\\n      <div *ngIf=\\\"!isEdit && angForm.controls['CompanyMainEmail'].invalid && (angForm.controls['CompanyMainEmail'].dirty || angForm.controls['CompanyMainEmail'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['CompanyMainEmail'].errors.required\\\">\\n          Main Email is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Quote Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n        formControlName=\\\"CompanyQuoteEmail\\\" \\n        #CompanyQuoteEmail/>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Notify Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n        formControlName=\\\"CompanyNotifyEmail\\\" \\n        #CompanyNotifyEmail/>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\" *ngIf=\\\"!isEdit\\\">\\n        <button (click)=\\\"save()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n              [disabled]=\\\"!angForm.touched\\\">\\n              Create Customer\\n        </button>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"isEdit\\\">\\n          <button (click)=\\\"update()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n              [disabled]=\\\"\\\">\\n              Update Customer\\n          </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<h2>Customers</h2>\\n\\n<button routerLink=\\\"/company/create\\\" class=\\\"btn\\\">Create Customer</button>\\n<button (click) = \\\"refresh()\\\" class=\\\"btn\\\">Refresh</button>\\n\\n<div class=\\\"row\\\">\\n\\n<div class=\\\"col-md-12 overflow-auto\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <td>Customer Name</td>\\n                <td>Created on</td>\\n                <td>Updated on</td>\\n\\n                <td colspan=\\\"2\\\">Actions</td>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr style=\\\"cursor: pointer\\\" (click)=\\\"rowSelected(company)\\\"\\n                [class.bg-dark]=\\\"isRowSelected(company)\\\"\\n                [class.text-white]=\\\"isRowSelected(company)\\\"*ngFor=\\\"let company of companies\\\">\\n                <td>{{ company.companyName }}</td>\\n                <td>{{ company.createdAt }}</td>\\n                <td>{{ company.updatedAt }}</td>\\n                <td><a [routerLink]=\\\"['/company/edit', company.id]\\\" class=\\\"btn text-primary\\\">Edit</a></td>\\n                <td>\\n                    <a [hidden]=\\\"company.showDeleteConfirmButton\\\" (click)=\\\"company.showDeleteConfirmButton = true\\\" class=\\\"btn text-primary\\\">Delete</a>\\n                    <a [hidden]=\\\"!company.showDeleteConfirmButton\\\" (click)=\\\"deleteEntity(company)\\\" class=\\\"btn text-primary\\\">Confirm</a>\\n                    <a [hidden]=\\\"!company.showDeleteConfirmButton\\\" (click)=\\\"company.showDeleteConfirmButton = false\\\" class=\\\"btn text-primary\\\">Cancel</a>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h2>Create Dispatch</h2>\\n        <form [formGroup]=\\\"angForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Freight Payer</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"shipPayer\\\" #shipPayer/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['shipPayer'].invalid && (angForm.controls['shipPayer'].dirty || angForm.controls['shipPayer'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['shipPayer'].errors.required\\\">\\n                    shipPayer is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Pickup Ref:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"pickupRefId\\\" #pickupRefId/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['pickupRefId'].invalid && (angForm.controls['pickupRefId'].dirty || angForm.controls['pickupRefId'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['pickupRefId'].errors.required\\\">\\n                    Pickup Reference is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Docket Ref:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"docketId\\\" #docketId/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['docketId'].invalid && (angForm.controls['docketId'].dirty || angForm.controls['docketId'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['docketId'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Order Ref:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"orderRefId\\\" #orderRefId/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['orderRefId'].invalid && (angForm.controls['orderRefId'].dirty || angForm.controls['orderRefId'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['orderRefId'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Delivery Ref:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"deliveryRefId\\\" #deliveryRefId/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['deliveryRefId'].invalid && (angForm.controls['deliveryRefId'].dirty || angForm.controls['deliveryRefId'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['deliveryRefId'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Export Cert No:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"exportCertNumber\\\" #exportCertNumber/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['exportCertNumber'].invalid && (angForm.controls['exportCertNumber'].dirty || angForm.controls['exportCertNumber'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['exportCertNumber'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n            \\n\\n\\n          jobType\\n\\n          isNoDisp\\n\\n          isQuote\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Shipper Name:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"shipperName\\\" #shipperName/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['shipperName'].invalid && (angForm.controls['shipperName'].dirty || angForm.controls['shipperName'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['shipperName'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Shipper Address:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"shipperAddr\\\" #shipperAddr/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['shipperAddr'].invalid && (angForm.controls['shipperAddr'].dirty || angForm.controls['shipperAddr'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['shipperAddr'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Consignee Name:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"consigneeName\\\" #consigneeName/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['consigneeName'].invalid && (angForm.controls['consigneeName'].dirty || angForm.controls['consigneeName'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['consigneeName'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <span>\\n                <label class=\\\"col-md-2\\\">Consignee Address:</label>\\n                <div class=\\\"form-group\\\">\\n                    <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"consigneeAddr1\\\" #consigneeAddr1/>\\n                    <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"consigneeAddr2\\\" #consigneeAddr2/>\\n                    <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"consigneeAddr3\\\" #consigneeAddr3/>\\n                    <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"consigneeAddr4\\\" #consigneeAddr4/>\\n                </div>\\n            </span>\\n\\n            <div>\\n                add section for GENERAL and NOTES AND COMMENTS\\n            </div>\\n\\n          createdDate\\n          status\\n          \\n          <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Service Type:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"serviceType\\\" #serviceType/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['serviceType'].invalid && (angForm.controls['serviceType'].dirty || angForm.controls['serviceType'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['serviceType'].errors.required\\\">\\n                    Pickup docket id is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Pallets to Hire:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"hirePallets\\\" #hirePallets/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Non Hire Pallets:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"nonHirePallets\\\" #nonHirePallets/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Lifts:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"lifts\\\" #lifts/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Hire Return:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"hireRetn\\\" #hireRetn/>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Goods Type:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"goodsType\\\" #goodsType/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Required Temp:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"reqTempDeg\\\" #reqTempDeg/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Actual Temp:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"actualTempDeg\\\" #actualTempDeg/>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Unload Fee:</label>\\n                <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" formControlName=\\\"unloadFee\\\" #unloadFee/>\\n            </div>\\n\\n          noChg\\n\\n          noDisp\\n\\n          reqPickupDateTime\\n\\n          actPickupDateTime\\n\\n\\n          reqDeliveryTime\\n\\n          actDeliveryTime\\n\\n\\n\\n          deliveredTo\\n\\n          hasPOD\\n        \\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Comments:</label>\\n                <textarea class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\"\\n                          formControlName=\\\"comments\\\" \\n                          #comments></textarea>\\n            </div>\\n\\n\\n          nextDepot\\n\\n          deliveryDepot\\n\\n          currentDepot\\n\\n          <div class=\\\"form-group\\\">\\n              <button (click) = \\\"addDispatch({\\n                                    shipPayer: shipPayer.value, \\n                                    pickupRefId: pickupRefId.value,\\n                                    docketId: docketId.value,\\n                                    orderRefId: orderRefId.value,\\n                                    deliveryRefId: deliveryRefId.value,\\n                                    exportCertNumber: exportCertNumber.value,\\n\\n                                    shipperName: shipperName.value,\\n                                    shipperAddr: shipperAddr.value,\\n                                    consigneeName: consigneeName.value,\\n                                    consigneeAddr1: consigneeAddr1.value,\\n                                    consigneeAddr2: consigneeAddr2.value,\\n                                    consigneeAddr3: consigneeAddr3.value,\\n                                    consigneeAddr4: consigneeAddr4.value,\\n\\n                                    serviceType: serviceType.value,\\n                                    hirePallets: hirePallets.value,\\n                                    nonHirePallets: nonHirePallets.value,\\n                                    lifts: lifts.value,\\n                                    hireRetn: hireRetn.value,\\n                                    goodsType: goodsType.value,\\n                                    reqTempDeg: reqTempDeg.value,\\n                                    actualTempDeg: actualTempDeg.value,\\n                                    unloadFee: unloadFee.value,\\n\\n                                    comments : comments.value\\n                                    })\\\"\\n                                    type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                  Save and New\\n              </button>\\n          </div>\\n            <div class=\\\"form-group\\\">\\n                <button (click) = \\\"addDispatch({\\n                                    shipPayer: shipPayer.value, \\n                                    pickupRefId: pickupRefId.value,\\n                                    docketId: docketId.value,\\n                                    orderRefId: orderRefId.value,\\n                                    deliveryRefId: deliveryRefId.value,\\n                                    exportCertNumber: exportCertNumber.value,\\n\\n                                    shipperName: shipperName.value,\\n                                    shipperAddr: shipperAddr.value,\\n                                    consigneeName: consigneeName.value,\\n                                    consigneeAddr1: consigneeAddr1.value,\\n                                    consigneeAddr2: consigneeAddr2.value,\\n                                    consigneeAddr3: consigneeAddr3.value,\\n                                    consigneeAddr4: consigneeAddr4.value,\\n\\n                                    serviceType: serviceType.value,\\n                                    hirePallets: hirePallets.value,\\n                                    nonHirePallets: nonHirePallets.value,\\n                                    lifts: lifts.value,\\n                                    hireRetn: hireRetn.value,\\n                                    goodsType: goodsType.value,\\n                                    reqTempDeg: reqTempDeg.value,\\n                                    actualTempDeg: actualTempDeg.value,\\n                                    unloadFee: unloadFee.value,\\n\\n                                    comments : comments.value\\n                                    }\\n                                    )\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n                    Save Booking\\n                </button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n\\n\"","module.exports = \"<!--<button routerLink=\\\"/dispatch/create\\\" class=\\\"btn\\\">Create Job</button>-->\\n<div class=\\\"row\\\">\\n    <button [routerLink]=\\\"['/price-rule/']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n</div>\\n\\n<h2>Dispatch Jobs</h2>\\n\\n<button routerLink=\\\"/dispatch/quote\\\" class=\\\"btn\\\">Create Quote</button>\\n\\n<button (click) = \\\"refreshJobs()\\\" class=\\\"btn\\\">Refresh</button>\\n\\n<div class=\\\"row\\\">\\n\\n<div class=\\\"col-md-9 overflow-auto\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <td>ICOS REF</td>\\n                <td>Customer</td>\\n                <td>Shipper Name</td>\\n                <td>Consignee Name</td>\\n                <td>Status</td>\\n                <td>Deliver From</td>\\n                <td>Deliver To</td>\\n\\n                <td colspan=\\\"2\\\">Actions</td>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr style=\\\"cursor: pointer\\\" (click)=\\\"rowSelected(job)\\\" [class.bg-dark]=\\\"isRowSelected(job)\\\" [class.text-white]=\\\"isRowSelected(job)\\\"*ngFor=\\\"let job of jobs\\\">\\n                <td>{{ job.iCOSRef }}</td>\\n                <td>{{ job.customer }}</td>\\n                <td>{{ job.bookedBy }}</td>\\n                <td>{{ job.deliver }}</td>\\n                <td>{{ job.status }}</td>\\n                <td>{{ job.from }}</td>\\n                <td>{{ job.goingTo }}</td>\\n                <td><a [routerLink]=\\\"['/edit', job._id]\\\" class=\\\"btn text-primary\\\">Edit</a></td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n\\n<div class=\\\"col-md-3\\\">\\n<h3>Job Details</h3>\\n    <div *ngFor=\\\"let job of selectedJobs\\\">\\n\\n        <hr>\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <h5 class=\\\"float-left\\\" style=\\\"cursor: pointer\\\">ICOS REF: {{ job.iCOSRef }}</h5>\\n                <div class=\\\"float-right\\\"><a [routerLink]=\\\"['dispatch/edit', job._id]\\\" class=\\\"btn text-primary\\\">Edit</a></div>\\n            </div>\\n                <div class=\\\"row\\\" style=\\\"cursor: pointer\\\">Status: {{ job.status }}</div>\\n                <div class=\\\"row\\\" style=\\\"cursor: pointer\\\">Customer: {{ job.customer }}</div>\\n                <div class=\\\"row\\\" style=\\\"cursor: pointer\\\">Booked By: {{ job.bookedBy }}</div>\\n                <div class=\\\"row\\\" style=\\\"cursor: pointer\\\">Deliver: {{ job.deliver }}</div>\\n                <div class=\\\"row\\\" style=\\\"cursor: pointer\\\">From: {{ job.from }}</div>\\n                <div class=\\\"row\\\" style=\\\"cursor: pointer\\\">To: {{ job.goingTo }}</div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\\n\\n</div>\\n\\n\"","module.exports = \"<!--\\n<div class=\\\"row\\\">\\n    <button [routerLink]=\\\"['/']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n</div>\\n-->\\n\\n<h2>Dispatch Quotes</h2>\\n\\n<button routerLink=\\\"/dispatch/quote/create\\\" class=\\\"btn\\\">Create Quote</button>\\n\\n<button (click) = \\\"refreshQuotes()\\\" class=\\\"btn\\\">Refresh</button>\\n\\n<div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <button class=\\\"btn btn-outline-dark dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Quote ID</button>\\n        <div class=\\\"dropdown-menu\\\">\\n            <a class=\\\"dropdown-item\\\">Date</a>\\n            <a class=\\\"dropdown-item\\\">Customer</a>\\n            <a class=\\\"dropdown-item\\\">Tonne</a>\\n            <a class=\\\"dropdown-item\\\">Volume</a>\\n            <div role=\\\"separator\\\" class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\">Advanced Search</a>\\n        </div>\\n\\n    </div>\\n    <input (keydown.enter)=\\\"searchQuotes()\\\" [(ngModel)]=\\\"searchTerm\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"searchInput\\\">\\n\\n    <div class=\\\"input-group-append\\\">\\n        <button (click)=\\\"searchQuotes()\\\" class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\">Search</button> \\n    </div>\\n</div>\\n\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Quote REF</td>\\n      <td>Customer</td>\\n      <td>Quoted On</td>\\n      <td>Deliver From</td>\\n      <td>Deliver To</td>\\n      <td>Volume (m3)</td>\\n      <td>Kg</td>\\n      <td>Cost</td>\\n\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr style=\\\"cursor: pointer\\\" (click)=\\\"rowSelected(quote)\\\" [class.bg-dark]=\\\"isRowSelected(quote)\\\" [class.text-white]=\\\"isRowSelected(quote)\\\"*ngFor=\\\"let quote of quotes\\\">\\n          <td>{{ quote.quoteId }}</td>\\n          <td>{{ quote.companyName }}</td>\\n          <td>{{ quote.createdAt }}</td>\\n          <td>{{ quote.from }}</td>\\n          <td>{{ quote.to }}</td>\\n          <td>{{ quote.mass }}</td>\\n          <td>{{ quote.weight }}</td>\\n          <td>${{ quote.cost }}</td>\\n          <td><a [routerLink]=\\\"['edit', quote.id]\\\" class=\\\"btn text-primary\\\">Edit</a></td>\\n      </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"row ml-1 mt-1\\\">\\n        <button [routerLink]=\\\"['/dispatch/quote']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <h2 [hidden]=\\\"!isEdit\\\">Edit Dispatch Quote</h2>\\n        <h2 [hidden]=\\\"isEdit\\\">Create Dispatch Quote</h2>\\n        <div class=\\\"row mr-1\\\">\\n            <p [hidden]=\\\"!isEdit\\\" class=\\\"col-md-12\\\">ID: {{quoteId}}</p>\\n        </div>\\n        <form [formGroup]=\\\"angForm\\\" novalidate>\\n            \\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">To</label>\\n                <select class=\\\"form-control\\\" type=\\\"text\\\" class= \\\"form-control\\\" formControlName=\\\"to\\\" #to>\\n                    <option *ngFor=\\\"let loc of locationOptions\\\" value=\\\"{{loc.value}}\\\">{{loc.userValue}}</option>\\n                </select>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">From</label>\\n                <select class=\\\"form-control\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"from\\\" #from>\\n                    <option *ngFor=\\\"let loc of locationOptions\\\" value=\\\"{{loc.value}}\\\">{{loc.userValue}}</option>\\n                </select>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Weight (kg)</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"weight\\\" #weight/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['weight'].invalid && (angForm.controls['weight'].dirty || angForm.controls['weight'].touched)\\\" \\n                class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['weight'].errors.required\\\">\\n                    weight is required.\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Volume (m3)</label>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"mass\\\" #mass/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['mass'].invalid && (angForm.controls['mass'].dirty || angForm.controls['mass'].touched)\\\" \\n                class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['mass'].errors.required\\\">\\n                    mass is required.\\n                </div>\\n            </div>\\n\\n            <div [hidden]=\\\"hideCommentField\\\" class=\\\"form-group\\\">\\n                <label class=\\\"col-md-2\\\">Comment</label>\\n                <textarea class=\\\"form-control\\\" formControlName=\\\"comment\\\" #comment></textarea>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <button \\n                 [hidden]=\\\"true\\\"\\n                (click) = \\\"getQuote({\\n                                      to: to.selectedIndex,\\n                                      from: from.selectedIndex,\\n                                      weight: weight.value,\\n                                      mass: mass.value,\\n                                      comment: comment.value\\n                                      })\\\"\\n                 type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\">\\n                    Get Quote\\n                </button>\\n\\n                <button (click) = \\\"saveQuote()\\\"\\n                 type=\\\"submit\\\" class=\\\"btn btn-primary ml-1 float-right\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\">\\n                    Save\\n                </button>\\n            </div>\\n        </form>\\n        \\n        <h2>Quoted Amount ${{ cost }}</h2> \\n        <div class=\\\"text-secondary\\\">\\n        * Please note that the above quoted cost may not reflect the same cost as the invoice. This is due to other variable costs such as fuel adjustment fees, uplifts, driver related expenses, etc which may be excluded.\\n        </div>\\n    </div>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <button [routerLink]=\\\"['/price-rule/']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n</div>\\n\\n<h2>Upload Job Export</h2>\\n\\n<div class=\\\"card\\\">\\n    <div>\\n        <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" placeholder=\\\"Upload file\\\" accept=\\\".xls, .xlsx, .pdf, .csv\\\" style=\\\"padding-left: 5px\\\">\\n    </div>\\n    <button (click) = \\\"upload()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"> Upload Jobs</button>\\n    <div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"showError\\\">\\n            We have encountered an error with the file upload, please try again later\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"showSuccess\\\" class=\\\"alert alert-success\\\">\\n        <div *ngIf=\\\"showSuccess\\\">\\n            You have successfully uploaded the dispatch file\\n        </div>\\n    </div>\\n\\n    File Contents:\\n    <br>\\n    <div id=\\\"fileContent\\\"></div>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card\\\" style=\\\"width: 30rem; margin-left: 45%; margin-top: 10%;\\\">\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-md-4\\\">Username</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" #username/>\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"angForm.controls['username'].errors.required\\\">\\n                        Username is required.\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-md-4\\\">Password</label>\\n                    <input class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\" type=\\\"password\\\"formControlName=\\\"password\\\" #password/>\\n                </div>\\n\\n                <div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\n                        Password is required.\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"showError\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"showError\\\">\\n                        Invalid Username or Password\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <button (click) = \\\"login(username.value,  password.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                        Login\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n                <button [routerLink]=\\\"['/price-rule/']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <h2 [hidden]=\\\"isEdit\\\">Create Quote Price Rule</h2>\\n                <h2 [hidden]=\\\"!isEdit\\\">Edit Quote Price Rule</h2>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <button (click)=\\\"addLocationConditional()\\\" class=\\\"btn btn-outline-dark\\\">Add Location Filter</button>\\n                <button (click)=\\\"removeLocationConditionalByIdx(currentConditionalsIdx)\\\" class=\\\"btn btn-outline-dark\\\">Remove Location Filter</button>\\n                <button (click)=\\\"savePriceRuleConfig()\\\" class=\\\"btn btn-outline-dark float-right\\\">Save</button>\\n            </div>\\n\\n            <div class=\\\"col-12 my-2\\\">\\n                <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-6\\\">\\n                        <div class=\\\"row\\\">\\n                            <label class=\\\"col-md-3\\\" [class.col-md-6]=\\\"isEdit\\\">Company: {{ isEdit ? config.companyName : '' }}</label>\\n                            <select *ngIf=\\\"!isEdit\\\" class=\\\"form-control col-md-6\\\" [(ngModel)]=\\\"currentCompany\\\">\\n                                <option *ngFor=\\\"let company of companyOptions\\\" [value]=\\\"company.value\\\">\\n                                {{company.label}}\\n                                </option>\\n                            </select>\\n                             \\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-6\\\">\\n                        <div class=\\\"row\\\">\\n                            <label class=\\\"col-md-4\\\">Location Filter: </label>\\n                            <select class=\\\"form-control col-md-6\\\" (change)=\\\"setCurrentLocationConditionalIdx($event.target.value)\\\">\\n                                <option *ngFor=\\\"let conditional of config.priceRuleLocationConditionals; let filterNo = index\\\" [value]=\\\"filterNo\\\">\\n                                {{conditional.name + '-' + (filterNo+1)}}\\n                                </option>\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n\\n        <div *ngIf=\\\"config.priceRuleLocationConditionals.length > 0\\\" class=\\\"card col-md-3 float-right\\\" style=\\\"max-height:75vh; overflow-y: scroll;\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5>Select Locations</h5>\\n                <tbody>\\n                    <tr style=\\\"cursor: pointer\\\"\\n                 (click)=\\\"toggleLocation(location)\\\"\\n                 [class.bg-primary]=\\\"isLocationSelected(location)\\\"\\n                 [class.text-white]=\\\"isLocationSelected(location) || isLocationAlreadySelectedByOtherConditional(location)\\\"\\n\\n                 [class.bg-secondary]=\\\"isLocationAlreadySelectedByOtherConditional(location)\\\"\\n                 *ngFor=\\\"let location of locations\\\">\\n                        {{location.userValue}}\\n                    </tr>\\n                </tbody>\\n            </div>\\n        </div>\\n        \\n        <div [class.col-md-12] =\\\"config.priceRuleLocationConditionals.length === 0\\\"\\n            class=\\\"card col-md-9 float-left\\\">\\n            <div class=\\\"card-body\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <h5>Quote Rules</h5>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <button *ngIf=\\\"config.priceRuleLocationConditionals.length === 0\\\" (click)=\\\"addRule()\\\"\\n                            class=\\\"btn btn-outline-dark float-right\\\">Add Rule</button>\\n                        <button *ngIf=\\\"config.priceRuleLocationConditionals.length > 0\\\" (click)=\\\"addRule(currentConditionalsIdx)\\\" class=\\\"btn btn-outline-dark float-right\\\">Add Rule</button>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mt-3\\\">\\n                    <div *ngIf=\\\"config.priceRuleLocationConditionals.length === 0\\\">\\n                        <div *ngFor=\\\"let rule of config.priceRuleSet.priceRules; let ruleIndex = index\\\" class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"row mb-2\\\">\\n                                    <div class=\\\"ml-2\\\" *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\">\\n                                        <b>Comparitor</b>\\n                                    </div>\\n                                    <div class=\\\"ml-2\\\" *ngIf=\\\"rule.type !== PRICE_RULE_TYPE.GET_GREATER_NEXT\\\">\\n                                        <b>Step {{rule.stepNo}}</b>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"row\\\">\\n                                    <label class=\\\"float-left\\\">Type:</label>\\n                                    <select class=\\\"form-control float-left\\\" [(ngModel)]=\\\"rule.type\\\" (change)=\\\"onRuleTypeSelectionChange($event.target.value)\\\">\\n                                        <option *ngFor=\\\"let ruleType of priceRuleOptions\\\" [value]=\\\"ruleType.value\\\">\\n                                        {{ruleType.label}}\\n                                        </option>\\n                                    </select>\\n\\n                                    <label *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-2\\\">Step A:</label>\\n                                    <input type=\\\"number\\\" *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-1\\\" [(ngModel)]=\\\"rule.compareSteps.stepA\\\">\\n\\n                                    <label *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-2\\\">Step B:</label>\\n                                    <input type=\\\"number\\\" *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-1\\\" [(ngModel)]=\\\"rule.compareSteps.stepB\\\">\\n                                </div>\\n\\n                                <button (click)=\\\"removeRule(rule)\\\" class=\\\"btn btn-outline-dark float-right mt-1\\\">Remove</button>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"config.priceRuleLocationConditionals.length > 0\\\">\\n                        <div *ngFor=\\\"let rule of config.priceRuleLocationConditionals[currentConditionalsIdx].priceRuleSet.priceRules;\\n                            let ruleIndex = index\\\" class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"row mb-2\\\">\\n                                    <div class=\\\"ml-2\\\" *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\">\\n                                        <b>Comparitor</b>\\n                                    </div>\\n                                    <div class=\\\"ml-2\\\" *ngIf=\\\"rule.type !== PRICE_RULE_TYPE.GET_GREATER_NEXT\\\">\\n                                        <b>Step {{rule.stepNo}}</b>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"row\\\">\\n                                    <label class=\\\"col-md-2\\\">Type:</label>\\n                                    <select class=\\\"form-control col-md-4\\\" [(ngModel)]=\\\"rule.type\\\" (change)=\\\"onRuleTypeSelectionChange($event.target.value)\\\">\\n                                        <option *ngFor=\\\"let ruleType of priceRuleOptions\\\" [value]=\\\"ruleType.value\\\">\\n                                        {{ruleType.label}}\\n                                        </option>\\n                                    </select>\\n\\n                                    <label *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-2\\\">Step A:</label>\\n                                    <input type=\\\"number\\\" *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-1\\\" [(ngModel)]=\\\"rule.compareSteps.stepA\\\">\\n\\n                                    <label *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-2\\\">Step B:</label>\\n                                    <input type=\\\"number\\\" *ngIf=\\\"rule.type === PRICE_RULE_TYPE.GET_GREATER_NEXT\\\" class=\\\"col-md-1\\\" [(ngModel)]=\\\"rule.compareSteps.stepB\\\">\\n                                </div>\\n\\n                                <button (click)=\\\"removeRule(rule)\\\" class=\\\"btn btn-outline-dark float-right mt-1\\\">Remove</button>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        \\n</div>\\n\"","module.exports = \"<h2>Price Rules</h2>\\n\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12 overflow-auto\\\">\\n\\n        <button [routerLink]=\\\"['/price-rule/manage']\\\" class=\\\"btn\\\">Create New</button>\\n        <button (click) = \\\"refresh()\\\" class=\\\"btn\\\">Refresh</button>\\n\\n        <div class=\\\"row\\\">\\n        </div>\\n        <table class=\\\"table table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <td>Id</td>\\n                    <td>Customer Name</td>\\n                    <td>Created on</td>\\n                    <td>Updated on</td>\\n                    <td colspan=\\\"2\\\">Actions</td>\\n\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr *ngFor=\\\"let config of priceRuleConfigs\\\">\\n                    <td> {{ config.id }} </td>\\n                    <td> {{ config.companyName }} </td>\\n                    <td> {{ config.createdAt }} </td>\\n                    <td> {{ config.updatedAt }} </td>\\n                    <td>\\n                        <a [routerLink]=\\\"['edit', config.id]\\\" class=\\\"btn text-primary\\\">Edit</a>\\n                    </td>\\n                    <td>\\n                        <a [hidden]=\\\"config.showDeleteConfirmButton\\\" (click)=\\\"config.showDeleteConfirmButton = true\\\" class=\\\"btn text-primary\\\">Delete</a>\\n                        <a [hidden]=\\\"!config.showDeleteConfirmButton\\\" (click)=\\\"deleteEntity(config)\\\" class=\\\"btn text-primary\\\">Confirm</a>\\n                        <a [hidden]=\\\"!config.showDeleteConfirmButton\\\" (click)=\\\"config.showDeleteConfirmButton = false\\\" class=\\\"btn text-primary\\\">Cancel</a>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Product Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n          formControlName=\\\"ProductName\\\" \\n          #ProductName />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['ProductName'].invalid && (angForm.controls['ProductName'].dirty || angForm.controls['ProductName'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['ProductName'].errors.required\\\">\\n          Product Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Product Description </label>\\n        <textarea class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\"\\n        formControlName=\\\"ProductDescription\\\" \\n        #ProductDescription></textarea>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['ProductDescription'].invalid && (angForm.controls['ProductDescription'].dirty || angForm.controls['ProductDescription'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['ProductDescription'].errors.required\\\">\\n          Product Description is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Product Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n          formControlName=\\\"ProductPrice\\\" \\n          #ProductPrice\\n        />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['ProductPrice'].invalid && (angForm.controls['ProductPrice'].dirty || angForm.controls['ProductPrice'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['ProductPrice'].errors.required\\\">\\n          Product Price is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click) = \\\"addProduct(ProductName.value, ProductDescription.value, ProductPrice.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n          Create Product\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Product Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n          formControlName=\\\"ProductName\\\" \\n          #ProductName \\n          [(ngModel)] = \\\"product.ProductName\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['ProductName'].invalid && (angForm.controls['ProductName'].dirty || angForm.controls['ProductName'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['ProductName'].errors.required\\\">\\n          Product Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Product Description </label>\\n        <textarea class=\\\"form-control\\\" rows = 7 cols = \\\"5\\\"\\n        formControlName=\\\"ProductDescription\\\" \\n        #ProductDescription [(ngModel)] = \\\"product.ProductDescription\\\"></textarea>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['ProductDescription'].invalid && (angForm.controls['ProductDescription'].dirty || angForm.controls['ProductDescription'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['ProductDescription'].errors.required\\\">\\n          Product Description is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Product Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n          formControlName=\\\"ProductPrice\\\" \\n          #ProductPrice\\n          [(ngModel)] = \\\"product.ProductPrice\\\"\\n        />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['ProductPrice'].invalid && (angForm.controls['ProductPrice'].dirty || angForm.controls['ProductPrice'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['ProductPrice'].errors.required\\\">\\n          Product Price is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button (click) = \\\"updateProduct(ProductName.value, ProductDescription.value, ProductPrice.value, 0)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n        [disabled]=\\\"angForm.invalid\\\" >\\n          Update Product\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <button [routerLink]=\\\"['/rating-card']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n</div>\\n\\n<h2 *ngIf=\\\"!isEdit\\\">Create Rating Card</h2>\\n<h2 *ngIf=\\\"isEdit\\\">Update Rating Card</h2>\\n\\n<div class=\\\"card col-md-3 float-left\\\" style=\\\"max-height:75vh; overflow-y: scroll;\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5>Select Location</h5>\\n        <tbody>\\n            <tr\\n         style=\\\"cursor: pointer\\\"\\n         (click)=\\\"selectLocation(location)\\\"\\n         [class.bg-primary]=\\\"location.isSelected\\\"\\n         [class.text-white]=\\\"location.isSelected\\\"\\n         *ngFor=\\\"let location of locations\\\">\\n                {{location.userValue}}\\n            </tr>\\n        </tbody>\\n    </div>\\n</div>\\n\\n<div class=\\\"card col-md-9 float-right\\\">\\n  <div class=\\\"card-body\\\">\\n\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"float-left\\\"\\n                   [class.col-md-6]=\\\"isEdit\\\"\\n                   [class.col-md-2]=\\\"!isEdit\\\"\\n                >Company{{isEdit ? ': '+ratingCard.companyName : ''}}</label>\\n            <select [hidden]=\\\"isEdit\\\" \\n                   class=\\\"form-control col-md-6 float-left\\\"\\n                   formControlName=\\\"CompanyOption\\\"\\n                   #CompanyOption>\\n                <option *ngFor=\\\"let company of companyOptions\\\">\\n                {{company.label}}\\n                </option>\\n          </select>\\n      </div>\\n\\n      <div class=\\\"form-group float-right\\\" *ngIf=\\\"!isEdit\\\">\\n          <button (click)=\\\"save(CompanyOption.selectedIndex)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\">\\n              Create Rating Card\\n        </button>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"isEdit\\\">\\n          <button (click)=\\\"update()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\">\\n              Update Rating Card\\n          </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"card col-md-9 float-right\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5>{{selectedLocation ? selectedLocation.userValue : 'Location'}} Rates</h5>\\n        <table *ngIf=\\\"maxRates\\\" class=\\\"table table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <td>Tonne Rate</td>\\n                    <td>Volume Rate (m3)</td>\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr style=\\\"cursor: pointer\\\">\\n                    <td>\\n                        <input [(ngModel)]=\\\"maxRates.cost_p_tonne\\\" type=\\\"number\\\">\\n                    </td>\\n\\n                    <td>\\n                        <input [(ngModel)]=\\\"maxRates.cost_p_m3\\\" type=\\\"number\\\">\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n        <table *ngIf=\\\"minorPriceLevels\\\" class=\\\"table table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <td>Tonne</td>\\n                    <td>Volume (m3)</td>\\n                    <td>Cost</td>\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr\\n                                        style=\\\"cursor: pointer\\\"\\n                                        *ngFor=\\\"let majorLocation of minorPriceLevels\\\">\\n                    <td>\\n                        <input [(ngModel)]=\\\"majorLocation.tonne\\\" type=\\\"number\\\">\\n                    </td>\\n\\n                    <td>\\n                        <input [(ngModel)]=\\\"majorLocation.m3\\\" type=\\\"number\\\">\\n                    </td>\\n\\n                    <td>\\n                        <input [(ngModel)]=\\\"majorLocation.cost\\\" type=\\\"number\\\">\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n        <table *ngIf=\\\"majorPriceLevels\\\" class=\\\"table table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <td>Tonne</td>\\n                    <td>Volume (m3)</td>\\n                    <td>Cost</td>\\n                </tr>\\n            </thead>\\n\\n            <tbody>\\n                <tr\\n                                        style=\\\"cursor: pointer\\\"\\n                                        *ngFor=\\\"let majorLocation of majorPriceLevels\\\">\\n                    <td>\\n                        <input [(ngModel)]=\\\"majorLocation.tonne\\\" type=\\\"number\\\">\\n                    </td>\\n\\n                    <td>\\n                        <input [(ngModel)]=\\\"majorLocation.m3\\\" type=\\\"number\\\">\\n                    </td>\\n\\n                    <td>\\n                        <input [(ngModel)]=\\\"majorLocation.cost\\\" type=\\\"number\\\">\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n</div>\\n\\n\"","module.exports = \"<h2>Rating Cards</h2>\\n\\n<button routerLink=\\\"/rating-card/create\\\" class=\\\"btn\\\">Create Rating Card</button>\\n<button (click) = \\\"refresh()\\\" class=\\\"btn\\\">Refresh</button>\\n\\n<div class=\\\"row\\\">\\n\\n<div class=\\\"col-md-12 overflow-auto\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <td>Id</td>\\n                <td>Customer Name</td>\\n                <td>Created on</td>\\n                <td>Updated on</td>\\n\\n                <td colspan=\\\"2\\\">Actions</td>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr\\n                style=\\\"cursor: pointer\\\"\\n                (click)=\\\"rowSelected(ratingCard)\\\"\\n                [class.bg-dark]=\\\"isRowSelected(ratingCard)\\\"\\n                [class.text-white]=\\\"isRowSelected(ratingCard)\\\"\\n                *ngFor=\\\"let ratingCard of ratingCards\\\">\\n                <td>{{ ratingCard ? ratingCard.cardData.id : '' }}</td>\\n                <td>{{ ratingCard.companyName ? ratingCard.companyName : 'Default Card' }}</td>\\n                <td>{{ ratingCard.cardData ? ratingCard.cardData.createdAt : '' }}</td>\\n                <td>{{ ratingCard.cardData ? ratingCard.cardData.updatedAt : '' }}</td>\\n                <td><a [routerLink]=\\\"['/rating-card/edit', ratingCard.cardData.id]\\\" class=\\\"btn text-primary\\\">Edit</a></td>\\n                <td>\\n                    <a [hidden]=\\\"ratingCard.showDeleteConfirmButton\\\" (click)=\\\"ratingCard.showDeleteConfirmButton = true\\\" class=\\\"btn text-primary\\\">Delete</a>\\n                    <a [hidden]=\\\"!ratingCard.showDeleteConfirmButton\\\" (click)=\\\"deleteEntity(ratingCard)\\\" class=\\\"btn text-primary\\\">Confirm</a>\\n                    <a [hidden]=\\\"!ratingCard.showDeleteConfirmButton\\\" (click)=\\\"ratingCard.showDeleteConfirmButton = false\\\" class=\\\"btn text-primary\\\">Cancel</a>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n</div>\\n\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <button [routerLink]=\\\"['/user']\\\" class=\\\"btn\\\"><h5 class=\\\"text-primary\\\">Back</h5></button>\\n</div>\\n\\n<h2 *ngIf=\\\"!isEdit\\\">Create User</h2>\\n<h2 *ngIf=\\\"isEdit\\\">Update User</h2>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" \\n          formControlName=\\\"Username\\\" \\n          #Username />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['Username'].invalid && (angForm.controls['Username'].dirty || angForm.controls['Username'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['Username'].errors.required\\\">\\n          Username is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\" *ngIf=\\\"!isEdit\\\">Password</label>\\n        <label class=\\\"col-md-4\\\" *ngIf=\\\"isEdit\\\">New Password</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n        formControlName=\\\"Password\\\" \\n        #Password/>\\n      </div>\\n      <div *ngIf=\\\"!isEdit && angForm.controls['Password'].invalid && (angForm.controls['Password'].dirty || angForm.controls['Password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['Password'].errors.required\\\">\\n          Password is required.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-2\\\">Company</label>\\n          <select class=\\\"form-control\\\"\\n              formControlName=\\\"CompanyOption\\\"\\n              #CompanyOption>\\n              <option *ngFor=\\\"let company of companyOptions\\\">{{company.label}}</option>\\n          </select>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\" *ngIf=\\\"!isEdit\\\">\\n        <button (click)=\\\"saveUser(Username.value, Password.value, CompanyOption.selectedIndex)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n              [disabled]=\\\"!angForm.touched\\\">\\n              Create User\\n        </button>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"isEdit\\\">\\n          <button (click)=\\\"updateUser(Username.value, Password.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n              [disabled]=\\\"\\\">\\n              Update User\\n          </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<h2>Users</h2>\\n\\n<button routerLink=\\\"/user/create\\\" class=\\\"btn\\\">Create User</button>\\n<button (click) = \\\"refresh()\\\" class=\\\"btn\\\">Refresh</button>\\n\\n<div class=\\\"row\\\">\\n\\n<div class=\\\"col-md-12 overflow-auto\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <td>Username</td>\\n                <td>Company</td>\\n                <td>Created on</td>\\n                <td>Updated on</td>\\n\\n                <td colspan=\\\"2\\\">Actions</td>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr style=\\\"cursor: pointer\\\" (click)=\\\"rowSelected(user)\\\"\\n                [class.bg-dark]=\\\"isRowSelected(user)\\\"\\n                [class.text-white]=\\\"isRowSelected(user)\\\"*ngFor=\\\"let user of users\\\">\\n                <td>{{ user.username }}</td>\\n                <td>{{ user.company.companyName }}</td>\\n                <td>{{ user.createdAt }}</td>\\n                <td>{{ user.updatedAt }}</td>\\n                <td><a [routerLink]=\\\"['/user/edit', user.id]\\\" class=\\\"btn text-primary\\\">Edit</a></td>\\n                <td>\\n                    <a [hidden]=\\\"user.showDeleteConfirmButton\\\" (click)=\\\"user.showDeleteConfirmButton = true\\\" class=\\\"btn text-primary\\\">Delete</a>\\n                    <a [hidden]=\\\"!user.showDeleteConfirmButton\\\" (click)=\\\"deleteUser(user)\\\" class=\\\"btn text-primary\\\">Confirm</a>\\n                    <a [hidden]=\\\"!user.showDeleteConfirmButton\\\" (click)=\\\"user.showDeleteConfirmButton = false\\\" class=\\\"btn text-primary\\\">Cancel</a>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n</div>\\n\\n\"","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppFeatureService {\n    public EnabledFeature: any = {\n        login: true,\n        user: true,\n        company: true,\n        dispatch: false,\n        quote: true,\n        ratingCard: true,\n        uploadDispatch: false,\n        priceRule: true,\n        logout: true\n    };\n    constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { DispatchGetComponent } from './dispatch-get/dispatch-get.component';\nimport { DispatchQuoteGetComponent } from './dispatch-quote-get/dispatch-quote-get.component';\n\nimport { DispatchAddComponent } from './dispatch-add/dispatch-add.component';\nimport { DispatchUploadComponent } from './dispatch-upload/dispatch-upload.component';\nimport { DispatchQuoteComponent } from './dispatch-quote/dispatch-quote.component';\n\nimport { ManagePriceRuleComponent } from './price-rule-add/manage-price-rule.component';\nimport { PriceRuleListComponent } from './price-rule-list/price-rule-list.component';\n\nimport { UserListComponent } from './user-get/user-get.component';\nimport { UserAddComponent } from './user-add/user-add.component';\n\nimport { CompanyListComponent } from './company-get/company-get.component';\nimport { CompanyAddComponent } from './company-add/company-add.component';\n\nimport { RatingCardListComponent } from './rating-card-get/rating-card-get.component';\nimport { RatingCardAddComponent } from './rating-card-add/rating-add.component';\n\nconst routePath = {\n    CREATE_DISPATCH:  'dispatch/create',\n    EDIT_DISPATCH:  'dispatch/edit/:id',\n    GET_DISPATCH:  'dispatch/',\n\n    CREATE_DISPATCH_QUOTE:  'dispatch/quote/create',\n    EDIT_DISPATCH_QUOTE:  'dispatch/quote/edit/:id',\n    GET_DISPATCH_QUOTE:  'dispatch/quote/',\n\n    CREATE_PRICE_RULE:  'price-rule/manage',\n    EDIT_PRICE_RULE:  'price-rule/edit/:id',\n    GET_PRICE_RULE:  'price-rule',\n\n    GET_USER: 'user',\n    CREATE_USER: 'user/create',\n    EDIT_USER: 'user/edit/:id',\n\n    GET_COMPANY: 'company',\n    CREATE_COMPANY: 'company/create',\n    EDIT_COMPANY: 'company/edit/:id',\n\n    GET_RATING_CARD: 'rating-card',\n    CREATE_RATING_CARD: 'rating-card/create',\n    EDIT_RATING_CARD: 'rating-card/edit/:id',\n\n    LOGIN:  'login'\n};\nconst routes: Routes = [\n  {\n    path: 'product/create',\n    component: ProductAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: ProductEditComponent\n  },\n  {\n    path: 'dispatch',\n    component: DispatchGetComponent\n  },\n  {\n    path: 'dispatch/create',\n    component: DispatchAddComponent\n  },\n  {\n    path: 'dispatch/quote/create',\n    component: DispatchQuoteComponent\n  },\n  {\n    path: 'dispatch/quote/edit/:id',\n    component: DispatchQuoteComponent\n  },\n  {\n    path: 'dispatch/quote',\n    component: DispatchQuoteGetComponent\n  },\n  {\n    path: 'dispatch/upload',\n    component: DispatchUploadComponent\n  },\n  {\n    path: routePath.CREATE_PRICE_RULE,\n    component: ManagePriceRuleComponent\n  },\n  {\n    path: routePath.EDIT_PRICE_RULE,\n    component: ManagePriceRuleComponent\n  },\n  {\n    path: routePath.GET_PRICE_RULE,\n    component: PriceRuleListComponent\n  },\n  {\n    path: routePath.GET_USER,\n    component: UserListComponent\n  },\n  {\n    path: routePath.CREATE_USER,\n    component: UserAddComponent\n  },\n  {\n    path: routePath.EDIT_USER,\n    component: UserAddComponent\n  },\n  {\n    path: routePath.GET_COMPANY,\n    component: CompanyListComponent\n  },\n  {\n    path: routePath.CREATE_COMPANY,\n    component: CompanyAddComponent\n  },\n  {\n    path: routePath.EDIT_COMPANY,\n    component: CompanyAddComponent\n  },\n  {\n    path: routePath.GET_RATING_CARD,\n    component: RatingCardListComponent\n  },\n  {\n    path: routePath.CREATE_RATING_CARD,\n    component: RatingCardAddComponent\n  },\n  {\n    path: routePath.EDIT_RATING_CARD,\n    component: RatingCardAddComponent\n  },\n  {\n    path: routePath.LOGIN,\n    component: LoginComponent\n  },\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const ROUTE_PATH = routePath;\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigationCancel,\n    Event,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { AppFeatureService } from './app-feature-config.service';\nimport { StorageService } from './storage.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    title = 'Fr8Front';\n    isLoggedIn = false;\n    isRedir = false;\n\n    altCompanyName = '';\n    companyName = '';\n    username = '';\n\n    enabledFeature: any = {};\n    enabledPermission: any = {};\n    constructor(private router: Router, private ls: LoginService,\n                private FeatureService: AppFeatureService, private storage: StorageService) {\n        const userInfo = ls.getUserInfo();\n        this.companyName = userInfo && userInfo.company ? userInfo.company.companyName : '';\n        this.altCompanyName = this.companyName.toUpperCase();\n        this.username = userInfo && userInfo.username ? userInfo.username : '';\n\n        this.enabledFeature = FeatureService.EnabledFeature;\n        this.enabledPermission = this.ls.getPermissions();\n\n        this.router.events.subscribe((event: Event) => {\n            this.navigationInterceptor(event);\n        });\n    }\n    private navigationInterceptor(event: Event): void {\n        // console.log(this.isRedir, event);\n        if (event instanceof NavigationStart) {\n        }\n        if (event instanceof NavigationEnd) {\n            if (!this.isLoggedIn && !this.isRedir) {\n                this.isRedir = true;\n                this.router.navigate(['login']);\n            } else {\n                this.isRedir = false;\n            }\n        }\n        if (event instanceof NavigationCancel) {\n            this.isRedir = false;\n        }\n        if (event instanceof NavigationError) {\n            this.isRedir = false;\n        }\n    }\n\n    logout(): void {\n        this.ls.logout();\n    }\n\n    ngOnInit() {\n        if (this.ls.initToken()) {\n            this.isLoggedIn = true;\n        }\n        this.companyName =  this.ls.userInfo.company.companyName;\n        this.altCompanyName = this.companyName.toUpperCase();\n        this.username = this.ls.userInfo.username;\n        this.enabledPermission = this.ls.getPermissions();\n\n        this.ls.changedObj.subscribe(userInfo => {\n            this.companyName =  this.ls.userInfo.company.companyName;\n            this.altCompanyName = this.companyName.toUpperCase();\n            this.username = this.ls.userInfo.username;\n            this.enabledPermission = this.ls.getPermissions();\n        });\n        this.ls.changed.subscribe(isLoggedIn => {\n            console.log(isLoggedIn);\n            this.isLoggedIn = isLoggedIn;\n            this.companyName = '';\n            this.altCompanyName = '';\n            this.username = '';\n            this.enabledPermission = this.ls.getPermissions();\n        });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxSpinnerModule  } from 'ngx-spinner';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule  } from '@angular/platform-browser/animations';\n\nimport { NotyfToastSuccess } from './notify-success-toastr';\nimport { NotyfToastFail } from './notify-fail-toastr';\n\n\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { DispatchGetComponent } from './dispatch-get/dispatch-get.component';\nimport { DispatchAddComponent } from './dispatch-add/dispatch-add.component';\nimport { DispatchUploadComponent } from './dispatch-upload/dispatch-upload.component';\nimport { DispatchQuoteComponent } from './dispatch-quote/dispatch-quote.component';\nimport { DispatchQuoteGetComponent } from './dispatch-quote-get/dispatch-quote-get.component';\n\nimport { RatingCardListComponent } from './rating-card-get/rating-card-get.component';\nimport { RatingCardAddComponent } from './rating-card-add/rating-add.component';\n\nimport { ManagePriceRuleComponent } from './price-rule-add/manage-price-rule.component';\nimport { PriceRuleListComponent } from './price-rule-list/price-rule-list.component';\n\nimport { UserListComponent } from './user-get/user-get.component';\nimport { UserAddComponent } from './user-add/user-add.component';\n\nimport { CompanyListComponent } from './company-get/company-get.component';\nimport { CompanyAddComponent } from './company-add/company-add.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DispatchQuoteService } from './dispatch-quote/dispatch-quote.service';\nimport { QuotePriceLevelService } from './dispatch-quote/quote-price-level.service';\nimport { QuoteInterface } from './dispatch-quote/quote-interface';\nimport { QuoteConfig } from './dispatch-quote/quote-config.service';\n\nimport { DispatchService } from './dispatch.service';\nimport { DispatchGateway } from './dispatch.gateway';\nimport { DispatchUploader } from './dispatch-uploader.service';\nimport { DispatchProvider } from './dispatch.provider';\nimport { LoginService } from './login.service';\nimport { StorageService } from './storage.service';\nimport { AppFeatureService } from './app-feature-config.service';\nimport { AuthProvider } from './auth.provider';\n\nimport { RatingCardService } from './rating-card.service';\nimport { LocationService } from './location.service';\n\n@NgModule({\n    declarations: [\n        NotyfToastFail,\n        NotyfToastSuccess,\n        AppComponent,\n        ProductAddComponent,\n        DispatchGetComponent,\n        ProductEditComponent,\n        DispatchAddComponent,\n        DispatchUploadComponent,\n        LoginComponent,\n        ManagePriceRuleComponent,\n        PriceRuleListComponent,\n        DispatchQuoteComponent,\n        DispatchQuoteGetComponent,\n        UserListComponent,\n        UserAddComponent,\n        CompanyListComponent,\n        CompanyAddComponent,\n        RatingCardListComponent,\n        RatingCardAddComponent\n    ],\n    imports: [\n        FormsModule,\n        BrowserAnimationsModule,\n        NgxSpinnerModule,\n        ToastrModule.forRoot(),\n        BrowserModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule\n    ],\n    providers: [\n        LocationService,\n        RatingCardService,\n        AppFeatureService,\n        DispatchQuoteService,\n        QuotePriceLevelService,\n        QuoteConfig,\n        QuoteInterface,\n        DispatchUploader,\n        DispatchService,\n        DispatchGateway,\n        DispatchProvider,\n        AuthProvider,\n        LoginService,\n        StorageService\n    ],\n    entryComponents: [\n        NotyfToastFail,\n        NotyfToastSuccess\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders  } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment  } from '../environments/environment';\nimport { LoginService } from './login.service';\n\nimport {\n    RegisterRequest,\n    SaveCompanyRequest,\n    SaveUserRequest,\n    UpdateUserRequest,\n    UpdateCompanyRequest,\n    ResetPasswordRequest,\n\n    RegisterResponse,\n    SaveCompanyResponse,\n    SaveUserResponse,\n    UpdateUserResponse,\n    UpdateCompanyResponse,\n    ResetPasswordResponse,\n\n    GetCompanyUserResponse,\n    GetCompanyResponse,\n\n    GetCompanyUsersResponse,\n    GetCompaniesResponse,\n\n    User,\n    Company,\n    CompanyExtended,\n} from 'fr8models';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGateway {\n\n    private uriCompany = environment.production ? environment.backendUrl + '/company' : 'http://localhost/company';\n    private uriAuth = environment.production ? environment.backendUrl + '/auth' : 'http://localhost/auth';\n    private uriUser = this.uriCompany + '/user';\n\n    private httpOptions: any;\n    private ls: LoginService;\n\n    constructor(private http: HttpClient, ls: LoginService) {\n        this.ls = ls;\n    }\n\n    public getUserUri(id: number) {\n        return `${this.uriCompany}/${id}/user`;\n    }\n\n    public setHeaders(): void {\n        this.httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type':  'application/json',\n                Authorization: this.ls.getToken()\n            })\n        };\n    }\n\n    public async deleteUser(id: number): Promise<any> {\n        this.setHeaders();\n        const promise = this.http.delete(`${this.uriUser}/${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Deleting Company User', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<any>;\n    }\n\n    public async deleteCompany(id: number): Promise<any> {\n        this.setHeaders();\n        const promise = this.http.delete(`${this.uriCompany}/${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Deleting Company', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<any>;\n    }\n\n    public async getCompanyUser(id: number, companyId: number): Promise<GetCompanyUserResponse> {\n        this.setHeaders();\n        const promise = this.http.get(`${this.getUserUri(companyId)}${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Creating Company User', hres);\n            return hres as GetCompanyUserResponse;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<GetCompanyUserResponse>;\n    }\n\n    public async getAllCompanyUsers(companyId: number): Promise<CompanyExtended[]> {\n        this.setHeaders();\n        const promise =  this.http.get(this.getUserUri(companyId), this.httpOptions)\n        .toPromise().then((raw) => {\n            console.log('Done Getting Company Users', raw);\n            const res = raw as GetCompanyUsersResponse;\n            return res.companies;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<CompanyExtended[]>;\n    }\n\n    public async getCompany(): Promise<GetCompanyResponse> {\n        this.setHeaders();\n        const promise = this.http.get(`${this.uriAuth}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Getting Company', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<GetCompanyResponse>;\n    }\n\n    public async getAllCompanies(): Promise<Company[]> {\n        this.setHeaders();\n        const promise = this.http.get(`${this.uriCompany}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Getting Companies', hres);\n            const res = hres as GetCompaniesResponse;\n            return res.companies;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<Company[]>;\n    }\n\n    public async updateCompany(companyId: number, company: Company): Promise<Company> {\n        this.setHeaders();\n        const req: UpdateCompanyRequest = new UpdateCompanyRequest(company);\n        const promise = this.http.put(`${this.uriCompany}/${companyId}`, req, this.httpOptions)\n        .toPromise().then((raw) => {\n            const res = raw as UpdateCompanyResponse;\n            console.log('Done Updating Company', res);\n            return res && res.company ? res.company as Company : null;\n        }, (err) => {\n            console.log('Err', err);\n            return null;\n        });\n\n        return promise as Promise<Company>;\n    }\n\n    public async saveCompany(name, mainEmail, quoteEmail, notifyEmail): Promise<Company> {\n        this.setHeaders();\n        const req: SaveCompanyRequest = new SaveCompanyRequest(name, mainEmail, quoteEmail, notifyEmail);\n        const promise = this.http.post(`${this.uriCompany}`, req, this.httpOptions)\n        .toPromise().then((raw) => {\n            const res = raw as SaveUserResponse;\n            console.log('Done Creating Company', res);\n            return res && res.company ? res.company as Company : null;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<Company>;\n    }\n\n    public async postUser(username: string, password: string, companyId: number): Promise<User> {\n        this.setHeaders();\n        const req: SaveUserRequest = new SaveUserRequest(username, password, companyId);\n        const promise = this.http.post(`${this.uriAuth}/register`, req, this.httpOptions)\n        .toPromise().then((raw) => {\n            const res = raw as SaveUserResponse;\n            console.log('Done Creating User', res);\n            return res && res.user ? res.user as User : null;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<User>;\n    }\n\n    public async updateUser(userId: number, user: User): Promise<User> {\n        this.setHeaders();\n        const req: UpdateUserRequest = new UpdateUserRequest(user);\n        const promise = this.http.put(`${this.uriUser}/${userId}`, req, this.httpOptions)\n        .toPromise().then((raw) => {\n            const res = raw as UpdateUserResponse;\n            console.log('Done Updating User', res);\n            return res && res.user ? res.user as User : null;\n        }, (err) => {\n            console.log('Err', err);\n            return null;\n        });\n\n        return promise as Promise<User>;\n    }\n\n    public async resetUserPassword(userId: number, password: string): Promise<User> {\n        this.setHeaders();\n        const req: ResetPasswordRequest = new ResetPasswordRequest(userId, password);\n        const promise = this.http.post(`${this.uriAuth}/reset`, req, this.httpOptions)\n        .toPromise().then((raw) => {\n            const res = raw as ResetPasswordResponse;\n            console.log('Done Reseting password User', res);\n            return res && res.user ? res.user as User : null;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<User>;\n    }\n\n    public async postCompany(companyName: string, companyMainEmail: string, companyNotifyEmail: string,\n                             companyQuoteEmail): Promise<Company> {\n        this.setHeaders();\n        const req: SaveCompanyRequest = new SaveCompanyRequest(companyName, companyMainEmail, companyNotifyEmail, companyQuoteEmail);\n        const promise = this.http.post(`${this.uriCompany}`, req, this.httpOptions)\n        .toPromise().then((raw) => {\n            const res = raw as SaveCompanyResponse;\n            console.log('Done Creating Company', res);\n            return res && res.company ? res.company as Company : null;\n        }, (err) => {\n            console.log('Err', err);\n        });\n\n        return promise as Promise<Company>;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { LoginService } from './login.service';\nimport { AuthService } from './auth.service';\n\nimport { UserExtended, Company, User } from 'fr8models';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthProvider {\n\n    constructor(public loginService: LoginService, public authService: AuthService) { }\n\n    login(username, password): Promise<any>  {\n        return this.loginService.login(username, password);\n    }\n\n    logout(): void {\n        this.loginService.logout();\n    }\n\n    async listCompanies(): Promise<any> {\n        return await this.authService.listCompanies();\n    }\n\n    async getCompanies(): Promise<Company[]> {\n        return this.authService.getCompanies();\n    }\n\n    getCompanyOptions(): any[] {\n        return this.authService.getCompanyOptions();\n    }\n\n    getCompany(id: number): Company {\n        return this.authService.getCompany(id);\n    }\n\n    async saveCompany(name, mainEmail, quoteEmail, notifyEmail): Promise<any> {\n        return this.authService.saveCompany(name, mainEmail, quoteEmail, notifyEmail);\n    }\n\n    async updateCompany(company: Company): Promise<any> {\n        return this.authService.updateCompanyWithModel(company);\n    }\n\n    async removeCompany(id: number): Promise<any> {\n        return this.authService.deleteCompany(id);\n    }\n\n    async listUsers(): Promise<any> {\n        return this.authService.listUsers();\n    }\n\n    async getMyUsers(): Promise<UserExtended[]> {\n        return this.authService.getUsers();\n    }\n\n    async getCompanyUsers(id: number): Promise<any> {\n        return await [];\n    }\n\n    getUser(id: number): UserExtended {\n        return this.authService.getUser(id);\n    }\n\n    async saveUser(userId: number, username: string, password: string, companyId: number): Promise<any> {\n        return this.authService.addUser(userId, username, password, companyId);\n    }\n\n    async updateUser(user: User): Promise<any> {\n        return this.authService.updateUserWithModel(user);\n    }\n\n    async resetPassword(userId: number, password: string): Promise<any> {\n        return this.authService.resetUserPassword(userId, password);\n    }\n\n    async removeUser(id: number): Promise<any> {\n        return this.authService.deleteUser(id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User, Company, CompanyExtended, UserExtended } from 'fr8models';\nimport { AuthGateway } from './auth.gateway';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    public me: User;\n    public usersExt: UserExtended[];\n    public companies: Company[];\n    public companiesExt: CompanyExtended[];\n\n    constructor(private http: HttpClient, private ag: AuthGateway, private ls: LoginService) { }\n\n    addUser(userId: number, username: string, password: string, companyId: number): Promise<any> {\n        return this.saveUser(username, password, companyId);\n    }\n\n    // Gateway func\n    // Company\n    async listCompanies(): Promise<any> {\n        return this.ag.getAllCompanies().then(\n            (companies) => {\n                this.companies = companies;\n            }\n        );\n    }\n\n    getCompanies(): Company[] {\n        return this.companies;\n    }\n\n    getCompanyOptions(): any[] {\n        return this.companies.map((company) => {\n            return {\n                label: company.companyName,\n                value: company.id\n            };\n        });\n    }\n\n    getCompany(id: number): Company {\n        const companyList = this.companies.filter(\n            (company) => {\n                return company.id === id;\n            }\n        );\n        return companyList.length > 0 ? companyList[0] : null;\n    }\n\n    async saveCompany(name, mainEmail, quoteEmail, notifyEmail): Promise<Company> {\n        return this.ag.saveCompany(name, mainEmail, quoteEmail, notifyEmail);\n    }\n\n    updateCompanyWithModel(company: Company) {\n        const companyId = company.id;\n        return this.ag.updateCompany(companyId, company);\n    }\n\n    deleteCompany(id): Promise<any> {\n        return this.ag.deleteCompany(id)\n        .then(() => {\n            this.companies = this.companies.filter((company) => {\n                return company.id !== id;\n            });\n        });\n    }\n\n    // Users\n    async saveUser(username: string, password: string, companyId: number): Promise<User> {\n        return this.ag.postUser(username, password, companyId);\n    }\n\n    getUsers(): UserExtended[] {\n        return this.usersExt;\n    }\n\n    getUser(id): UserExtended {\n        return this.usersExt ? this.usersExt.filter(user => {\n            return user.id === id;\n        })[0] : null;\n    }\n\n    listUsers(): Promise<void> {\n        return this.ag.getAllCompanyUsers(this.ls.getUserCompanyId())\n            .then((records) => {\n                this.companiesExt = records;\n                this.usersExt = this.extendUserObjList(records);\n            });\n    }\n\n    updateUserWithModel(user: User) {\n        const userId = user.id;\n        return this.ag.updateUser(userId, user);\n    }\n\n    resetUserPassword(userId: number, password: string) {\n        return this.ag.resetUserPassword(userId, password);\n    }\n\n    deleteUser(id): Promise<any> {\n        return this.ag.deleteUser(id)\n        .then(() => {\n            this.usersExt = this.usersExt.filter((user) => {\n                return user.id !== id;\n            });\n        });\n    }\n\n    // Helper func\n    extendUserObjList(companyExtList: CompanyExtended[]): UserExtended[] {\n        const resList: UserExtended[] = [];\n        companyExtList.forEach((company: CompanyExtended) => {\n            const companyCopy: Company = JSON.parse(JSON.stringify(company)) as CompanyExtended;\n            console.log(companyCopy);\n            const userList: User[] = JSON.parse(JSON.stringify(company.users));\n            userList.forEach((user: User) => {\n                (user as UserExtended).company = company;\n                resList.push(user);\n            });\n        });\n\n        return resList;\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnktYWRkL2NvbXBhbnktYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthProvider } from '../auth.provider';\nimport { Company, User } from 'fr8models';\nimport { ComponentHelper } from '../component-helper';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { NotyfToastSuccess } from '../notify-success-toastr';\nimport { NotyfToastFail } from '../notify-fail-toastr';\n\n@Component({\n    selector: 'app-company-add',\n    templateUrl: './company-add.component.html',\n    styleUrls: ['./company-add.component.css']\n})\nexport class CompanyAddComponent implements OnInit {\n\n    public companies: Company[];\n    public selectedCompanyIndex: number;\n    public dbId: number;\n    public isEdit = false;\n    public company;\n\n    public angForm: FormGroup;\n\n    constructor(private fb: FormBuilder, private router: Router, private ap: AuthProvider,\n                private toastr: ToastrService) {\n        this.isEdit = ComponentHelper.isEditView(router);\n        this.dbId = ComponentHelper.getId(this.isEdit, router);\n        this.company = this.dbId ? ap.getCompany(this.dbId) : new Company();\n\n        this.createForm(this.company);\n    }\n\n    createForm(entity) {\n        this.angForm = this.fb.group({\n            CompanyName: [entity.companyName, Validators.required],\n            CompanyMainEmail: [entity.companyMainEmail, Validators.required],\n            CompanyQuoteEmail: [entity.companyQuoteEmail],\n            CompanyNotifyEmail: [entity.companyNotifyEmail]\n        });\n    }\n\n    async update() {\n        const raw = this.angForm.getRawValue();\n        console.log('Edit:', raw);\n        this.company.companyName = raw.CompanyName;\n        this.company.companyMainEmail = raw.CompanyMainEmail;\n        this.company.companyQuoteEmail = raw.CompanyQuoteEmail;\n        this.company.companyNotifyEmail = raw.CompanyNotifyEmail;\n\n        const updateUserPromise = this.ap.updateCompany(this.company).then((res) => {\n            this.onSave(res, 'Updated Company ' + this.company.companyName,\n                'Failed to Update Company ' + this.company.companyName, ['company']);\n        }).catch((err) => {\n            this.onSave(null, 'Updated User ' + this.company.companyName,\n                'Failed to Update User ' + this.company.companyName, ['company']);\n            console.log(err);\n        });\n    }\n\n    save() {\n        const raw = this.angForm.getRawValue();\n        this.ap.saveCompany(raw.CompanyName,\n            raw.CompanyMainEmail,\n            raw.CompanyQuoteEmail,\n            raw.CompanyNotifyEmail)\n            .then((res) => {\n                this.onSave(res, 'Saved Company ' + name,\n                    'Failed to Save Company ' + name, ['company']);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    onSave(res: any, successMessage: string, failMessage: string, redirUri?: string[]) {\n        console.log('onSaveObj', res);\n\n        successMessage = successMessage ? successMessage : 'Saved Company';\n        failMessage = failMessage ? failMessage : 'Failed to Save Company';\n\n        const opt = JSON.parse(JSON.stringify(this.toastr.toastrConfig));\n        opt.positionClass = 'toast-bottom-right';\n        opt.toastClass = 'notyf confirm';\n        if (res) {\n            opt.toastComponent = NotyfToastSuccess;\n            this.toastr.success(successMessage, '', opt);\n            if (redirUri) {\n                this.router.navigate(redirUri);\n            }\n        } else {\n            opt.toastComponent = NotyfToastFail;\n            this.toastr.error(failMessage, '', opt);\n        }\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnktZ2V0L2NvbXBhbnktZ2V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { Company } from 'fr8models';\nimport { AuthProvider } from '../auth.provider';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-company-get',\n  templateUrl: './company-get.component.html',\n  styleUrls: ['./company-get.component.css']\n})\nexport class CompanyListComponent implements OnInit {\n    private companies: Company[];\n    private selectedCompanies: Company[];\n    constructor(private authProvider: AuthProvider) { }\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.companies = [];\n        this.selectedCompanies = [];\n        this.authProvider.listCompanies()\n            .then(() => this.authProvider.getCompanies())\n            .then((companies) => {\n                this.companies = companies;\n            });\n    }\n\n    rowSelected(company: Company) {\n        if (!_.includes(this.selectedCompanies, company)) {\n            this.selectedCompanies.push(company);\n        } else {\n            this.selectedCompanies = this.selectedCompanies.filter((compare: Company) => {\n                return compare !== Company;\n            });\n        }\n    }\n\n    isRowSelected(selected: Company) {\n        return _.includes(this.selectedCompanies, selected);\n    }\n\n    deleteEntity(company: Company) {\n        this.authProvider.removeCompany(company.id)\n            .then(() => this.authProvider.getCompanies())\n            .then((companies) => {\n                this.companies = companies;\n            });\n    }\n}\n","export class ComponentHelper {\n    constructor() { }\n\n    /**\n     * Since the angular select form only returns\n     * label as value of selected, use this reverse lookup\n     * to get the value of the selected option\n     */\n    public static reverseLookUpSelectedDropdownValue(selectedIndex: any, options: any[]): any {\n        return options && options.length - 1 >= selectedIndex ? options[selectedIndex] : null;\n    }\n\n    public static getId(isEdit, router): number {\n        if (isEdit) {\n            const urlBits = router.url.split('/');\n            return parseInt(urlBits[urlBits.length - 1], 10);\n        } else {\n            return null;\n        }\n    }\n\n    public static isEditView(router): boolean {\n        return router.url.indexOf('edit') > -1;\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BhdGNoLWFkZC9kaXNwYXRjaC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { DispatchRecord } from 'fr8models';\nimport { DispatchProvider } from '../dispatch.provider';\n\n@Component({\n  selector: 'app-dispatch-add',\n  templateUrl: './dispatch-add.component.html',\n  styleUrls: ['./dispatch-add.component.css']\n})\nexport class DispatchAddComponent implements OnInit {\n\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder, private router: Router, private dispatchProvider: DispatchProvider) {\n    this.createForm();\n  }\n\n  createForm() {\n      this.angForm = this.fb.group({\n          shipPayer: ['', Validators.required ],\n          flags: ['', Validators.required ],\n          jobType: ['', Validators.required ],\n          docketId: ['', Validators.required ],\n          orderRefId: ['', Validators.required ],\n          deliveryRefId: ['', Validators.required ],\n          pickupRefId: ['', Validators.required ],\n          exportCertNumber: ['', Validators.required ],\n\n          isNoDisp: ['', Validators.required ],\n          isQuote: ['', Validators.required ],\n\n          shipperName: ['', Validators.required ],\n          shipperAddr: ['', Validators.required ],\n\n          consigneeName: ['', Validators.required ],\n          consigneeAddr1: ['', Validators.required ], // NOTE: multi line (4 lines) address\n          consigneeAddr2: ['', Validators.required ], // NOTE: multi line (4 lines) address\n          consigneeAddr3: ['', Validators.required ], // NOTE: multi line (4 lines) address\n          consigneeAddr4: ['', Validators.required ], // NOTE: multi line (4 lines) address\n\n          createdDate: ['', Validators.required ], // TODO: best to be a real date obj\n          status: ['', Validators.required ], // TODO: best to be a real enum obj\n          serviceType: ['', Validators.required ], // TODO: best to be a real enum obj\n\n          hirePallets: ['', Validators.required ],\n          nonHirePallets: ['', Validators.required ],\n\n          lifts: ['', Validators.required ],\n          hireRetn: ['', Validators.required ],\n          goodsType: ['', Validators.required ],\n\n          reqTempDeg: ['', Validators.required ],\n          actualTempDeg: ['', Validators.required ],\n\n          unloadFee: ['', Validators.required ],\n          noChg: ['', Validators.required ],\n          noDisp: ['', Validators.required ],\n\n          reqPickupDateTime: ['', Validators.required ], // TODO: best to be a real date obj\n          actPickupDateTime: ['', Validators.required ], // TODO: best to be a real date obj\n\n          reqDeliveryTime: ['', Validators.required ],\n          actDeliveryTime: ['', Validators.required ],\n\n          deliveredTo: ['', Validators.required ],\n          hasPOD: ['', Validators.required ],\n          comments: ['', Validators.required ], // TODO: set limit 255\n\n          nextDepot: ['', Validators.required ], // TODO: load from db\n          deliveryDepot: ['', Validators.required ], // TODO: load from db\n          currentDepot: ['', Validators.required ], // TODO: load from db\n      });\n  }\n\n  addDispatch(args: any) {\n      const newDispatch = new DispatchRecord(args);\n      this.dispatchProvider.addDispatch(newDispatch)\n        .then(() => {\n          this.router.navigate(['products']);\n        }).catch((e) => {\n        });\n  }\n\n  addDispatchAndNew(args: any) {\n      const newDispatch = new DispatchRecord(args);\n      this.dispatchProvider.addDispatch(newDispatch);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BhdGNoLWdldC9kaXNwYXRjaC1nZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { DispatchRecord } from 'fr8models';\nimport { DispatchProvider } from '../dispatch.provider';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-dispatch-get',\n  templateUrl: './dispatch-get.component.html',\n  styleUrls: ['./dispatch-get.component.css']\n})\nexport class DispatchGetComponent implements OnInit {\n    private jobs: Array<DispatchRecord>;\n    private selectedJobs: Array<DispatchRecord>;\n    constructor(private dispatchProvider: DispatchProvider) { }\n    ngOnInit() {\n        this.jobs = [];\n        this.dispatchProvider.listDispatch()\n        .then(() => {\n            this.jobs = this.dispatchProvider.getLocalDispatch();\n        });\n\n        this.selectedJobs = [];\n    }\n\n    refreshJobs() {\n        this.dispatchProvider.listDispatch();\n    }\n\n    rowSelected(job: DispatchRecord) {\n        if (!_.includes(this.selectedJobs, job)) {\n            this.selectedJobs.push(job);\n        } else {\n            this.selectedJobs = this.selectedJobs.filter((compareJob: DispatchRecord) => {\n                return compareJob !== job;\n            });\n        }\n        console.log(this.selectedJobs);\n    }\n\n    isRowSelected(job: DispatchRecord) {\n        return _.includes(this.selectedJobs, job);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BhdGNoLXF1b3RlLWdldC9kaXNwYXRjaC1xdW90ZS1nZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { Quote } from 'fr8models';\nimport { DispatchProvider } from '../dispatch.provider';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-dispatch-quote-get',\n  templateUrl: './dispatch-quote-get.component.html',\n  styleUrls: ['./dispatch-quote-get.component.css']\n})\nexport class DispatchQuoteGetComponent implements OnInit {\n    private quotes: Array<Quote>;\n    private selectedQuotes: Array<Quote>;\n    private searchTerm: string = '';\n\n    constructor(private dispatchProvider: DispatchProvider) { }\n    ngOnInit() {\n        this.quotes = [];\n        this.dispatchProvider.listQuotes()\n        .then(() => {\n            this.quotes = _.sortBy(this.dispatchProvider.getQuotes(), (q) => new Date(q.createdAt)).reverse();\n        });\n\n        this.selectedQuotes = [];\n    }\n\n    refreshQuotes() {\n        this.dispatchProvider.listQuotes()\n        .then(() => {\n            this.quotes = _.sortBy(this.dispatchProvider.getQuotes(), (q) => new Date(q.createdAt)).reverse();\n        });\n    }\n\n    rowSelected(quote: Quote) {\n        if (!_.includes(this.selectedQuotes, quote)) {\n            this.selectedQuotes.push(quote);\n        } else {\n            this.selectedQuotes = this.selectedQuotes.filter((compareJob: Quote) => {\n                return compareJob !== quote;\n            });\n        }\n        console.log(this.selectedQuotes);\n    }\n\n    isRowSelected(quote: Quote) {\n        return _.includes(this.selectedQuotes, quote);\n    }\n\n    async searchQuotes() {\n        await this.dispatchProvider.searchQuotes(this.searchTerm);\n        this.quotes = this.dispatchProvider.getQuotes();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders  } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment  } from '../environments/environment';\nimport { LoginService } from './login.service';\n\nimport { Quote, RatingCard,\n    CreateRatingCardRequest,\n    SaveRatingCardResponse,\n    UpdateRatingCardRequest,\n    UpdateRatingCardResponse,\n    GetRatingCardResponse,\n    GetRatingCardsResponse,\n    GetRecordsRequest,\n    GetQuotesResponse,\n    GetPriceRuleConfigsResponse,\n    SavePriceRuleConfigRequest,\n\n    PriceRuleConfig\n} from 'fr8models';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DispatchQuoteGateway {\n\n    private uriQuote = environment.production ? environment.backendUrl + '/quote' : 'http://localhost/quote';\n    private uriQuotePage = environment.production ? environment.backendUrl + '/quote/query/page' : 'http://localhost/quote/query/page';\n    private uriQuoteQueryId = environment.production ? environment.backendUrl + '/quote/query/uuid' : 'http://localhost/quote/query/uuid';\n    private uriRatingCard = environment.production ? environment.backendUrl + '/rating-card' : 'http://localhost/rating-card';\n    private uriPriceRule = environment.production ? environment.backendUrl + '/price-rule-config' : 'http://localhost/price-rule-config';\n\n    private httpOptions: any;\n    private ls: LoginService;\n\n    private TEST_DATA_RESPONSE: any = {\n        MAJOR_LOCATIONS: {\n            whangarei:\n                [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n                    { m3: 0.08, tonne: 0.025, cost: 31.43 },\n                    { m3: 0.15, tonne: 0.05, cost: 35.36 },\n                    { m3: 0.23, tonne: 0.075, cost: 37.6 },\n                    { m3: 0.3, tonne: 0.1, cost: 40.58 },\n                    { m3: 0.45, tonne: 0.15, cost: 43.31 },\n                    { m3: 0.6, tonne: 0.2, cost: 45.91 },\n                    { m3: 0.75, tonne: 0.25, cost: 51.81 }],\n        },\n        MINOR_LOCATIONS: {\n            zone_1: [\n                { m3: 0.03, tonne: 0.10, cost: 8.83 },\n                { m3: 0.07, tonne: 0.25, cost: 10.82 },\n                { m3: 0.1, tonne: 0.35, cost: 13.08 },\n                { m3: 0.15, tonne: 0.50, cost: 14.34 },\n                { m3: 0.22, tonne: 0.75, cost: 16.12 },\n                { m3: 0.3, tonne: 0.100, cost: 18.07 },\n                { m3: 0.45, tonne: 0.150, cost: 19.33 },\n                { m3: 0.6, tonne: 0.200, cost: 20.43 },\n                { m3: 0.75, tonne: 0.250, cost: 21.53 },\n                { m3: 0.9, tonne: 0.300, cost: 22.06 },\n                { m3: 1.05, tonne: 0.350, cost: 23.06 },\n                { m3: 1.2, tonne: 0.400, cost: 26.47 },\n                { m3: 1.35, tonne: 0.450, cost: 29.46 },\n                { m3: 1.5, tonne: 0.500, cost: 32.88 },\n                { m3: 1.65, tonne: 0.550, cost: 37.39 },\n                { m3: 1.8, tonne: 0.600, cost: 41.92 },\n                { m3: 1.95, tonne: 0.650, cost: 47.32 },\n                { m3: 2.1, tonne: 0.700, cost: 52.62 },\n                { m3: 2.25, tonne: 0.750, cost: 60.56 },\n                { m3: 2.4, tonne: 0.800, cost: 63.65 },\n                { m3: 2.55, tonne: 0.850, cost: 69.28 },\n                { m3: 2.7, tonne: 0.900, cost: 71.38 },\n                { m3: 2.85, tonne: 0.950, cost: 74.68 },\n                { m3: 3, tonne: 1, cost: 75 }\n            ],\n        },\n        COST_RATE_PER_TONNE_OR_KG_BY_LOCATION: {\n            zone_1: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n        }\n    };\n\n    constructor(private http: HttpClient, ls: LoginService) {\n        this.ls = ls;\n    }\n\n    public setHeaders(): void {\n        this.httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type':  'application/json',\n                Authorization: this.ls.getToken()\n            })\n        };\n    }\n\n    // Rating Card\n\n    public async getRatingAllCard(): Promise<any> {\n        this.setHeaders();\n        return this.http.get(`${this.uriRatingCard}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done getting rating card', hres);\n            const res = hres as GetRatingCardsResponse;\n            return res.ratingCards;\n            return hres;\n        }, (err) => {\n            console.log('Err getting rating card', err);\n        });\n    }\n\n    public async getRatingCard(id: number): Promise<any> {\n        this.setHeaders();\n        return this.http.get(`${this.uriRatingCard}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done getting rating card', hres);\n            const res = hres as GetRatingCardResponse;\n            return res.ratingCard;\n        }, (err) => {\n            console.log('Err getting rating card', err);\n        });\n    }\n\n    public async saveRatingCard(companyId: number, entity: RatingCard): Promise<any> {\n        this.setHeaders();\n        const request = new CreateRatingCardRequest(companyId,\n            entity.majorLocations,\n            entity.minorLocations,\n            entity.pricingRateLevelList);\n        console.log('saveRatingCardRequest', request);\n        return this.http.post(`${this.uriRatingCard}`, request, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done creating rating card', hres);\n            const res = hres as SaveRatingCardResponse;\n            return res.ratingCard;\n        }, (err) => {\n            console.log('Err creating rating card', err);\n        });\n    }\n\n    public async updateRatingCard(id: number, entity: RatingCard): Promise<any> {\n        this.setHeaders();\n        const request = new UpdateRatingCardRequest(id, entity);\n        return this.http.put(`${this.uriRatingCard}/${id}`, request, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done update rating card', hres);\n            const res = hres as UpdateRatingCardResponse;\n            return res.ratingCard;\n        }, (err) => {\n            console.log('Err update rating card', err);\n        });\n    }\n\n    public async deleteRatingCard(id: number): Promise<any> {\n        this.setHeaders();\n        return this.http.delete(`${this.uriRatingCard}/${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done delete rating card', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err delete rating card', err);\n        });\n    }\n\n    // Price Rule\n\n    public async getPriceRuleConfigs(): Promise<any> {\n        this.setHeaders();\n        return this.http.get(`${this.uriPriceRule}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done getting price rule config', hres);\n            return hres as GetPriceRuleConfigsResponse;\n        }, (err) => {\n            console.log('Err getting price rule config', err);\n        });\n    }\n\n    public async deletePriceRuleConfig(id: number): Promise<any> {\n        this.setHeaders();\n        return this.http.delete(`${this.uriPriceRule}/${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done delete price rule config', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err delete price rule config', err);\n        });\n    }\n\n    public async savePriceRuleConfig(companyId: number, entity: PriceRuleConfig): Promise<any> {\n        this.setHeaders();\n        const request = new SavePriceRuleConfigRequest(companyId, [entity]);\n        console.log('savePriceRuleRequest', request);\n        return this.http.post(`${this.uriPriceRule}`, request, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done creating price rule config', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err creating price rule config', err);\n        });\n    }\n\n    public async getQuote(id: string): Promise<any> {\n        this.setHeaders();\n        return this.http.get(`${this.uriQuote}?id=${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n    }\n\n    public async queryQuotesById(id: string): Promise<any> {\n        this.setHeaders();\n        return this.http.get(`${this.uriQuoteQueryId}?quote_uuid=${id}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n    }\n\n    public async getQuoteList(page, pageSize): Promise<any> {\n        this.setHeaders();\n        const req = new GetRecordsRequest(page, pageSize);\n        return this.http.get(`${this.uriQuotePage}/?page=${page}&page_size=${pageSize}`, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done', hres);\n            const res: GetQuotesResponse = hres as GetQuotesResponse;\n            return res;\n        }, (err) => {\n            console.log('Err', err);\n        });\n    }\n\n    public async postQuote(quote: Quote): Promise<any> {\n        this.setHeaders();\n        return this.http.post(`${this.uriQuote}`, quote, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Creating Quote', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n    }\n\n    public async putQuote(id: number, quote: Quote): Promise<any> {\n        this.setHeaders();\n        return this.http.put(`${this.uriQuote}/${id}`, quote, this.httpOptions)\n        .toPromise().then((hres) => {\n            console.log('Done Updating Quote', hres);\n            return hres;\n        }, (err) => {\n            console.log('Err', err);\n        });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BhdGNoLXF1b3RlL2Rpc3BhdGNoLXF1b3RlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { NotyfToastSuccess } from '../notify-success-toastr';\nimport { NotyfToastFail } from '../notify-fail-toastr';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { DispatchProvider } from '../dispatch.provider';\nimport { LoginService } from '../login.service';\nimport { QuoteInterfaceResponse, Quote } from 'fr8models';\n\nimport { ComponentHelper } from '../component-helper';\n\n@Component({\n    selector: 'app-dispatch-quote',\n    templateUrl: './dispatch-quote.component.html',\n    styleUrls: ['./dispatch-quote.component.css']\n})\nexport class DispatchQuoteComponent implements OnInit {\n\n    angForm: FormGroup;\n    result: QuoteInterfaceResponse;\n    cost: string;\n    message: string;\n    locationOptions: Array<any>;\n    quote: Quote;\n    quoteId: string;\n    quoteDbId: number;\n    isEdit: boolean;\n    hideCommentField: boolean;\n\n    messagesDict = {\n        ERROR : {\n            DEFAULT : 'Sorry we are unable to get your quote at this time, please try again later',\n            LOCATION: 'Could not get quote for '\n        },\n        SUCCESS : {\n            DEFAULT : 'Your delivery will be around' // x$ dollar ammount\n        }\n    };\n\n    constructor(private fb: FormBuilder, private dispatchProvider: DispatchProvider, private router: Router,\n                private loginService: LoginService, private toastr: ToastrService) {\n        this.isEdit = this.router.url.indexOf('edit') > -1;\n        this.hideCommentField = !this.loginService.isParentCompanyUser();\n        this.cost = '0.00';\n        this.message = '';\n        this.quoteDbId = this.getId(this.isEdit);\n        this.quote = this.quoteDbId ? this.dispatchProvider.getQuote(this.quoteDbId) : this.quote;\n        this.quoteId = this.quote ? this.quote.quoteId : '';\n        this.cost = this.quote && this.quote.cost ? this.quote.cost.toString() : '0';\n\n        this.initOptions();\n        this.createForm(this.quote);\n    }\n\n    public getId(isEdit): number {\n        if (isEdit) {\n            const urlBits = this.router.url.split('/');\n            return parseInt(urlBits[urlBits.length - 1], 10);\n        } else {\n            return null;\n        }\n    }\n\n    public async initOptions() {\n        await this.dispatchProvider.initQuoteConfig();\n        this.locationOptions = this.dispatchProvider.getLocationOptions();\n    }\n\n    createForm(quote: Quote) {\n        console.log('OnInit Quote', quote);\n        if (quote) {\n            this.angForm = this.fb.group({\n                iCOSRef: [''],\n                to: [quote.to],\n                from: [quote.from],\n                weight: [quote.weight, Validators.required ],\n                mass: [quote.mass, Validators.required ],\n                comment: [quote.parentCompanyNote],\n            });\n        } else {\n            this.angForm = this.fb.group({\n                iCOSRef: [''],\n                to: [''],\n                from: [''],\n                weight: ['', Validators.required ],\n                mass: ['', Validators.required ],\n                comment: ['']\n            });\n        }\n\n        this.angForm.valueChanges.subscribe(() => {\n            console.log(this.angForm.getRawValue());\n            const raw = this.angForm.getRawValue();\n            // Try set defaults\n            this.getQuote(raw);\n        });\n    }\n\n    ngOnInit() { }\n\n    getQuote(args): void {\n        this.quote = this.quote ? this.quote : new Quote();\n        this.quote.parentCompanyNote = args && args.comment ? args.comment : '';\n\n        // Check ownership\n        if (this.isEdit && this.quote && this.quote.id !=\n            null && this.quote.companyId !== this.loginService.getUserCompanyId()) {\n            console.log('Not updating quote with cost values, as it does not belong to you', this.quote);\n            return;\n        }\n\n        this.result = this.dispatchProvider\n        .getRatingCardQuote(\n            args.to, args.from, parseFloat(args.weight), parseFloat(args.mass)\n        );\n        console.log('Get Quote :', this.result);\n        this.cost = this.result && this.result.cost ? this.result.cost.toFixed(2) : '0.00';\n\n        this.quote.iCOSRef = -1;\n        this.quote.cost = parseFloat(this.cost);\n        this.quote.weight = parseFloat(args.weight);\n        this.quote.mass = parseFloat(args.mass);\n        this.quote.to = args.to;\n        this.quote.from = args.from;\n\n        console.log('Got Quote:', this.quote);\n    }\n\n    saveQuote(): void {\n        this.dispatchProvider.saveQuote(this.quoteDbId, this.quote, this.isEdit).then((res) => {\n            console.log(res);\n            const opt = JSON.parse(JSON.stringify(this.toastr.toastrConfig));\n            opt.positionClass = 'toast-bottom-right';\n            opt.toastClass = 'notyf confirm';\n            if (res) {\n                opt.toastComponent = NotyfToastSuccess;\n                this.toastr.success('Saved Quote', '', opt);\n                this.router.navigate(['dispatch/quote/']);\n            } else {\n                opt.toastComponent = NotyfToastFail;\n                this.toastr.error('Failed to Save Quote', '', opt);\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\n\nimport * as _ from 'lodash';\n\nimport {\n    PriceRuleLocationConditional,\n    PriceRule,\n    PriceRuleSet,\n    PriceRuleConfig,\n    PriceConfig,\n    RatingCard,\n    Quote,\n    ModelUtils,\n    GetQuotesResponse,\n    QuoteInterfaceRequest,\n    QuoteInterfaceResponse\n} from 'fr8models';\n\nimport { QuotePriceLevelService } from './quote-price-level.service';\nimport { QuoteInterface } from './quote-interface';\n\nimport { QuoteConfig } from './quote-config.service';\nimport { DispatchQuoteGateway } from '../dispatch-quote.gateway';\n\nimport { LoginService } from '../login.service';\nimport { RatingCardService } from '../rating-card.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DispatchQuoteService {\n\n    public priceRuleSetList: Array<PriceRuleSet>;\n\n    public ratingCardConfig: RatingCard;\n    public currentPriceRuleConfig: PriceRuleSet;\n    public quoteList: Array<Quote>;\n    public priceRuleConfig;\n    public priceRuleConfigs: PriceRuleConfig[];\n\n    public currentPageSize = 20;\n    public currentPage = 0;\n\n    constructor(public loginService: LoginService,\n                public quoteConfigService: QuoteConfig,\n                public dispatchQuoteGateway: DispatchQuoteGateway,\n                public quotePricingLevelService: QuotePriceLevelService,\n                public quoteInterface: QuoteInterface,\n                public ratingCardService: RatingCardService) {\n\n        this.quoteConfigService = new QuoteConfig();\n        this.initQuoteConfig();\n    }\n\n    // Init functions\n    public async initQuoteConfig() {\n        this.priceRuleConfig = await this.getPriceRuleConfig();\n        this.ratingCardConfig = await this.getCurrentRatingCard();\n\n        this.quoteConfigService.setRatingCardData(JSON.parse(JSON.stringify(this.ratingCardConfig)));\n        this.quoteConfigService.init();\n\n        this.quotePricingLevelService.initialize(this.quoteConfigService);\n    }\n\n    public async getCurrentRatingCard(): Promise<RatingCard> {\n        await this.ratingCardService.listRatingCard();\n        // Call back end for stored constants\n        const res = this.ratingCardService.getMyRatingCard();\n        const def = this.ratingCardService.getDefaultRatingCard();\n\n        console.log('Getting Current Rating Card', 'res', this.ratingCardService.ratingCards, 'def', def);\n        return res ? res : def;\n    }\n\n    public async listPriceRules(): Promise<PriceRuleConfig[]> {\n        const res =  await this.dispatchQuoteGateway.getPriceRuleConfigs();\n        // TODO: deal with the paging response later\n        this.priceRuleConfigs = res.records;\n        return res.records;\n    }\n\n    public async getPriceRuleConfig(): Promise<PriceRuleConfig> {\n        let res = await this.listPriceRules();\n\n        // Get your own config\n        res = res && res.length && res.length > 0 ? res.filter((conf) => {\n            return conf.companyId === this.loginService.getUserCompanyId();\n        }) : null;\n\n        return await this.parsePriceConfigResponse(res[0]);\n    }\n\n    // Parse response functions\n    public parsePriceConfigResponse(config): PriceRuleConfig {\n            if (config && config.data && config.data.length > 0) {\n                const data = config.data[0]; // Hard set to one price rule config set\n                const parsedConfig = new PriceRuleConfig(\n                    config.id,\n                    config.companyName,\n                    config.companyId,\n                    data.priceRuleSet,\n                    data.priceRuleLocationConditionals\n                );\n\n                console.log('Using Price Rule Config:', parsedConfig);\n                return parsedConfig;\n            } else {\n                console.log('using default config, could not parse priceConfigResponse:', config);\n                const prConfig = new PriceRuleConfig();\n                const pr: PriceRule = new PriceRule(0, PriceRule.TYPE.RATING_CARD);\n                const prList: Array<PriceRule> = [pr];\n                const priceRuleSet = new PriceRuleSet(prList);\n                prConfig.priceRuleSet = priceRuleSet;\n                return prConfig;\n            }\n    }\n\n    // Get Set Price Rule list\n    public getPriceRuleSetList(): PriceRuleConfig[] {\n          return this.priceRuleConfigs;\n    }\n\n    public getPriceRuleConfigById(id: number): PriceRuleConfig {\n        const res = this.priceRuleConfigs.filter((entity) =>  {\n            return entity.id === id;\n        });\n        // TODO: extend this later on, data can return a list of configs,\n        // now however we are only using the one config filter\n        const config = res && res.length > 0 ? res[0] : null;\n        return new PriceRuleConfig(\n            config.id,\n            config.companyName,\n            config.companyId,\n            (config as any).data[0].priceRuleSet,\n            (config as any).data[0].priceRuleLocationConditionals\n        );\n    }\n\n    public async savePriceRuleSet(priceRuleConfig: PriceRuleConfig): Promise<boolean> {\n        return await this.dispatchQuoteGateway.savePriceRuleConfig(priceRuleConfig.companyId, priceRuleConfig);\n    }\n\n    removePriceRuleConfig(id): Promise<any> {\n        return this.dispatchQuoteGateway.deletePriceRuleConfig(id)\n        .then(() => {\n            this.priceRuleConfigs = this.priceRuleConfigs.filter((priceRuleConfig) => {\n                return priceRuleConfig.id !== id;\n            });\n        });\n    }\n\n    public isLocationInList(locationList, loc) {\n        loc = loc.replace(/North/gi, 'nth').replace(' ', '_').toLowerCase();\n        return _.includes(locationList, loc);\n    }\n\n    // Quote\n    public getRatingCardQuote(to: string, from: string, weight: number, mass: number): QuoteInterfaceResponse {\n        // rating card only calculate based on auckland as from\n        if (to && to.toLowerCase && to.toLowerCase() === 'auckland') {\n            const newTo = from;\n            from = to;\n            to = newTo;\n        }\n\n\n        // Does not need to add all of the params\n\n        const request = new QuoteInterfaceRequest(to, from, weight, mass);\n\n        // Local company config\n        const priceConf: PriceConfig = new PriceConfig(this.ratingCardConfig);\n\n        // Get PR from config loaded\n        const res =\n            this.priceRuleConfig.priceRuleLocationConditionals &&\n            this.priceRuleConfig.priceRuleLocationConditionals.length > 0 ?\n            this.priceRuleConfig.priceRuleLocationConditionals.filter((conditional) => {\n                    // Get match TO LOC to conditional\n                    return this.isLocationInList(conditional.locationList, to);\n                })\n            : null;\n        const locationConditional: PriceRuleLocationConditional = res && res.length > 0 ? res[0] : null;\n\n        console.log('Price Rule Config', this.priceRuleConfig);\n        console.log('locationConditional Loaded', locationConditional);\n\n        if (locationConditional && locationConditional.locationList) {\n            locationConditional.locationList = ModelUtils.valuesToLowerCase(locationConditional.locationList);\n        }\n\n        if (locationConditional && locationConditional.locationList &&\n            locationConditional.locationList.indexOf(to.toLowerCase()) > -1) {\n            const prList: Array<PriceRule> = locationConditional.priceRuleSet.priceRules;\n            return this.quoteInterface.getQuote(prList, priceConf, request, locationConditional);\n        } else {\n            let prList: Array<PriceRule> = this.priceRuleConfig.priceRuleSet.priceRules;\n            // If no defaults are set, then use rating card\n            prList = prList && prList.length > 0 ? prList : [new PriceRule(0, PriceRule.TYPE.RATING_CARD)];\n            return this.quoteInterface.getQuote(prList, priceConf, request, null);\n        }\n    }\n\n    public getQuotes(): Array<Quote> {\n        return this.quoteList;\n    }\n\n    public getQuote(id: number): Quote {\n        return this.quoteList ? this.quoteList.filter(quote => {\n            return quote.id === id;\n        })[0] : null;\n    }\n\n    public async saveQuote(quote: Quote): Promise<boolean> {\n        return await this.dispatchQuoteGateway.postQuote(quote);\n    }\n\n    public async updateQuote(id: number, quote: Quote): Promise<boolean> {\n        return await this.dispatchQuoteGateway.putQuote(id, quote);\n    }\n\n    public async queryQuotesById(id) {\n        this.quoteList = await this.dispatchQuoteGateway.queryQuotesById(id);\n        return this.quoteList;\n    }\n\n    public async listQuotes(): Promise<Array<Quote>> {\n        const res: GetQuotesResponse = await this.dispatchQuoteGateway.getQuoteList(this.currentPage, this.currentPageSize);\n        this.quoteList = res.totalCount > 0 ? res.records : [];\n\n        this.currentPage = res.page;\n        this.currentPageSize = res.pageSize;\n\n        return this.quoteList;\n    }\n\n    public getLocations(): Array<any> {\n        return this.quotePricingLevelService.getLocations();\n    }\n\n    public setCurrentPage(page: number) {\n        this.currentPage = page;\n    }\n\n    public setCurrentPageSize(pageSize: number) {\n        this.currentPageSize = pageSize;\n    }\n\n}\n","import * as _ from 'lodash';\nimport {\n    RatingCard,\n    ModelUtils,\n    MajorLocationSet,\n    MinorLocationSet\n} from 'fr8models';\n\n/**\n * @desc Replaces a char at a certain pos in the string\n * @param str origin string\n * @param index index of char which is being changed\n * @param chr new char which will change the string char at given index\n */\nfunction setCharAt(str: string, index: number, chr: string): string {\n  if (index > str.length - 1)  {\n      return str;\n  } else {\n      return str.substr(0, index) + chr + str.substr(index + 1);\n  }\n}\nexport class QuoteConfig {\n    public LOCATIONS: any = {};\n    public MINOR_TOWNS_KEYS: any = {};\n    public PRICING_LEVEL_KEY: any = {};\n    public ratingCard: RatingCard;\n    public locationOptions;\n\n  public MAJOR_LOCATIONS: any = {\n    // load in zones from\n    whangarei:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 35.36 },\n      { m3: 0.23, tonne: 0.075, cost: 37.6 },\n      { m3: 0.3, tonne: 0.1, cost: 40.58 },\n      { m3: 0.45, tonne: 0.15, cost: 43.31 },\n      { m3: 0.6, tonne: 0.2, cost: 45.91 },\n      { m3: 0.75, tonne: 0.25, cost: 51.81 }],\n    hamilton:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 33.85 },\n      { m3: 0.23, tonne: 0.075, cost: 37.6 },\n      { m3: 0.3, tonne: 0.1, cost: 39.29 },\n      { m3: 0.45, tonne: 0.15, cost: 41.71 },\n      { m3: 0.6, tonne: 0.2, cost: 43.39 },\n      { m3: 0.75, tonne: 0.25, cost: 44.9 }],\n    tauranga:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 35.47 },\n      { m3: 0.23, tonne: 0.075, cost: 37.83 },\n      { m3: 0.3, tonne: 0.1, cost: 41.15 },\n      { m3: 0.45, tonne: 0.15, cost: 44.85 },\n      { m3: 0.6, tonne: 0.2, cost: 48.55 },\n      { m3: 0.75, tonne: 0.25, cost: 52.71 }],\n    rotorua:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 35.47 },\n      { m3: 0.23, tonne: 0.075, cost: 37.83 },\n      { m3: 0.3, tonne: 0.1, cost: 41.15 },\n      { m3: 0.45, tonne: 0.15, cost: 44.85 },\n      { m3: 0.6, tonne: 0.2, cost: 48.55 },\n      { m3: 0.75, tonne: 0.25, cost: 52.71 }],\n    napier:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 39.07 },\n      { m3: 0.23, tonne: 0.075, cost: 47.82 },\n      { m3: 0.3, tonne: 0.1, cost: 56.08 },\n      { m3: 0.45, tonne: 0.15, cost: 61.29 },\n      { m3: 0.6, tonne: 0.2, cost: 65.56 },\n      { m3: 0.75, tonne: 0.25, cost: 70.16 }],\n    hastings:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 39.07 },\n      { m3: 0.23, tonne: 0.075, cost: 47.82 },\n      { m3: 0.3, tonne: 0.1, cost: 56.08 },\n      { m3: 0.45, tonne: 0.15, cost: 61.29 },\n      { m3: 0.6, tonne: 0.2, cost: 65.56 },\n      { m3: 0.75, tonne: 0.25, cost: 70.16 }],\n    gisborne:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 36.04 },\n      { m3: 0.23, tonne: 0.075, cost: 41.97 },\n      { m3: 0.3, tonne: 0.1, cost: 51.53 },\n      { m3: 0.45, tonne: 0.15, cost: 61.29 },\n      { m3: 0.6, tonne: 0.2, cost: 81.72 },\n      { m3: 0.75, tonne: 0.25, cost: 96.77 }],\n    new_plymouth: // new plymouth\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 40.96 },\n      { m3: 0.23, tonne: 0.075, cost: 50.5 },\n      { m3: 0.3, tonne: 0.1, cost: 62.25 },\n      { m3: 0.45, tonne: 0.15, cost: 69.03 },\n      { m3: 0.6, tonne: 0.2, cost: 76.11 },\n      { m3: 0.75, tonne: 0.25, cost: 81.39 }],\n    palmerston_nth: // palmerston nth\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 40.96 },\n      { m3: 0.23, tonne: 0.075, cost: 50.5 },\n      { m3: 0.3, tonne: 0.1, cost: 63.54 },\n      { m3: 0.45, tonne: 0.15, cost: 69.03 },\n      { m3: 0.6, tonne: 0.2, cost: 76.11 },\n      { m3: 0.75, tonne: 0.25, cost: 81.39 }],\n    wellington:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 31.43 },\n      { m3: 0.15, tonne: 0.05, cost: 43.22 },\n      { m3: 0.23, tonne: 0.075, cost: 53.83 },\n      { m3: 0.3, tonne: 0.1, cost: 64.21 },\n      { m3: 0.45, tonne: 0.15, cost: 73.31 },\n      { m3: 0.6, tonne: 0.2, cost: 82.84 },\n      { m3: 0.75, tonne: 0.25, cost: 87.85 }],\n    blenheim:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 60.9 },\n      { m3: 0.3, tonne: 0.1, cost: 66.9 },\n      { m3: 0.45, tonne: 0.15, cost: 72.85 },\n      { m3: 0.6, tonne: 0.2, cost: 84.86 },\n      { m3: 0.75, tonne: 0.25, cost: 89.98 }],\n    christchurch:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 60.9 },\n      { m3: 0.3, tonne: 0.1, cost: 66.9 },\n      { m3: 0.45, tonne: 0.15, cost: 72.85 },\n      { m3: 0.6, tonne: 0.2, cost: 84.86 },\n      { m3: 0.75, tonne: 0.25, cost: 89.98 }],\n    nelson:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 62.3 },\n      { m3: 0.3, tonne: 0.1, cost: 69.49 },\n      { m3: 0.45, tonne: 0.15, cost: 75.33 },\n      { m3: 0.6, tonne: 0.2, cost: 85.99 },\n      { m3: 0.75, tonne: 0.25, cost: 96.09 }],\n    ashburton:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 61.06 },\n      { m3: 0.3, tonne: 0.1, cost: 68.37 },\n      { m3: 0.45, tonne: 0.15, cost: 74.87 },\n      { m3: 0.6, tonne: 0.2, cost: 84.64 },\n      { m3: 0.75, tonne: 0.25, cost: 93.74 }],\n    westport:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 69.38 },\n      { m3: 0.3, tonne: 0.1, cost: 78.91 },\n      { m3: 0.45, tonne: 0.15, cost: 89.24 },\n      { m3: 0.6, tonne: 0.2, cost: 102.94 },\n      { m3: 0.75, tonne: 0.25, cost: 110.18 }],\n    greymouth:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 71.29 },\n      { m3: 0.3, tonne: 0.1, cost: 80.71 },\n      { m3: 0.45, tonne: 0.15, cost: 93.51 },\n      { m3: 0.6, tonne: 0.2, cost: 106.3 },\n      { m3: 0.75, tonne: 0.25, cost: 118.04 }],\n    // gore: // Seems that its in both major and minor, so removing major\n    //   [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n    //   { m3: 0.08, tonne: 0.025, cost: 35.93 },\n    //   { m3: 0.15, tonne: 0.05, cost: 51.08 },\n    //   { m3: 0.23, tonne: 0.075, cost: 60.95 },\n    //   { m3: 0.3, tonne: 0.1, cost: 69.03 },\n    //   { m3: 0.45, tonne: 0.15, cost: 83.97 },\n    //   { m3: 0.6, tonne: 0.2, cost: 96.88 },\n    //   { m3: 0.75, tonne: 0.25, cost: 101.03 }],\n    oamaru:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 61.06 },\n      { m3: 0.3, tonne: 0.1, cost: 68.37 },\n      { m3: 0.45, tonne: 0.15, cost: 74.87 },\n      { m3: 0.6, tonne: 0.2, cost: 84.64 },\n      { m3: 0.75, tonne: 0.25, cost: 93.74 }],\n    timaru:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 61.06 },\n      { m3: 0.3, tonne: 0.1, cost: 68.37 },\n      { m3: 0.45, tonne: 0.15, cost: 74.87 },\n      { m3: 0.6, tonne: 0.2, cost: 84.64 },\n      { m3: 0.75, tonne: 0.25, cost: 93.74 }],\n    dunedin:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 60.95 },\n      { m3: 0.3, tonne: 0.1, cost: 69.03 },\n      { m3: 0.45, tonne: 0.15, cost: 83.97 },\n      { m3: 0.6, tonne: 0.2, cost: 96.88 },\n      { m3: 0.75, tonne: 0.25, cost: 101.03 }],\n    invercargill:\n      [{ m3: 0.03, tonne: 0.015, cost: 26.94 },\n      { m3: 0.08, tonne: 0.025, cost: 35.93 },\n      { m3: 0.15, tonne: 0.05, cost: 51.08 },\n      { m3: 0.23, tonne: 0.075, cost: 64.99 },\n      { m3: 0.3, tonne: 0.1, cost: 74.43 },\n      { m3: 0.45, tonne: 0.15, cost: 82.17 },\n      { m3: 0.6, tonne: 0.2, cost: 95.3 },\n      { m3: 0.75, tonne: 0.25, cost: 106.19 }]\n\n  };\n  public MINOR_LOCATIONS: any = {\n      zone_1: [\n          { m3: 0.03, tonne: 0.10, cost: 8.83 },\n          { m3: 0.07, tonne: 0.25, cost: 10.82 },\n          { m3: 0.1, tonne: 0.35, cost: 13.08 },\n          { m3: 0.15, tonne: 0.50, cost: 14.34 },\n          { m3: 0.22, tonne: 0.75, cost: 16.12 },\n          { m3: 0.3, tonne: 0.100, cost: 18.07 },\n          { m3: 0.45, tonne: 0.150, cost: 19.33 },\n          { m3: 0.6, tonne: 0.200, cost: 20.43 },\n          { m3: 0.75, tonne: 0.250, cost: 21.53 },\n          { m3: 0.9, tonne: 0.300, cost: 22.06 },\n          { m3: 1.05, tonne: 0.350, cost: 23.06 },\n          { m3: 1.2, tonne: 0.400, cost: 26.47 },\n          { m3: 1.35, tonne: 0.450, cost: 29.46 },\n          { m3: 1.5, tonne: 0.500, cost: 32.88 },\n          { m3: 1.65, tonne: 0.550, cost: 37.39 },\n          { m3: 1.8, tonne: 0.600, cost: 41.92 },\n          { m3: 1.95, tonne: 0.650, cost: 47.32 },\n          { m3: 2.1, tonne: 0.700, cost: 52.62 },\n          { m3: 2.25, tonne: 0.750, cost: 60.56 },\n          { m3: 2.4, tonne: 0.800, cost: 63.65 },\n          { m3: 2.55, tonne: 0.850, cost: 69.28 },\n          { m3: 2.7, tonne: 0.900, cost: 71.38 },\n          { m3: 2.85, tonne: 0.950, cost: 74.68 },\n          { m3: 3, tonne: 1, cost: 75 }\n      ],\n      zone_2: [\n          { m3: 0.03, tonne: 10, cost: 9.93 },\n          { m3: 0.07, tonne: 25, cost: 11.6 },\n          { m3: 0.1, tonne: 35, cost: 13.23 },\n          { m3: 0.15, tonne: 50, cost: 14.92 },\n          { m3: 0.22, tonne: 75, cost: 16.76 },\n          { m3: 0.3, tonne: 100, cost: 19.33 },\n          { m3: 0.45, tonne: 150, cost: 20.43 },\n          { m3: 0.6, tonne: 200, cost: 21.37 },\n          { m3: 0.75, tonne: 0.250, cost: 22.75 },\n          { m3: 0.9, tonne: 0.300, cost: 24.11 },\n          { m3: 1.05, tonne: 0.350, cost: 27.89 },\n          { m3: 1.2, tonne: 0.400, cost: 31.67 },\n          { m3: 1.35, tonne: 0.450, cost: 36.6 },\n          { m3: 1.5, tonne: 0.500, cost: 39.29 },\n          { m3: 1.65, tonne: 0.550, cost: 43.43 },\n          { m3: 1.8, tonne: 0.600, cost: 48.01 },\n          { m3: 1.95, tonne: 0.650, cost: 51.31 },\n          { m3: 2.1, tonne: 0.700, cost: 59.14 },\n          { m3: 2.25, tonne: 0.750, cost: 69.69 },\n          { m3: 2.4, tonne: 0.800, cost: 78.04 },\n          { m3: 2.55, tonne: 0.850, cost: 86.03 },\n          { m3: 2.7, tonne: 0.900, cost: 91.96 },\n          { m3: 2.85, tonne: 0.950, cost: 93.96 },\n          { m3: 3, tonne: 1, cost: 97.06 }\n      ],\n      zone_3: [\n          { m3: 0.03, tonne: 0.10, cost: 11.24 },\n          { m3: 0.07, tonne: 0.25, cost: 12.18 },\n          { m3: 0.1, tonne: 0.35, cost: 16.02 },\n          { m3: 0.15, tonne: 0.50, cost: 17.43 },\n          { m3: 0.22, tonne: 0.75, cost: 18.75 },\n          { m3: 0.3, tonne: 0.100, cost: 22.63 },\n          { m3: 0.45, tonne: 0.150, cost: 23.37 },\n          { m3: 0.6, tonne: 0.200, cost: 25.95 },\n          { m3: 0.75, tonne: 0.250, cost: 28 },\n          { m3: 0.9, tonne: 0.300, cost: 28.79 },\n          { m3: 1.05, tonne: 0.350, cost: 33.61 },\n          { m3: 1.2, tonne: 0.400, cost: 37.5 },\n          { m3: 1.35, tonne: 0.450, cost: 40.86 },\n          { m3: 1.5, tonne: 0.500, cost: 44.8 },\n          { m3: 1.65, tonne: 0.550, cost: 50.32 },\n          { m3: 1.8, tonne: 0.600, cost: 55.72 },\n          { m3: 1.95, tonne: 0.650, cost: 64.24 },\n          { m3: 2.1, tonne: 0.700, cost: 72.27 },\n          { m3: 2.25, tonne: 0.750, cost: 80.14 },\n          { m3: 2.4, tonne: 0.800, cost: 91.75 },\n          { m3: 2.55, tonne: 0.850, cost: 103.68 },\n          { m3: 2.7, tonne: 0.900, cost: 108.67 },\n          { m3: 2.85, tonne: 0.950, cost: 112.44 },\n          { m3: 3, tonne: 1, cost: 115.81 }\n      ],\n      zone_4: [\n          { m3: 0.03, tonne: 0.10, cost: 12.18 },\n          { m3: 0.07, tonne: 0.25, cost: 14.34 },\n          { m3: 0.1, tonne: 0.35, cost: 16.28 },\n          { m3: 0.15, tonne: 0.50, cost: 19.33 },\n          { m3: 0.22, tonne: 0.75, cost: 23.37 },\n          { m3: 0.3, tonne: 0.100, cost: 25.47 },\n          { m3: 0.45, tonne: 0.150, cost: 29.51 },\n          { m3: 0.6, tonne: 0.200, cost: 31.46 },\n          { m3: 0.75, tonne: 0.250, cost: 33.09 },\n          { m3: 0.9, tonne: 0.300, cost: 39.13 },\n          { m3: 1.05, tonne: 0.350, cost: 42.9 },\n          { m3: 1.2, tonne: 0.400, cost: 51.31 },\n          { m3: 1.35, tonne: 0.450, cost: 58.66 },\n          { m3: 1.5, tonne: 0.500, cost: 67.85 },\n          { m3: 1.65, tonne: 0.550, cost: 76.42 },\n          { m3: 1.8, tonne: 0.600, cost: 86.08 },\n          { m3: 1.95, tonne: 0.650, cost: 94.85 },\n          { m3: 2.1, tonne: 0.700, cost: 99.84 },\n          { m3: 2.25, tonne: 0.750, cost: 105.67 },\n          { m3: 2.4, tonne: 0.800, cost: 111.82 },\n          { m3: 2.55, tonne: 0.850, cost: 120.43 },\n          { m3: 2.7, tonne: 0.900, cost: 125.1 },\n          { m3: 2.85, tonne: 0.950, cost: 128.89 },\n          { m3: 3, tonne: 1, cost: 131.25 }\n      ],\n      zone_5: [\n          { m3: 0.03, tonne: 0.10, cost: 16.54 },\n          { m3: 0.07, tonne: 0.25, cost: 19.33 },\n          { m3: 0.1, tonne: 0.35, cost: 24.37 },\n          { m3: 0.15, tonne: 0.50, cost: 29.25 },\n          { m3: 0.22, tonne: 0.75, cost: 39.86 },\n          { m3: 0.3, tonne: 0.100, cost: 41.02 },\n          { m3: 0.45, tonne: 0.150, cost: 46.27 },\n          { m3: 0.6, tonne: 0.200, cost: 51.52 },\n          { m3: 0.75, tonne: 0.250, cost: 54.62 },\n          { m3: 0.9, tonne: 0.300, cost: 57.93 },\n          { m3: 1.05, tonne: 0.350, cost: 65.29 },\n          { m3: 1.2, tonne: 0.400, cost: 68.96 },\n          { m3: 1.35, tonne: 0.450, cost: 77.99 },\n          { m3: 1.5, tonne: 0.500, cost: 87.13 },\n          { m3: 1.65, tonne: 0.550, cost: 94.32 },\n          { m3: 1.8, tonne: 0.600, cost: 104.99 },\n          { m3: 1.95, tonne: 0.650, cost: 118.01 },\n          { m3: 2.1, tonne: 0.700, cost: 124.63 },\n          { m3: 2.25, tonne: 0.750, cost: 126.84 },\n          { m3: 2.4, tonne: 0.800, cost: 131.25 },\n          { m3: 2.55, tonne: 0.850, cost: 134.03 },\n          { m3: 2.7, tonne: 0.900, cost: 136.34 },\n          { m3: 2.85, tonne: 0.950, cost: 139.65 },\n          { m3: 3, tonne: 1, cost: 142.28 }\n      ],\n      zone_6: [\n          { m3: 0.03, tonne: 0.10, cost: 21.53 },\n          { m3: 0.07, tonne: 0.25, cost: 26.42 },\n          { m3: 0.1, tonne: 0.35, cost: 29.25 },\n          { m3: 0.15, tonne: 0.50, cost: 33.93 },\n          { m3: 0.22, tonne: 0.75, cost: 39.86 },\n          { m3: 0.3, tonne: 0.100, cost: 47.17 },\n          { m3: 0.45, tonne: 0.150, cost: 52.42 },\n          { m3: 0.6, tonne: 0.200, cost: 58.4 },\n          { m3: 0.75, tonne: 0.250, cost: 62.34 },\n          { m3: 0.9, tonne: 0.300, cost: 71.69 },\n          { m3: 1.05, tonne: 0.350, cost: 79.99 },\n          { m3: 1.2, tonne: 0.400, cost: 88.4 },\n          { m3: 1.35, tonne: 0.450, cost: 100.63 },\n          { m3: 1.5, tonne: 0.500, cost: 113.08 },\n          { m3: 1.65, tonne: 0.550, cost: 126.84 },\n          { m3: 1.8, tonne: 0.600, cost: 135.14 },\n          { m3: 1.95, tonne: 0.650, cost: 143.38 },\n          { m3: 2.1, tonne: 0.700, cost: 153.83 },\n          { m3: 2.25, tonne: 0.750, cost: 161.6 },\n          { m3: 2.4, tonne: 0.800, cost: 171.11 },\n          { m3: 2.55, tonne: 0.850, cost: 177.52 },\n          { m3: 2.7, tonne: 0.900, cost: 184.77 },\n          { m3: 2.85, tonne: 0.950, cost: 187.66 },\n          { m3: 3, tonne: 1, cost: 193.01 }\n      ]\n  };\n\n  // Pricing level\n\n  public MINOR_MAJOR_REL_KEY: any = {};\n\n  public MINOR_LOCATION_KEY_DICT: any = {\n      zone_1: [\n          'bell_block',\n          'cambridge',\n          'mosgiel',\n      ],\n      zone_2: [\n          'bluff',\n          'feilding',\n          'inglewood',\n          'rangiora',\n          'taupo',\n          'te_awamutu',\n          'waitara',\n      ],\n      zone_3: [\n          'balclutha',\n          'bulls',\n          'edgecumbe',\n          'eltham',\n          'foxton',\n          'gore',\n          'greytown',\n          'levin',\n          'marton',\n          'matamata',\n          'morrinsville',\n          'otorohanga',\n          'otaki',\n          'paraparaumu',\n          'putaruru',\n          'stratford',\n          'te_aroha',\n          'te_puke',\n          'wanganui',\n      ],\n      zone_4: [\n          'alexandra',\n          'arrowtown',\n          'carterton',\n          'cromwell',\n          'dargaville',\n          'featherston',\n          'hawera',\n          'hokitika',\n          'kaikohe',\n          'kerikeri',\n          'masterton',\n          'queenstown',\n          'te_kuiti',\n          'thames',\n          'tokoroa',\n          'whakatane',\n          'woodville',\n      ],\n      zone_5: [\n          'bennydale',\n          'coromandel',\n          'kaitaia',\n          'opotiki',\n          'paeroa',\n          'taumarunui',\n          'wairoa',\n          'warkworth',\n      ],\n      zone_6: [\n          'turangi',\n          'wellsford',\n          'whitianga',\n      ],\n  };\n\n  public COST_RATE_PER_TONNE_OR_KG_BY_LOCATION: any = {\n    zone_1: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    zone_2: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    zone_3: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    zone_4: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    zone_5: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    zone_6: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    whangarei: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    hamilton: { cost_p_m3: 44.91, cost_p_tonne: 134.7 },\n    tauranga: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    rotorua: { cost_p_m3: 50.51, cost_p_tonne: 151.54 },\n    hastings: { cost_p_m3: 69.61, cost_p_tonne: 208.8 },\n    napier: { cost_p_m3: 69.61, cost_p_tonne: 208.8 },\n    gisborne: { cost_p_m3: 94.29, cost_p_tonne: 282.88 },\n    new_plymouth: { cost_p_m3: 78.58, cost_p_tonne: 235.73 },\n    palmerston_nth: { cost_p_m3: 78.58, cost_p_tonne: 235.73 },\n    wellington: { cost_p_m3: 83.08, cost_p_tonne: 249.21 },\n    blenheim: { cost_p_m3: 161.64, cost_p_tonne: 323.3 },\n    christchurch: { cost_p_m3: 161.64, cost_p_tonne: 323.3 },\n    nelson: { cost_p_m3: 190.8, cost_p_tonne: 381.7 },\n    ashburton: { cost_p_m3: 218.9, cost_p_tonne: 437.8 },\n    westport: { cost_p_m3: 224.5, cost_p_tonne: 449 },\n    greymouth: { cost_p_m3: 230.1, cost_p_tonne: 460.3 },\n    // gore: { cost_p_m3: 222.3, cost_p_tonne: 444.5 },\n    oamaru: { cost_p_m3: 218.9, cost_p_tonne: 437.8 },\n    timaru: { cost_p_m3: 218.9, cost_p_tonne: 437.8 },\n    dunedin: { cost_p_m3: 222.3, cost_p_tonne: 444.5 },\n    invercargill: { cost_p_m3: 230.1, cost_p_tonne: 460.3 }\n  };\n\n  public USER_FRIENDLY_LOCATION_DICT: any = {\n    whangarei: 'whangarei',\n    hamilton: 'hamilton',\n    tauranga: 'tauranga',\n    rotorua: 'rotorua',\n    napier: 'Napier', // Napier/Hastings\n    hastings: 'Hastings', // Napier/Hastings\n    gisborne: 'Gisborne',\n    new_plymouth: 'New Plymouth', // changed to follow underscore\n    palmerston_nth: 'Palmerston North',\n    wellington: 'Wellington',\n    blenheim: 'Blenheim',\n    christchurch: 'Christchurch',\n    nelson: 'Nelson',\n    ashburton: 'Ashburton',\n    westport: 'Westport',\n    greymouth: 'Greymouth',\n    gore: 'Gore',\n    oamaru: 'Oamaru',\n    timaru: 'Timaru',\n    dunedin: 'Dunedin',\n    invercargill: 'Invercargill',\n  };\n\n    public init(): void {\n        // do setup here\n        const tempMinorLocationsDict = JSON.parse(JSON.stringify(this.MINOR_LOCATIONS));\n        const tempMajorLocationsDict = JSON.parse(JSON.stringify(this.MAJOR_LOCATIONS));\n\n        // Note that input into _ (lodash) functions are manipulated and values are persisted\n        // rather than the reference\n        let _locations = {};\n        const tempMinorKeys = Object.keys(tempMinorLocationsDict);\n        for (const minorKey of tempMinorKeys) {\n            const value = tempMinorLocationsDict[minorKey];\n            _locations[minorKey] = value;\n        }\n        const tempMajorKeys = Object.keys(tempMajorLocationsDict);\n        for (const majorKey of tempMajorKeys) {\n            const value = tempMajorLocationsDict[majorKey];\n            _locations[majorKey] = value;\n        }\n        const __locations = _locations;\n        this.LOCATIONS = __locations;\n\n        // Load in pricing level keys of all Locations\n        const tempKeyList = Object.keys(_locations);\n        const pricingLevel = {};\n        tempKeyList.forEach((key) => {\n            pricingLevel[key] = key;\n        });\n        this.PRICING_LEVEL_KEY = pricingLevel;\n        this.MINOR_MAJOR_REL_KEY = {\n            bell_block: this.PRICING_LEVEL_KEY.new_plymouth,\n            bluff: this.PRICING_LEVEL_KEY.invercargill,\n            cambridge: this.PRICING_LEVEL_KEY.hamilton,\n            mosgiel: this.PRICING_LEVEL_KEY.dunedin,\n            feilding: this.PRICING_LEVEL_KEY.palmerston_nth,\n            inglewood: this.PRICING_LEVEL_KEY.new_plymouth,\n            rangiora: this.PRICING_LEVEL_KEY.christchurch,\n            taupo: this.PRICING_LEVEL_KEY.rotorua,\n            te_awamutu: this.PRICING_LEVEL_KEY.hamilton,\n            waitara: this.PRICING_LEVEL_KEY.new_plymouth,\n            balclutha: this.PRICING_LEVEL_KEY.dunedin,\n            bulls: this.PRICING_LEVEL_KEY.palmerston_nth,\n            edgecumbe: this.PRICING_LEVEL_KEY.tauranga,\n            eltham: this.PRICING_LEVEL_KEY.new_plymouth,\n            foxton: this.PRICING_LEVEL_KEY.palmerston_nth,\n            gore: this.PRICING_LEVEL_KEY.invercargill,\n            greytown: this.PRICING_LEVEL_KEY.wellington,\n            levin: this.PRICING_LEVEL_KEY.palmerston_nth,\n            marton: this.PRICING_LEVEL_KEY.palmerston_nth,\n            matamata: this.PRICING_LEVEL_KEY.hamilton,\n            morrinsville: this.PRICING_LEVEL_KEY.hamilton,\n            otorohanga: this.PRICING_LEVEL_KEY.hamilton,\n            otaki: this.PRICING_LEVEL_KEY.palmerston_nth,\n            paraparaumu: this.PRICING_LEVEL_KEY.wellington,\n            putaruru: this.PRICING_LEVEL_KEY.hamilton,\n            stratford: this.PRICING_LEVEL_KEY.new_plymouth,\n            te_aroha: this.PRICING_LEVEL_KEY.hamilton,\n            te_puke: this.PRICING_LEVEL_KEY.tauranga,\n            wanganui: this.PRICING_LEVEL_KEY.palmerston_nth,\n            alexandra: this.PRICING_LEVEL_KEY.dunedin,\n            arrowtown: this.PRICING_LEVEL_KEY.dunedin,\n            carterton: this.PRICING_LEVEL_KEY.wellington,\n            cromwell: this.PRICING_LEVEL_KEY.dunedin,\n            dargaville: this.PRICING_LEVEL_KEY.whangarei,\n            featherston: this.PRICING_LEVEL_KEY.wellington,\n            hawera: this.PRICING_LEVEL_KEY.new_plymouth,\n            hokitika: this.PRICING_LEVEL_KEY.greymouth,\n            kaikohe: this.PRICING_LEVEL_KEY.whangarei,\n            kerikeri: this.PRICING_LEVEL_KEY.whangarei,\n            masterton: this.PRICING_LEVEL_KEY.wellington,\n            queenstown: this.PRICING_LEVEL_KEY.dunedin,\n            te_kuiti: this.PRICING_LEVEL_KEY.hamilton,\n            // thames: null, // OUT OF ZONE\n            tokoroa: this.PRICING_LEVEL_KEY.hamilton,\n            whakatane: this.PRICING_LEVEL_KEY.tauranga,\n            woodville: this.PRICING_LEVEL_KEY.palmerston_nth,\n            bennydale: this.PRICING_LEVEL_KEY.hamilton,\n            // coromandel: null, // OUT OF ZONE\n            kaitaia: this.PRICING_LEVEL_KEY.whangarei,\n            opotiki: this.PRICING_LEVEL_KEY.tauranga,\n            // paeroa: null,\n            taumarunui: this.PRICING_LEVEL_KEY.hamilton,\n            wairoa: this.PRICING_LEVEL_KEY.napier,\n            // warkworth: null, // OUT OF ZONE\n            turangi: this.PRICING_LEVEL_KEY.rotorua,\n            // wellsford: null, // OUT OF ZONE\n            // whitianga: null, // OUT OF ZONE\n        };\n\n        // Create key dict ref to ref minor towns\n        const tempMinorTownsKeys = Object.keys(this.MINOR_MAJOR_REL_KEY);\n        const minorTownKeys = {};\n        tempMinorTownsKeys.forEach((key) => {\n            minorTownKeys[key] = key;\n        });\n        this.MINOR_TOWNS_KEYS = minorTownKeys;\n\n        // Parse minor towns into user friendly location dict, replacing the _ and the lower case char\n        // Init user firendly values\n        const tempMinorRelDict = JSON.parse(JSON.stringify(this.MINOR_MAJOR_REL_KEY));\n        const tempMinorRelKeys = Object.keys(tempMinorRelDict);\n        tempMinorKeys.forEach.bind(this);\n        tempMinorRelKeys.forEach((minorRelKey) => {\n            // console.log('minorRelKey', minorRelKey);\n            let value = tempMinorRelDict[minorRelKey];\n            if (value != null) { // filter out unsupported\n                value = value.replace('_', ' ');\n                value = setCharAt(value, 0, value.substr(0, 0).toUpperCase());\n                this.USER_FRIENDLY_LOCATION_DICT[minorRelKey] = minorRelKey;\n            }\n        });\n\n        this.ratingCard = new RatingCard(this.MAJOR_LOCATIONS, this.MINOR_LOCATIONS, this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION);\n        this.locationOptions = this.getLocationOptions();\n    }\n\n    public setRatingCardData(args): void {\n        if (args) {\n            console.log('Loading quote config data', args);\n            this.MAJOR_LOCATIONS = args.majorLocations;\n            this.MINOR_LOCATIONS = args.minorLocations;\n            this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION = args.pricingRateLevelList;\n            this.ratingCard = new RatingCard(this.MAJOR_LOCATIONS, this.MINOR_LOCATIONS, this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION);\n            console.log('Done loading quote config data', {\n                MAJOR_LOCATION: this.MAJOR_LOCATIONS,\n                MINOR_LOCATIONS: this.MINOR_LOCATIONS,\n                COST_RATE_PER_TONNE_OR_KG_BY_LOCATION: this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION\n            });\n        }\n    }\n\n    public getRatingCard(): RatingCard {\n        this.ratingCard = this.ratingCard ? this.ratingCard :\n            this.ratingCard = new RatingCard(0, this.MAJOR_LOCATIONS, this.MINOR_LOCATIONS, this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION);\n        return this.ratingCard;\n    }\n\n    public getLocationOptions(): any[] {\n        // Generate dict of locations\n        if (!this.USER_FRIENDLY_LOCATION_DICT) {\n            return [];\n        }\n        const locations: any = JSON.parse(JSON.stringify(this.USER_FRIENDLY_LOCATION_DICT));\n        /**\n         * [\n         * {\n         *      userValue : 'Bell block',\n         *      value : 'bell_block'\n         * },\n         * ]\n         */\n        type userFriendlyLocation = {\n            userValue: string,\n            value: string\n        };\n        const res: userFriendlyLocation[] = [];\n        const locationsKeys = Object.keys(locations);\n        locationsKeys.forEach((key) => {\n            res.push({\n                userValue : (locations[key].charAt(0).toUpperCase() + locations[key].substr(1)).replace('_', ' '),\n                value : key\n            });\n        });\n        // Adhoc pop in auckland\n        res.push({\n            userValue: 'Auckland',\n            value: 'auckland'\n        });\n        return res;\n\n    }\n\n    public getZone(minorLocation: string) {\n        let zone = '';\n        _.forEach(this.MINOR_LOCATION_KEY_DICT, (value, key) => {\n            value.forEach((loc) => {\n                if (loc === minorLocation) {\n                    zone = key;\n                }\n            });\n        });\n        return zone;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { QuotePriceLevelService } from './quote-price-level.service';\nimport {\n    PriceRule, PriceConfig, PriceRuleLocationConditional,\n    QuoteInterfaceResponse, QuoteInterfaceRequest\n} from 'fr8models';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QuoteInterface {\n    constructor(public quotePriceLevelService: QuotePriceLevelService) { }\n    /**\n     * User facing function\n     */\n    public getQuote (pricingRules: Array<PriceRule>,\n                     priceConfig: PriceConfig,\n                     request: QuoteInterfaceRequest,\n                     priceRuleLocationConditional: PriceRuleLocationConditional): QuoteInterfaceResponse {\n            if (!pricingRules || pricingRules.length <= 0) {\n                console.error('error pricingRules was empty');\n                return new QuoteInterfaceResponse(false, undefined);\n            }\n\n            const isRequestValidResponse = this.isRequestValid(request);\n            if (!isRequestValidResponse.success) {\n                console.error('error request is missing needed attr', isRequestValidResponse.missingAttr);\n                return new QuoteInterfaceResponse(false, undefined);\n            }\n\n            const isConfigValidResponse = this.isPriceConfigValid(request);\n            if (!isConfigValidResponse.success) {\n                console.error('error config is missing needed attr', isConfigValidResponse.missingAttr);\n                return new QuoteInterfaceResponse(false, undefined);\n            }\n\n            let totalCost = 0;\n            // Order pricing rules\n            pricingRules = _.sortBy(pricingRules);\n\n            const pricingComparators = _.filter(JSON.parse(JSON.stringify(pricingRules)), (pr) => {\n                return pr.stepNo < 0;\n            })[0] as PriceRule;\n            pricingRules = _.filter(pricingRules, (pr) => {\n                return pr.stepNo > -1;\n            }) as Array<PriceRule>;\n\n            let costA = null;\n            let costB = null;\n            let comparisonSumDone = false;\n\n            let step = 1;\n            pricingRules.forEach((pricingRule) => {\n                const costResponse: QuoteInterfaceResponse = this.getCost(pricingRule.type, priceConfig, request);\n                if (costResponse.success) {\n\n                    if (pricingComparators) { // If comparitors exist\n                        console.log('calculating pricing comparitors step: ', step);\n                        if (pricingComparators.compareSteps.stepA &&\n                            pricingComparators.compareSteps.stepA === step && !costA) {\n                            costA = costResponse.cost;\n                            console.log('costA: ', costA, step);\n                        } else if (pricingComparators.compareSteps.stepB &&\n                            pricingComparators.compareSteps.stepB === step && !costB) {\n                            costB = costResponse.cost;\n                            console.log('costB: ', costA, step);\n                        }\n\n                        if (costA && costB && !comparisonSumDone) { // Add to total when you have both\n                            totalCost += costA > costB ? costA : costB;\n                            console.log('found both costA and costB Summing: ', costA, costB, step);\n                            comparisonSumDone = true;\n\n                            // If doesnt fit the comparitor steps then default and is not a comparitor step\n                        } else if (pricingComparators.compareSteps.stepA !== step &&\n                            pricingComparators.compareSteps.stepB !== step) {\n                            totalCost += costResponse.cost;\n                            console.log('Ignoring no costCompare match this step: ', costResponse.cost, step);\n                        }\n                    } else {\n                        totalCost += costResponse.cost;\n                    }\n                } else {\n                    console.error('Could not parse cost for', PriceRule);\n                }\n\n                step++;\n            });\n\n            return new QuoteInterfaceResponse(true, totalCost);\n    }\n\n/**\n * Main Routing Func for getting cost\n */\npublic getCost(type: string, config: PriceConfig, request: QuoteInterfaceRequest): QuoteInterfaceResponse {\n    let costResponse: QuoteInterfaceResponse;\n    if (typeof type === 'undefined') {\n        return new QuoteInterfaceResponse(false, undefined);\n    }\n    if (!_.includes(PriceRule.TYPE, type)) {\n        return new QuoteInterfaceResponse(false, undefined);\n    }\n\n    switch (type) {\n        case PriceRule.TYPE.RATING_CARD:\n            costResponse = this.getRatingCardCost(config, request.weight, request.mass,\n                request.to, request.from);\n            // call the quote service here\n            break;\n        case PriceRule.TYPE.TONNE_RATE:\n            costResponse = this.getTonneRateCost(request.tonne, this.getTonneRate(request.to, config.ratingCard.pricingRateLevelList));\n            break;\n        case PriceRule.TYPE.MASS_RATE:\n            costResponse = this.getMassRateCost(request.mass, this.getMassRate(request.to, config.ratingCard.pricingRateLevelList));\n            break;\n        case PriceRule.TYPE.PALLET_RATE:\n            costResponse = this.getPalletRateCost(request.palletAmount, config.palletRate);\n            break;\n        case PriceRule.TYPE.DRIVER_COST:\n            // only for owner driver, only for based amount of package?\n            costResponse = this.getDriverCost(request.driverCost);\n            break;\n        case PriceRule.TYPE.UPLIFT_COST:\n            costResponse = this.getUpliftCost(request.upliftCost);\n            // flat cost\n            break;\n        case PriceRule.TYPE.FUEL_ADJUST_FEE:\n            costResponse = this.getFuelAdustmentFee(request.totalCost, config.fafRate);\n            break;\n        case PriceRule.TYPE.PALLET_COST:\n            // rate of rental cost\n            costResponse = this.getPalletCost(request.palletAmount, config.palletRate);\n            break;\n        case PriceRule.TYPE.MIN_CHARGE:\n            // flat cost\n            costResponse = this.getMinCharge(config.minCharge);\n            break;\n        case PriceRule.TYPE.FLAT_CHARGE:\n            // flat cost\n            costResponse = this.getFlatCost(config.flatCost);\n            break;\n        case PriceRule.TYPE.GST:\n            costResponse = this.getGst(request.totalCalculatedCost, config.gstRate);\n            break;\n    }\n\n    if (typeof costResponse === 'undefined') {\n        return new QuoteInterfaceResponse(false, undefined);\n    } else {\n        return costResponse;\n    }\n}\n\npublic getTonneRate(location: string, pricingRateLevelList: any): number {\n    location = location.toLowerCase();\n    return pricingRateLevelList && pricingRateLevelList[location] ? pricingRateLevelList[location].cost_p_tonne : undefined;\n}\n\npublic getMassRate(location: string, pricingRateLevelList: any): number {\n    location = location.toLowerCase();\n    return pricingRateLevelList &&  pricingRateLevelList[location] ? pricingRateLevelList[location].cost_p_m3 : undefined;\n}\n\npublic getGst(totalCost: number, gstRate: number): QuoteInterfaceResponse {\n    // Get the cost of renting the pallets, pre init rent rate from diff suppliers\n    if (totalCost && totalCost && typeof gstRate === 'number' && typeof gstRate === 'number') {\n        return new QuoteInterfaceResponse(true, totalCost * gstRate);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getFlatCost(flatCost: number): QuoteInterfaceResponse {\n    // Get the cost of renting the pallets, pre init rent rate from diff suppliers\n    if (flatCost && typeof flatCost === 'number') {\n        return new QuoteInterfaceResponse(true, flatCost);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getMinCharge(minCharge: number): QuoteInterfaceResponse {\n    // Get the cost of renting the pallets, pre init rent rate from diff suppliers\n    if (minCharge && typeof minCharge === 'number') {\n        return new QuoteInterfaceResponse(true, minCharge);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getPalletCost(palletNo: number, rentRate: number): QuoteInterfaceResponse {\n    // Get the cost of renting the pallets, pre init rent rate from diff suppliers\n    if (palletNo && rentRate && typeof palletNo === 'number' && typeof rentRate === 'number') {\n        return new QuoteInterfaceResponse(true, palletNo * rentRate);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getFuelAdustmentFee(faf: number, rate: number): QuoteInterfaceResponse {\n    // Have to ensure rate of FAF is of THAT jobs month NOT the CURRENT RATE\n    if (faf && rate && typeof faf === 'number' && typeof rate === 'number') {\n        return new QuoteInterfaceResponse(true, faf * rate);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getUpliftCost(upliftCost: number): QuoteInterfaceResponse {\n    if (upliftCost && typeof upliftCost === 'number') {\n        return new QuoteInterfaceResponse(true, upliftCost);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getDriverCost(driverCost: number): QuoteInterfaceResponse {\n    if (driverCost && typeof driverCost === 'number') {\n        return new QuoteInterfaceResponse(true, driverCost);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getPalletRateCost(palletNo: number, rate: number): QuoteInterfaceResponse {\n    if (palletNo && rate && typeof palletNo === 'number' && typeof rate === 'number') {\n        return new QuoteInterfaceResponse(true, palletNo * rate);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getTonneRateCost(tonne: number, rate: number): QuoteInterfaceResponse {\n    // Have to ensure that number comes in as tonne NOT KG\n    if (tonne && rate && typeof tonne === 'number' && typeof rate === 'number') {\n        return new QuoteInterfaceResponse(true, tonne * rate);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\npublic getMassRateCost(mass: number, rate: number): QuoteInterfaceResponse {\n    if (mass && rate && typeof mass === 'number' && typeof rate === 'number') {\n        return new QuoteInterfaceResponse(true, mass * rate);\n    } else {\n        return new QuoteInterfaceResponse(false, 0);\n    }\n}\n\npublic getRatingCardCost(conf: PriceConfig, kgWeight: number, mass: number,\n                         to: string, from: string): QuoteInterfaceResponse {\n        if (conf && conf.ratingCard && kgWeight && mass && to && from) {\n            const ratingCard = conf.ratingCard;\n            let result;\n\n            if (this.quotePriceLevelService._isMinorLocation(to)) {\n                result = this.quotePriceLevelService\n                    ._getMinorLocationTotalCost(to, mass, kgWeight);\n            } else {\n                result = this.quotePriceLevelService\n                    .calculateCost(kgWeight, mass, to,\n                        ratingCard.majorLocations,\n                        ratingCard.pricingRateLevelList,\n                        ratingCard.minorLocations);\n            }\n            console.log(result.message);\n            return new QuoteInterfaceResponse(result.success, result.cost);\n        } else {\n            return new QuoteInterfaceResponse(false, 0);\n        }\n    }\n\npublic isRequestValid(request): any {\n    let isRequestMissingAttr = false;\n    const missingAttr: Array<string> = [];\n    _.forEach(request, (v, k) => {\n        if (!isRequestMissingAttr) {\n            isRequestMissingAttr = typeof v === 'undefined' && !v;\n        }\n        if (typeof v === 'undefined' && !v) {\n            missingAttr.push(k);\n        }\n    });\n    // Returning a simple object\n    return {\n        success: !isRequestMissingAttr,\n        missingAttr\n    };\n}\n\npublic isPriceConfigValid(config): any {\n    let isConfigMissingAttr = false;\n    const missingAttr: Array<string> = [];\n    _.forEach(config, (v, k) => {\n        if (!isConfigMissingAttr) {\n            isConfigMissingAttr = typeof v === 'undefined' && !v;\n        }\n        if (typeof v === 'undefined' && !v) {\n            missingAttr.push(k);\n        }\n    });\n    // Returning a simple object\n    return {\n        success: !isConfigMissingAttr,\n        missingAttr\n    };\n}\n}\n","import { Injectable } from '@angular/core';\nimport { QuoteConfig as QuoteConstants } from './quote-config.service';\n\n/**\n * quote.service.js\n * @description\n * Functions which purely try to calculate values\n * @author Miguel Saavedra\n */\nexport interface IPricingLevel {\n    m3: number;\n    tonne: number;\n    cost: number;\n}\nexport interface IPricingRateLevel {\n    cost_p_m3: number;\n    cost_p_tonne: number;\n}\nexport interface IPriceLevelQuery {\n    isFoundPricingLevel: boolean;\n    isGreaterThanMaxPricing: boolean;\n    pricingLevel: IPricingLevel;\n    success: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QuotePriceLevelService {\n\n    public QUOTE_CONSTANTS: QuoteConstants;\n\n    // Over weight or mass price\n    public COST_RATE_PER_TONNE_OR_KG_BY_LOCATION: {[key: string]: IPricingRateLevel};\n    public MINOR_LOCATION_DICT: {[key: string]: IPricingRateLevel};\n    // Used to bind the relationship between the minor and major location\n    public MINOR_LOCATION_MAJOR_LOCATION_REL_KEY_DICT: {[key: string]: string};\n\n    public MINOR_TOWN_KEYS: {[key: string]: string}; // Keys of the minor major rel dict, i.e. minor towns\n    // list of town key ids\n    public MINOR_LOCATION_KEYS: string[] = [];\n    public MAJOR_LOCATION_KEYS: string[] = [];\n\n    // relationship with minor to major towns\n    public ZONE_REL_MINOR_TOWN_KEYS: string[] = [];\n    public ZONE_REL_MINOR_TOWN: {[key: string]: string[]};\n    public MAJOR_LOCATION_DICT: {[key: string]: string[]};\n\n    // Standard low volume or weight pricing\n    // Using keys to get list of locations\n    public PRICING_LEVEL: {[key: string]: string[]}; // moved to the modules\n    public PRICING_LEVEL_KEY: {[key: string]: string};\n\n    // User friendly locations\n    public USER_FRIENDLY_LOCATION_DICT: {[key: string]: string};\n\n    public initialize(quoteConfig?: QuoteConstants): void {\n        if (quoteConfig) {\n            this.QUOTE_CONSTANTS = quoteConfig;\n        } else {\n            this.QUOTE_CONSTANTS = new QuoteConstants();\n            this.QUOTE_CONSTANTS.init();\n        }\n\n        this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION = this.QUOTE_CONSTANTS.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION;\n        this.MINOR_LOCATION_DICT = this.QUOTE_CONSTANTS.MINOR_LOCATIONS;\n\n        this.PRICING_LEVEL = this.QUOTE_CONSTANTS.LOCATIONS; // in QUOTE_CONSTANTS service\n        this.MAJOR_LOCATION_DICT = this.QUOTE_CONSTANTS.LOCATIONS; // in QUOTE_CONSTANTS service\n        this.MINOR_LOCATION_MAJOR_LOCATION_REL_KEY_DICT = this.QUOTE_CONSTANTS.MINOR_MAJOR_REL_KEY;\n        this.MINOR_TOWN_KEYS = this.QUOTE_CONSTANTS.MINOR_TOWNS_KEYS;\n        this.USER_FRIENDLY_LOCATION_DICT = this.QUOTE_CONSTANTS.USER_FRIENDLY_LOCATION_DICT;\n        // Generate Enums\n        const tempKeyList = Object.keys(this.PRICING_LEVEL);\n        let tempLevelKey = {};\n        tempKeyList.forEach(function(key) {\n            tempLevelKey[key] = key;\n        });\n        this.PRICING_LEVEL_KEY = tempLevelKey;\n\n        this.MINOR_LOCATION_KEYS = Object.keys(this.QUOTE_CONSTANTS.MINOR_LOCATIONS);\n        this.MAJOR_LOCATION_KEYS = Object.keys(this.QUOTE_CONSTANTS.MAJOR_LOCATIONS);\n\n        // zone : minor town\n        this.ZONE_REL_MINOR_TOWN = this.QUOTE_CONSTANTS.MINOR_LOCATION_KEY_DICT;\n        this.ZONE_REL_MINOR_TOWN_KEYS = Object.keys(this.QUOTE_CONSTANTS.MINOR_LOCATION_KEY_DICT);\n    }\n\n    /**\n     * @returns boolean\n     */\n    public _isMinorLocation(locationString: string): boolean {\n        if (locationString == null || typeof locationString === 'undefined') return false;\n        locationString = locationString.toLowerCase();\n        const keys = Object.keys(this.MINOR_TOWN_KEYS);\n        let res = keys.indexOf(locationString) >= 0;\n        return res;\n    }\n\n    public _getAssocMajorLocation(locationString: string ): string {\n        return this.MINOR_LOCATION_MAJOR_LOCATION_REL_KEY_DICT[locationString];\n    }\n\n    public setRatingCard(args) {\n        this.PRICING_LEVEL = args.majorLocations;\n        this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION = args.pricingRateLevelList;\n        this.MINOR_TOWN_KEYS = args.minorLocations;\n    }\n\n    /**\n     * Charged on weight or cubic, whichever is greater.\n     * FAF and GST is additional.\n     * For consignments in excess of 3.0m 3 or 1000kg, rate is pro rata.\n     * Rural charges may still apply.\n     */\n    public _getMinorLocationTotalCost(locationString: string, m3: number, kg: number): any {\n        const result = {\n            success : false,\n            message : \"\",\n            cost: 0\n        };\n        // check if is minor location\n        if (!this._isMinorLocation(locationString)) {\n            result.success = false;\n            result.message = \"location is not a minor location\";\n            return result;\n        }\n        locationString = locationString.toLowerCase();\n\n        // get assoc major location\n        let majorLocationString: string = this._getAssocMajorLocation(locationString);\n        if (majorLocationString == null || typeof majorLocationString === 'undefined') {\n            result.success = false;\n            // currently there are some minor locations which do not explicitly have a major location partner\n            // this would stop the costing function here, as there is no value to tag against\n            result.message = 'location '+locationString+' is not supported, and does not have a major location associated';\n            return result;\n        }\n\n        // get assoc major location cost\n        // get zone\n        let zone = '';\n        for(let zoneKey in this.ZONE_REL_MINOR_TOWN) {\n            let minorLocationList: string[] = this.ZONE_REL_MINOR_TOWN[zoneKey];\n            minorLocationList.forEach(function(minorLocation){\n                if(locationString === minorLocation) {\n                    zone = zoneKey;\n                }\n            });\n        }\n        if (zone === '') {\n            result.success = false;\n            result.message = 'location does not have a zone assoc ' + locationString;\n            return result;\n        }\n\n        // get additional cost\n\n        const minorCostRes = this.calculateCost(kg, m3, zone,\n                                             this.PRICING_LEVEL, this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION, this.MINOR_TOWN_KEYS);\n\n        if (!minorCostRes.success) {\n            result.message = minorCostRes.message;\n            result.cost = 0;\n            return result;\n        }\n\n        let minorLocationCost = minorCostRes.cost;\n        let costRes = this.calculateCost(kg, m3, majorLocationString, this.PRICING_LEVEL, this.COST_RATE_PER_TONNE_OR_KG_BY_LOCATION, this.MINOR_TOWN_KEYS);\n        if (costRes.success) {\n            let majorLocationCost = costRes.cost;\n            let totalCost = majorLocationCost + minorLocationCost;\n            result.success = true;\n            result.cost = totalCost;\n            result.message = costRes.message;\n            return result;\n        } else {\n            result.message = costRes.message;\n            result.cost = 0;\n            return result;\n        }\n    };\n\n    // Minor location helper functions\n    public _kgToTonne(kg: number): number {\n        return kg / 1000;\n    }\n\n    public _dictIncludesKey(dict: any, findKey: any): any {\n        const keys = Object.keys(dict);\n        let result = false;\n        keys.forEach((el) => {\n            if (el === findKey) {\n                result = true;\n            }\n        });\n        return result;\n    }\n   public _getHighestSetPrice(pricingLocation: string, pricingLevelDict: any) {\n        // console.log('getHi', pricingLevelDict);\n        const setPricings = pricingLevelDict[pricingLocation];\n\n        let highestPrice = 0;\n        let highestSet: IPricingLevel;\n\n        if (setPricings.length <= 0) {\n            return {\n                success : false,\n                price : 0,\n                mass :  0,\n                weight :  0,\n            };\n        }\n\n        setPricings.forEach((priceObject: IPricingLevel) => {\n            // ensure get the highest cost from the PRICING_LEVEL dict\n            if (highestPrice <= priceObject.cost) {\n                highestPrice = priceObject.cost;\n                highestSet = priceObject;\n            }\n        });\n\n        if (highestPrice > 0) {\n            return {\n                success : true,\n                price : highestPrice,\n                mass :  highestSet.m3,\n                weight :  highestSet.tonne\n            };\n        } else {\n            return {\n                success : false,\n                price : highestPrice,\n                mass :  highestSet.m3,\n                weight :  highestSet.tonne\n            };\n        }\n    }\n\n    /**\n     * @param {*} weight tonnes\n     * @param {*} location location string\n     */\n   public _getWeightPricingLevel(weight: number, location: string , pricingLevelDict: any) {\n        // console.log('getHPL', pricingLevelDict);\n        // Get highest price level for comparison\n        const highestSetObj = this._getHighestSetPrice(location, pricingLevelDict);\n        if (!highestSetObj.success) {\n            return {\n                isFoundPricingLevel : false,\n                isGreaterThanMaxPricing : false,\n                pricingLevel : {},\n                success : false\n            };\n        } else if (highestSetObj.weight < weight) {\n            return {\n                isFoundPricingLevel : false,\n                isGreaterThanMaxPricing : true,\n                pricingLevel : {},\n                success : true\n            };\n        }\n\n        let isFoundPricingLevel = false;\n        let pricingLevel = {};\n        const isGreaterThanMaxPricing: boolean = false;\n        // If the is not greater than max pricing for weight\n        pricingLevelDict[location].forEach((item: IPricingLevel) => {\n            if (weight <= item.tonne && !isFoundPricingLevel) {\n                pricingLevel = item;\n                isFoundPricingLevel = true;\n            }\n        });\n\n        return {\n            isFoundPricingLevel,\n            isGreaterThanMaxPricing,\n            pricingLevel,\n            success : true,\n        };\n    };\n\n    /**\n     * @param {*} mass m3\n     * @param {*} location location string\n     */\n   public _getMassPricingLevel(mass: number, location: string, pricingLevelDict: any) {\n        // console.log('getMPL', pricingLevelDict);\n        let idx = 0;\n        let isFoundPricingLevel = false;\n        let pricingLevel = {};\n\n        // Get highest price level for comparison\n\n        let highestSetObj = this._getHighestSetPrice(location, pricingLevelDict);\n        if (!highestSetObj.success) {\n            return {\n                success : false,\n                pricingLevel : pricingLevel,\n                isFoundPricingLevel : isFoundPricingLevel,\n                isGreaterThanMaxPricing : false\n            };\n        } else if(highestSetObj.mass < mass) {\n            return {\n                success : true,\n                pricingLevel : pricingLevel,\n                isFoundPricingLevel : isFoundPricingLevel,\n                isGreaterThanMaxPricing : true\n            };\n        }\n\n        // If isnt over max pricing for mass\n        pricingLevelDict[location].forEach(function (item: IPricingLevel){\n            if (mass <= item.m3 && !isFoundPricingLevel) {\n                pricingLevel = item;\n                isFoundPricingLevel = true;\n            }\n        });\n\n        return {\n            success: true,\n            pricingLevel : pricingLevel,\n            isFoundPricingLevel : isFoundPricingLevel,\n            isGreaterThanMaxPricing : false\n        };\n    };\n\n    /**\n     * Compares Price Level object and outputs the cost which is greater\n     */\n   public _getHigherMassWeightCost(weightPL: IPricingLevel, massPL: IPricingLevel) {\n        let weightCost = weightPL.cost;\n        let massCost = massPL.cost;\n        if (typeof weightCost === 'undefined' && typeof massCost !== 'undefined') {\n            return massCost;\n        } else if (typeof massCost === 'undefined' && typeof weightCost !== 'undefined') {\n            return weightCost;\n        } else if (typeof weightCost === 'undefined' && typeof massCost === 'undefined') {\n            return -1;\n        } else {\n            return weightCost > massCost ? weightCost : massCost;\n        }\n    }\n\n    /**\n     * @param {*} weight kg\n     * @param {*} mass m3\n     * @param {*} location location string\n     * @param {*} pricingLevelDict PRICING_LEVEL\n     * @param {*} maxCostDict COST_RATE_PER_TONNE_OR_KG_BY_LOCATION\n     * @param {*} minorLocationDict MINOR_TOWN_KEYS\n     */\n    public calculateCost(weight: number, mass: number, locationString: string, pricingLevelDict: any, maxCostDict: any, minorLocationDict: any) {\n        if (weight == null) {\n            return {\n                message: 'weight is null',\n                success: false,\n                cost: 0\n            };\n        }\n\n        if (mass == null) {\n            return {\n                message: 'mass is null',\n                success: false,\n                cost: 0\n            };\n        }\n\n        if (locationString == null) {\n            return {\n                message: 'location string is null',\n                success: false,\n                cost: 0\n            };\n        }\n\n        if (pricingLevelDict == null) {\n            return {\n                message: 'pricing level dict is null',\n                success: false,\n                cost: 0\n            };\n        }\n\n        if (maxCostDict == null) {\n            return {\n                message:'max cost dict is null',\n                success: false,\n                cost: 0\n            };\n        }\n\n        if (minorLocationDict == null) {\n            return {\n                message: 'minor location is dict is null',\n                success: false,\n                cost: 0\n            };\n        }\n\n        try {\n            let cost: number = 0;\n            let message: string = \"\";\n            // Exists in cost rate location object\n            let parsingResult: any = this.parseLocation(locationString, pricingLevelDict, minorLocationDict);\n            if (!parsingResult.success) {\n                return {\n                    message: 'location ' + locationString + ' could not be parsed',\n                    success: false,\n                    cost: 0\n                };\n            }\n            locationString = parsingResult.location;\n            if (!this._dictIncludesKey(pricingLevelDict, locationString) || !parsingResult.success) {\n                return {\n                    message: 'location ' + locationString + ' cannot be found',\n                    success: false,\n                    cost: 0\n                };\n            }\n\n            // convert weight to tonne\n            weight = this._kgToTonne(weight);\n\n            // calc next closest pricing level\n            let massResult: any = this._getMassPricingLevel(mass, locationString, pricingLevelDict);\n            let weightResult: any = this._getWeightPricingLevel(weight, locationString, pricingLevelDict);\n\n            // calc over max priced level\n            let highQuantityWeightCost: number = maxCostDict[locationString].cost_p_tonne * weight;\n            let highQuantityMassCost: number = maxCostDict[locationString].cost_p_m3 * mass;\n            let highQuantityCost: number = highQuantityWeightCost > highQuantityMassCost ? highQuantityWeightCost : highQuantityMassCost;\n\n            // get message results\n            let stringMassResult = massResult != null ? JSON.stringify(massResult) : 'null';\n            let stringWeightResult = weightResult != null ? JSON.stringify(weightResult) : 'null';\n\n            // calc on pricing level\n            if (weightResult.pricingLevel && massResult.pricingLevel) {\n                cost = this._getHigherMassWeightCost(weightResult.pricingLevel, massResult.pricingLevel);\n                if (cost < 0 && !(massResult.isGreaterThanMaxPricing || weightResult.isGreaterThanMaxPricing)) {\n                    return {\n                        message: 'pricing level for ' + weight + 'T and ' + mass +\n                            'm^3 could not be found and cost is 0. Mass result' + stringMassResult + ' n\\ ' +\n                            ' weight Result' + stringWeightResult,\n                        success: false,\n                        cost: 0\n                    };\n                }\n                message = 'pricing level for ' + weight + 'T and ' + mass +\n                    'm^3 got LOWER THAN MAX COST. Mass result' + stringMassResult + ' n\\ ' +\n                    ' weight Result' + stringWeightResult;\n\n            } else if ((!massResult.isFoundPricingLevel || !weightResult.isFoundPricingLevel) && !(massResult.isGreaterThanMaxPricing || weightResult.isGreaterThanMaxPricing)) {\n                return {\n                    message: 'pricing level for ' + weight + 'T and ' + mass +\n                        'm^3 could not be found and the max pricing rates could not be applied. Mass result' + stringMassResult + ' n\\ ' +\n                        ' weight Result' + stringWeightResult,\n                    success: false,\n                    cost: 0\n                };\n            } else {\n                return {\n                    message: 'pricing level ' + weight + ' could not be calculated',\n                    success: false,\n                    cost: 0\n                };\n            }\n\n            // Try to charge the highest cost\n            if (highQuantityCost > cost && this._canUseMaxPricing(massResult, weightResult)) {\n                cost = highQuantityCost;\n                message = 'pricing level for ' + weight + 'T and ' + mass +\n                    'm^3 got MAX COST. Mass result' + stringMassResult + ' n\\ ' +\n                    ' weight Result' + stringWeightResult;\n            }\n\n            return {\n                message: message,\n                success: true,\n                cost: cost\n            };\n\n\n        } catch(error) {\n            console.error('Could Not get quote', error);\n        }\n    };\n\n    /********************************************************************\n     *                         Helper Functions\n     ********************************************************************/\n\n    public _canUseMaxPricing(massResult: any, weightResult: any): boolean {\n        return (!massResult.isFoundPricingLevel || !weightResult.isFoundPricingLevel) && (massResult.isGreaterThanMaxPricing || weightResult.isGreaterThanMaxPricing);\n    };\n\n    /**\n     * @returns {Array} list of locations\n     */\n    public getLocations(): any {\n        // Generate dict of locations\n        if (!this.USER_FRIENDLY_LOCATION_DICT) return [];\n        const locations: any = JSON.parse(JSON.stringify(this.USER_FRIENDLY_LOCATION_DICT));\n        /**\n         * [\n         * {\n         *      userValue : 'Bell block',\n         *      value : 'bell_block'\n         * },\n         * \n         * ]\n         */\n        type userFriendlyLocation = {\n            userValue: string,\n            value: string\n        };\n        let res: userFriendlyLocation[] = [];\n        let locationsKeys = Object.keys(locations);\n        locationsKeys.forEach(function (key) {\n            res.push({\n                userValue : locations[key],\n                value : key\n            });\n        });\n\n        res.push({\n            userValue: 'Auckland',\n            value: 'auckland'\n        });\n        return res;\n    };\n\n    // This will not handle two valid locations, should take the first valid location\n    public parseLocation(userInput: string, pricingLevelDict: any, minorLocationDict: any): any {\n        let parsedLocation = '';\n        if (userInput == null) {\n            return {\n                success: false,\n                location: userInput\n            };\n        }\n\n        userInput = userInput.toLowerCase();\n\n        // loop through all the locations\n        Object.keys(pricingLevelDict).forEach(function(locationString){\n            if(userInput.indexOf(locationString) != -1) {\n                parsedLocation = locationString;\n            }\n        });\n        // Already found no need to check minor location\n        Object.keys(minorLocationDict).forEach(function(locationString){\n            if(userInput.indexOf(locationString) != -1) {\n                parsedLocation = locationString;\n            }\n        });\n\n        // check for if includes, then replace item with curr val\n\n        if (parsedLocation === '') {\n            return {\n                success: false,\n                location: ''\n            };\n        } else {\n            return {\n                success: true,\n                location: parsedLocation\n            };\n        }\n    };\n\n    public getUserResultMessage(isSuccess: boolean) {\n        let message = '';\n        if(isSuccess) {\n            message = 'This Quote has been sent to your email';\n        } else {\n            message = 'Please check the form has been completed correctly';\n        }\n        return message;\n    };\n\n    public predictLocation(chars: string, locationsDict: any, userFriendlyLocationDict: any) {\n        let foundLocations: any[] = [];\n        let locationKeys = Object.keys(locationsDict);\n        locationKeys.forEach(function(locationKey) {\n            let res: boolean = locationKey.indexOf(chars) > -1;\n            if (res) {\n                let location = userFriendlyLocationDict[locationKey];\n                foundLocations.push({\n                    userValue : location,\n                    value: locationKey\n                });\n            }\n        });\n\n\n        if(foundLocations.length > 0) {\n            foundLocations = foundLocations.sort();\n            return {\n                success: true,\n                locations: foundLocations\n            };\n        } else {\n            return {\n                success: false,\n                locations: []\n            };\n        }\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BhdGNoLXVwbG9hZC9kaXNwYXRjaC11cGxvYWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { DispatchProvider } from '../dispatch.provider';\n\n@Component({\n    selector: 'app-dispatch-upload-component',\n  templateUrl: './dispatch-upload.component.html',\n  styleUrls: ['./dispatch-upload.component.css']\n})\nexport class DispatchUploadComponent implements OnInit {\n\n    public showError;\n    public showSuccess;\n\n    private dispatchProvider: DispatchProvider;\n    constructor(dispatchProvider: DispatchProvider, private spinner: NgxSpinnerService) {\n        this.dispatchProvider = dispatchProvider;\n    }\n\n    fileChange(event) {\n        const fileList: FileList = event.target.files;\n        if (fileList.length > 0) {\n            const reader = new FileReader();\n            // have to bind, else 'this' will not be passed to the cb\n            reader.onload = this.onLoad.bind(this);\n            reader.readAsText(event.target.files[0]);\n            this.spinner.show();\n        }\n    }\n\n    onLoad(event) {\n        const csvUploadString: string = event.target.result;\n        document.getElementById('fileContent').textContent = csvUploadString;\n        // take text and push into dispatch service\n        this.dispatchProvider.setCsvUploadString(csvUploadString);\n        this.dispatchProvider.setBatchRequest(csvUploadString);\n        this.spinner.hide();\n    }\n\n    upload() {\n        this.spinner.show();\n        this.dispatchProvider.uploadCsvString()\n        .then(() => {\n            this.showError = false;\n            this.showSuccess = true;\n            this.spinner.hide();\n        })\n        .catch(() => {\n            this.showError = true;\n            this.showSuccess = false;\n            this.spinner.hide();\n        });\n\n    }\n\n    ngOnInit() {\n        this.spinner.hide.bind(this);\n        this.showError = false;\n        this.showSuccess = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\n\nimport { DispatchGateway } from './dispatch.gateway';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DispatchUploader {\n\n    public csv: string;\n    public csvB64: string;\n\n    public keysList: Array<string> = [\n    'flags','Memo','Docket','Container','Job Type','Status','Current Details',\n    'Manifest (Current)','Order Ref','Pickup Ref','Delivery Ref','Customer',\n    'Pickup','From','Deliver','To','Vehicle','Shift','Goods','Goods Type','Required Pickup',\n    'PUP TZ','Required Delivery','DEL TZ','Next Milestone','Quantity','Weight',\n    'Cubic','Booked Date','Picked up','Packed / Unpacked','Delivered','Last Change',\n    'Delivered To','H/Plts','Chg','Ovride','Invoice','ICOS Ref','ICOS BRef',\n    'I/E/M', 'Container Type','Container Size','MT/F?','DGs','Vessel',\n    'PAK/UPK','PAK/UPK Area','Shipping Company','Voyage','Container Release',\n    'Container Pin','Container Random','Slot Date','Slot Reference','VBS Empty',\n    'VBS Full','Commodity','Scheduled Priority','Booked By','Measured Weight',\n    'Lifts','Container Doors','Now At','Going To','Required PAK/UPK','PAK/UPK TZ',\n    'Cont. Load Type','Seal Number','Pickup Depot','Current Depot','Delivery Depot',\n    'Next Depot','IsExport','ECERT'\n    ];\n    public requestBatch: Array<Array<string>> = [];\n    public requestUploadStringBatch: Array<string> = [];\n\n    private dg: DispatchGateway;\n\n    constructor(private http: HttpClient, dg: DispatchGateway) {\n        this.dg = dg;\n    }\n\n    setBatchRequest (csv: string): void {\n        this.requestBatch = [];\n        let batchTemp: Array<string> = [];\n        // parse out the len of the keys and split by ,\n        csv = csv.replace(/\\n/g, ',');\n        let csvStringList = csv.split(',');\n        const keyListLen = this.keysList.length;\n        //csvStringList = csvStringList.splice(keyListLen, csvStringList.length - 1);\n\n        let i;\n        let j;\n        const chunk = keyListLen - 1;\n\n\n        this.requestBatch = this.chunks(csvStringList, keyListLen);\n        // for (i = 0, j = csvStringList.length; i < j; i += chunk) {\n        //     batchTemp = csvStringList.slice(i, i + chunk - 1);\n        //     // deep copy into into array\n        //     this.requestBatch.push(Object.assign({}, batchTemp));\n        // }\n        console.log('RequestBatch', this.requestBatch);\n    }\n    chunks (array, size) {\n        const tempArray = [array];\n        const results = [];\n        while (array.length) {\n            results.push(array.splice(0, size));\n        }\n        return results;\n    }\n    setBatchStringBodyRequest (requestBatch: Array<Array<string>>) {\n        requestBatch.forEach((batch) => {\n\n        });\n    }\n    setCsvUploadString (csv: string): void {\n        this.csv = csv;\n        this.csvB64 = this.base64CsvString(csv);\n        console.log('uploader set csv and base64 values', this.csv, this.csvB64);\n    }\n    base64CsvString (csv: string): string {\n        let b64Csv = '';\n        b64Csv = Base64.encode(csv);\n        return b64Csv;\n    }\n    uploadCsvString (): Promise<boolean> {\n        return new Promise((res, rej) => {\n            this.dg.csvBatchUpdateDispatch(this.csvB64)\n            .then(() => {\n                res();\n            })\n            .catch((err) => {\n                rej(err);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DispatchRecord } from 'fr8models';\nimport { HttpHeaders  } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment  } from '../environments/environment';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DispatchGateway {\n\n  private uri = environment.production ? environment.backendUrl + '/dispatch' : 'http://localhost/dispatch';\n  private httpOptions: any;\n  private ls: LoginService;\n\n  constructor(private http: HttpClient, ls: LoginService) {\n      this.ls = ls;\n  }\n\n  public setHeaders(): void {\n      this.httpOptions = {\n          headers: new HttpHeaders({\n              'Content-Type':  'application/json',\n              Authorization: this.ls.getToken()\n          })\n      };\n  }\n\n  public saveDispatch(dispatchRecord: DispatchRecord): Promise<DispatchRecord> {\n      console.log('Saving ', dispatchRecord);\n      return new Promise((res, rej) => {\n          // dummy code return dummy list you dummy\n          res(new  DispatchRecord({}));\n      });\n  }\n  public getRecentRecords(): Promise<Array<DispatchRecord>> {\n      console.log('Getting records...');\n      this.setHeaders();\n      return new Promise((res, rej) => {\n          this.http.get(`${this.uri}`, this.httpOptions)\n          .subscribe(hres => {\n              console.log('Done', hres);\n              const dispatchList: Array<DispatchRecord> = [];\n              (hres as any).forEach((item) => {\n                  dispatchList.push(new DispatchRecord(item));\n              });\n              console.log('Done list jobs', dispatchList);\n              res(dispatchList);\n          });\n      });\n  }\n\n  public getDispatch() {\n    return this.http.get(`${this.uri}`);\n  }\n\n  public editDispatch(id) {\n    return this.http.get(`${this.uri}/edit/${id}`);\n  }\n\n  public updateDispatch(ProductName, ProductDescription, ProductPrice, id) {\n    const obj = {\n      ProductName,\n      ProductDescription,\n      ProductPrice\n    };\n    this .http.post(`${this.uri}/update/${id}`, obj)\n      .subscribe(res => console.log('Update Complete'));\n  }\n  public csvBatchUpdateDispatch(csvDispatchString: string): Promise<boolean> {\n      const request = {\n          data: csvDispatchString\n      };\n      console.log('Saving ', request);\n      return new Promise((res, rej) => {\n          this.http.post(`${this.uri}/import`, request, this.httpOptions)\n          .subscribe(hres => {\n              console.log('Done', hres);\n              res(true);\n          });\n      });\n  }\n\n  public deleteDispatch(id) {\n    return this.http.get(`${this.uri}/delete/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { LoginService } from './login.service';\nimport { DispatchUploader } from './dispatch-uploader.service';\nimport { DispatchService } from './dispatch.service';\nimport { DispatchQuoteService } from './dispatch-quote/dispatch-quote.service';\nimport { QuotePriceLevelService } from './dispatch-quote/quote-price-level.service';\nimport { QuoteConfig } from './dispatch-quote/quote-config.service';\nimport { RatingCardService } from './rating-card.service';\nimport { LocationService } from './location.service';\n\nimport { DispatchRecord, PriceRuleSet, PriceRuleConfig, RatingCard, QuoteInterfaceResponse, Quote } from 'fr8models';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DispatchProvider {\n\n    constructor(private loginService: LoginService, private dispatchUploader: DispatchUploader,\n                private dispatchService: DispatchService, private dispatchQuoteService: DispatchQuoteService,\n                private quoteConfig: QuoteConfig, private ratingCardService: RatingCardService,\n                private locationService: LocationService) { }\n\n    login(username, password): Promise<any>  {\n        return this.loginService.login(username, password);\n    }\n\n    setCsvUploadString(csv) {\n        this.dispatchUploader.setCsvUploadString(csv);\n    }\n\n    setBatchRequest(csv) {\n        this.dispatchUploader.setBatchRequest(csv);\n    }\n\n    uploadCsvString(): Promise<boolean> {\n        return this.dispatchUploader.uploadCsvString();\n    }\n\n    addDispatch(dispatchRecord): Promise<void> {\n        return this.dispatchService.addDispatch(dispatchRecord);\n    }\n\n    listDispatch(): Promise<void> {\n        return this.dispatchService.listDispatch();\n    }\n\n    getLocalDispatch(): Array<DispatchRecord> {\n        return this.dispatchService.getLocalDispatch();\n    }\n\n    // Quote Service\n\n    public initQuoteConfig(): Promise<any> {\n        return this.dispatchQuoteService.initQuoteConfig();\n    }\n\n    public getPriceRuleList(): PriceRuleConfig[] {\n        return this.dispatchQuoteService.getPriceRuleSetList();\n    }\n    public getPriceRuleConfig(id: number): PriceRuleConfig {\n        return this.dispatchQuoteService.getPriceRuleConfigById(id);\n    }\n    public listPriceRules(): Promise<PriceRuleConfig[]> {\n        return this.dispatchQuoteService.listPriceRules();\n    }\n    public savePriceRuleSet(priceRuleSet: PriceRuleConfig): Promise<boolean> {\n        return this.dispatchQuoteService.savePriceRuleSet(priceRuleSet);\n    }\n    public removePriceRuleSet(id: number): Promise<boolean> {\n        return this.dispatchQuoteService.removePriceRuleConfig(id);\n    }\n\n    public getRatingCardQuote(to: string, from: string, weight: number, mass: number): QuoteInterfaceResponse {\n        return this.dispatchQuoteService.getRatingCardQuote(to, from, weight, mass);\n    }\n\n    public getLocations(): Array<any> {\n        return this.dispatchQuoteService.getLocations();\n    }\n\n    public getLocationOptions(): Array<any> {\n        return this.locationService.getLocationOptions();\n    }\n\n    public searchQuotes(id): Promise<any> {\n        return this.dispatchQuoteService.queryQuotesById(id);\n    }\n\n    public listQuotes(): Promise<Array<any>> {\n        return this.dispatchQuoteService.listQuotes();\n    }\n\n    public getQuotes(): Array<Quote> {\n        return this.dispatchQuoteService.getQuotes();\n    }\n\n    public getQuote(id: number): Quote {\n        return this.dispatchQuoteService.getQuote(id);\n    }\n\n    public saveQuote(id: number, quote: Quote, isEdit: boolean): Promise<boolean> {\n        return isEdit ? this.dispatchQuoteService.updateQuote(id, quote) : this.dispatchQuoteService.saveQuote(quote);\n    }\n\n    public listRatingCard(): Promise<any> {\n        return this.ratingCardService.listRatingCard();\n    }\n\n    public getLocationRatesObj(location, ratingCard): any {\n        return this.ratingCardService.getLocationRatesObj(location, ratingCard);\n    }\n\n    public getRatingCards(): RatingCard[] {\n        return this.ratingCardService.getRatingCards();\n    }\n\n    public getRatingCard(id: number): RatingCard {\n        return this.ratingCardService.getRatingCard(id);\n    }\n\n    public getDefaultRatingCard(): RatingCard {\n        return this.ratingCardService.getDefaultRatingCard();\n    }\n\n    public saveRatingCard(companyId: number, ratingCard: RatingCard): Promise<any> {\n        return this.ratingCardService.saveRatingCardWithModel(companyId, ratingCard);\n    }\n\n    public updateRatingCard(ratingCard: RatingCard): Promise<RatingCard[]> {\n        return this.ratingCardService.updateCompanyWithModel(ratingCard);\n    }\n\n    public deleteRatingCard(id: number): Promise<RatingCard[]> {\n        return this.ratingCardService.deleteRatingCard(id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DispatchRecord } from 'fr8models';\nimport { DispatchGateway } from './dispatch.gateway';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DispatchService {\n\n    public dispatchRecords: Array<DispatchRecord>;\n\n    constructor(private http: HttpClient, private dg: DispatchGateway) {\n        dg.getRecentRecords()\n            .then((records) => {\n                this.dispatchRecords = records;\n            });\n    }\n\n    addDispatch(dispatchRecord: DispatchRecord): Promise<void> {\n        return this.saveDispatch(dispatchRecord)\n            .then((record) => {\n                this.dispatchRecords.push(dispatchRecord);\n                console.log(this.dispatchRecords);\n            }).catch((e) => {\n                console.error('Could not add dispatch record', dispatchRecord, e);\n            });\n    }\n\n    saveDispatch(dispatchRecord: DispatchRecord): Promise<DispatchRecord> {\n        return this.dg.saveDispatch(dispatchRecord);\n    }\n\n    getDispatch(): DispatchRecord { // Promise {DispatchRecord}\n        return new DispatchRecord({});\n    }\n    getLocalDispatch(): Array<DispatchRecord> {\n        return this.dispatchRecords;\n    }\n\n    listDispatch(): Promise<void> {\n        return this.dg.getRecentRecords()\n            .then((records) => {\n                this.dispatchRecords = records;\n            });\n    }\n\n    updateDispatch(ProductName, ProductDescription, ProductPrice, id) { // Promise {DispatchRecord}\n\n    }\n\n    deleteDispatch(id): number { // Promise {number}\n        return 1; // return dispatch id\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { QuoteConfig } from './dispatch-quote/quote-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n    public locations: any[];\n    public qc: QuoteConfig;\n\n    constructor(private http: HttpClient) {\n        this.qc = new QuoteConfig();\n        this.qc.init();\n    }\n\n    addLocation(location: any) { }\n\n    saveLocation(location: any): Promise<any> {\n        return Promise.resolve();\n    }\n\n    getLocationOptions(): any {\n        return this.locations ? this.locations : this.qc.locationOptions;\n    }\n\n    listLocation(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    updateLocation(id) {\n\n    }\n\n    deleteLocation(id): number {\n        return 1;\n    }\n\n}\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { finalize, tap } from 'rxjs/operators';\n\nimport { environment  } from '../environments/environment';\n\nimport { StorageService } from './storage.service';\nimport { LoginResponse } from 'fr8models';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    private uri = environment.backendUrl + '/auth/login';\n    isLoggedIn = false;\n    userInfo: LoginResponse = new LoginResponse();\n    token = '';\n    public permissions = {};\n\n    @Output() changed: EventEmitter<boolean> = new EventEmitter();\n    @Output() changedObj: EventEmitter<any> = new EventEmitter();\n\n    constructor(private http: HttpClient, private router: Router, private storage: StorageService) { }\n\n    getToken(): string {\n        this.token = this.storage.getItem(this.storage.KEY.LOGIN_TOKEN) ? this.storage.getItem(this.storage.KEY.LOGIN_TOKEN) : this.token;\n        return this.token;\n    }\n    getUserInfo(): LoginResponse {\n        this.userInfo = this.storage.getItem(this.storage.KEY.USER_INFO) ? JSON.parse(this.storage.getItem(this.storage.KEY.USER_INFO))\n            : this.userInfo;\n        return this.userInfo;\n    }\n    getUserCompanyId(): number {\n        const userInfo = this.getUserInfo();\n        const id = userInfo && userInfo.company.id ? userInfo.company.id : null;\n        console.log('user company id', id);\n        return id;\n    }\n    getPermissions(): any {\n         this.permissions = {\n            login: true,\n            dispatch: false,\n            quote: true,\n            user: false,\n            company: false,\n            uploadDispatch: false,\n            ratingCard: false,\n            priceRule: false\n        };\n        // TODO: Integrate with the real permissions later\n        if (this.isParentCompanyUser()) {\n            this.permissions = {\n                login: true,\n                dispatch: true,\n                quote: true,\n                user: true,\n                company: true,\n                uploadDispatch: true,\n                ratingCard: true,\n                priceRule: true\n            };\n        }\n\n        return this.permissions;\n    }\n    isParentCompanyUser(): boolean {\n        const userInfo = this.getUserInfo();\n        const isParentUser = userInfo && userInfo.company ? !userInfo.company.parentId : false;\n        console.log('isParentCompanyUser', isParentUser);\n        return isParentUser;\n    }\n    initToken(): boolean {\n        this.token = this.storage.getItem(this.storage.KEY.LOGIN_TOKEN) ? this.storage.getItem(this.storage.KEY.LOGIN_TOKEN) : '';\n        return this.token.length > 0;\n    }\n\n    login(username, password): Promise<any>  { // Login Promise not sure of the type\n        console.log(username, password);\n        const obj = {\n            username,\n            password\n        };\n        console.log(this.uri, environment);\n        return new Promise((res, rej) => {\n            return this.http.post(this.uri, obj)\n            .subscribe(\n                data => {\n                    console.log('data', data);\n                    this.userInfo = data as LoginResponse;\n\n                    this.token = (data as any).token;\n                    this.isLoggedIn = true;\n                    this.changed.emit(this.isLoggedIn);\n                    this.changedObj.emit(this.userInfo);\n                    res();\n\n                    this.storage.setItem(this.storage.KEY.LOGIN_TOKEN, this.token);\n                    this.storage.setItem(this.storage.KEY.USER_INFO, JSON.stringify(this.userInfo));\n\n                    this.router.navigate(['dispatch/quote']);\n                },\n                error => {\n                    // Still allow move to next screen until api\n                    console.error('error', error);\n                    this.isLoggedIn = false;\n                    this.changed.emit(this.isLoggedIn);\n                    rej(error);\n                }\n            );\n        });\n    }\n\n    logout(): void {\n        this.isLoggedIn = false;\n        this.changed.emit(this.isLoggedIn);\n        this.router.navigate(['login']);\n        this.storage.setItem(this.storage.KEY.LOGIN_TOKEN, '');\n        this.storage.setItem(this.storage.KEY.USER_INFO, '');\n        this.userInfo = new LoginResponse();\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DispatchProvider } from '../dispatch.provider';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    angForm: FormGroup;\n    showError: boolean;\n    constructor(private fb: FormBuilder, private dp: DispatchProvider,\n                private spinner: NgxSpinnerService) {\n                    this.createForm();\n                }\n\n                createForm() {\n                    this.angForm = this.fb.group({\n                        username: ['', Validators.required ],\n                        password: ['', Validators.required ]\n                    });\n                }\n\n                login(username, password) {\n                    this.spinner.show();\n                    this.dp.login(username, password)\n                    .then(\n                        () => {\n                        this.spinner.hide();\n                        this.showError = false;\n                    }, (err) => {\n                        this.spinner.hide();\n                        this.showError = true;\n                    }).catch(() => {\n                        this.spinner.hide();\n                        this.showError = true;\n                    });\n                }\n\n                ngOnInit() {\n                    this.spinner.hide.bind(this);\n                    this.showError = false;\n                }\n\n}\n","import {\n  animate,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\n\n@Component({\n  selector: 'notyf-toast-component',\n  styles: [],\n  template: `\n    <div class=\"notyf__toast notyf__toast--success notyf__toast\">\n      <div class=\"notyf__wrapper\">\n        <div class=\"notyf__icon\">\n          <i [hidden]=\"!isSuccess\" class=\"notyf__icon--success\" style=\"color: rgb(61, 199, 99);\"></i>\n          <i [hidden]=\"isSuccess\" class=\"notyf__icon--error\" style=\"color: #cc0000;\"></i>\n        </div>\n        <div class=\"notyf__message\">{{ title }} {{ message }}</div>\n      </div>\n      <div [hidden]=\"!isSuccess\" class=\"notyf__ripple\" style=\"background-color: rgb(61, 199, 99);\"></div>\n      <div [hidden]=\"isSuccess\" class=\"notyf__ripple\" style=\"background-color: #cc0000;\"></div>\n    </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({ opacity: 0 })),\n      transition(\n        'inactive => active',\n        animate(\n          '300ms ease-out',\n          keyframes([\n            style({\n              opacity: 0,\n              bottom: '-15px',\n              'max-height': 0,\n              'max-width': 0,\n              'margin-top': 0,\n            }),\n            style({\n              opacity: 0.8,\n              bottom: '-3px',\n            }),\n            style({\n              opacity: 1,\n              bottom: '0',\n              'max-height': '200px',\n              'margin-top': '12px',\n              'max-width': '400px',\n            }),\n          ]),\n        ),\n      ),\n      state(\n        'active',\n        style({\n          bottom: '0',\n          'max-height': '200px',\n          'margin-top': '12px',\n          'max-width': '400px',\n        }),\n      ),\n      transition(\n        'active => removed',\n        animate(\n          '300ms ease-out',\n          keyframes([\n            style({\n              opacity: 1,\n              transform: 'translateY(0)'\n            }),\n            style({\n              opacity: 0,\n              transform: 'translateY(25%)'\n            }),\n          ]),\n        ),\n      ),\n    ]),\n  ],\n})\nexport class NotyfToastFail extends Toast {\n    // constructor is only necessary when not using AoT\n    public isSuccess = false;\n    constructor( protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n        super(toastrService, toastPackage);\n    }\n}\n","import {\n  animate,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\n\n@Component({\n  selector: 'notyf-toast-component',\n  styles: [],\n  template: `\n    <div class=\"notyf__toast notyf__toast--success notyf__toast\">\n      <div class=\"notyf__wrapper\">\n        <div class=\"notyf__icon\">\n          <i [hidden]=\"!isSuccess\" class=\"notyf__icon--success\" style=\"color: rgb(61, 199, 99);\"></i>\n          <i [hidden]=\"isSuccess\" class=\"notyf__icon--error\" style=\"color: #cc0000;\"></i>\n        </div>\n        <div class=\"notyf__message\">{{ title }} {{ message }}</div>\n      </div>\n      <div [hidden]=\"!isSuccess\" class=\"notyf__ripple\" style=\"background-color: rgb(61, 199, 99);\"></div>\n      <div [hidden]=\"isSuccess\" class=\"notyf__ripple\" style=\"background-color: #cc0000;\"></div>\n    </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({ opacity: 0 })),\n      transition(\n        'inactive => active',\n        animate(\n          '300ms ease-out',\n          keyframes([\n            style({\n              opacity: 0,\n              bottom: '-15px',\n              'max-height': 0,\n              'max-width': 0,\n              'margin-top': 0,\n            }),\n            style({\n              opacity: 0.8,\n              bottom: '-3px',\n            }),\n            style({\n              opacity: 1,\n              bottom: '0',\n              'max-height': '200px',\n              'margin-top': '12px',\n              'max-width': '400px',\n            }),\n          ]),\n        ),\n      ),\n      state(\n        'active',\n        style({\n          bottom: '0',\n          'max-height': '200px',\n          'margin-top': '12px',\n          'max-width': '400px',\n        }),\n      ),\n      transition(\n        'active => removed',\n        animate(\n          '300ms ease-out',\n          keyframes([\n            style({\n              opacity: 1,\n              transform: 'translateY(0)'\n            }),\n            style({\n              opacity: 0,\n              transform: 'translateY(25%)'\n            }),\n          ]),\n        ),\n      ),\n    ]),\n  ],\n})\nexport class NotyfToastSuccess extends Toast {\n    // constructor is only necessary when not using AoT\n    public isSuccess = true;\n    constructor( protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n        super(toastrService, toastPackage);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaWNlLXJ1bGUtYWRkL21hbmFnZS1wcmljZS1ydWxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { DispatchProvider } from '../dispatch.provider';\nimport { AuthProvider } from '../auth.provider';\nimport { LoginService } from '../login.service';\nimport { ComponentHelper } from '../component-helper';\nimport { PriceRuleSet, PriceRule, PriceRuleConfig, PriceRuleLocationConditional, Company } from 'fr8models';\n\nimport { NotyfToastSuccess } from '../notify-success-toastr';\nimport { NotyfToastFail } from '../notify-fail-toastr';\n\nimport * as _ from 'lodash';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-manage-price-rule',\n    templateUrl: './manage-price-rule.component.html',\n    styleUrls: ['./manage-price-rule.component.css']\n})\nexport class ManagePriceRuleComponent implements OnInit {\n\n    public companies: Company[];\n    public companyOptions: any[];\n    public selectedCompanyIndex: number;\n    public dbId: number;\n    public isEdit = false;\n    public config;\n    public currentConditionalsIdx = 0;\n\n    public currentCompany: Company;\n\n    public priceRuleOptions: any[];\n    public locations: any[];\n\n    public PRICE_RULE_TYPE = PriceRule.TYPE;\n\n    constructor(private fb: FormBuilder, private router: Router, private dp: DispatchProvider,\n                private toastr: ToastrService, private ap: AuthProvider, private ls: LoginService) {\n        const userInfo = this.ls.getUserInfo();\n\n        this.isEdit = ComponentHelper.isEditView(router);\n        this.dbId = ComponentHelper.getId(this.isEdit, router);\n\n        const priceRuleSet = new PriceRuleSet([]);\n        const priceRuleLocationConditionals: PriceRuleLocationConditional[] = [];\n\n        this.config = this.dbId ? this.dp.getPriceRuleConfig(this.dbId) :\n            new PriceRuleConfig(\n                undefined,\n                userInfo.company.companyName,\n                userInfo.company.id,\n                priceRuleSet,\n                priceRuleLocationConditionals\n            );\n\n        this.refresh(this.config, this.isEdit);\n\n        // Seems that when converting options to template variables its NOT able to\n        // bind to the model at the init stage\n        this.config = this.convertConfigToComponentOptions(this.config);\n        // Then converting it back to the objects orginal state it is ABLE to\n        // bind to the model\n        this.config = this.convertConfigToModel(this.config);\n\n        if (this.config.priceRuleLocationConditionals.length > 0) {\n            this.currentConditionalsIdx = 0;\n        }\n    }\n\n    async refresh(entity, isEdit) {\n        this.priceRuleOptions = [];\n        _.forEach(PriceRule.TYPE, (val, key) => {\n            this.priceRuleOptions.push({\n                label: key.replace(/_/g, ' ').toLowerCase().replace('mass', 'volume'),\n                value: val\n            });\n        });\n\n        await this.ap.listCompanies();\n        this.companies = await this.ap.getCompanies();\n\n        if (entity && isEdit) {\n            // Couldn't fig out how to set angular form item on init\n            // so loading only one company if edit view\n            this.companyOptions = this.companies\n                .filter((company) => {\n                    return company.id === entity.companyId;\n                }).map((company) => {\n                    return  {\n                        label: company.companyName,\n                        value: company\n                    };\n                });\n        } else {\n            this.companyOptions = this.companies.map((company) => {\n                const option = {\n                    label: company.companyName,\n                    value: company.id\n                };\n                return option;\n            });\n        }\n\n        this.locations = this.dp.getLocationOptions();\n\n        this.currentCompany = entity.companyId;\n    }\n\n    ngOnInit() {\n        console.log(this.config);\n    }\n\n    createPriceRule(step?) {\n        const pType = '';\n        step = step ? step : 1;\n        return new PriceRule(step, pType);\n    }\n\n    onRuleTypeSelectionChange(value) {\n        console.log('Rule Type Selected', value);\n        if (value === PriceRule.TYPE.GET_GREATER_NEXT) {\n            if (this.currentConditionalsIdx || this.currentConditionalsIdx === 0 && this.config.priceRuleLocationConditionals.length > 0) {\n                this.config.priceRuleLocationConditionals[this.currentConditionalsIdx].priceRuleSet.priceRules =\n                    this.config.priceRuleLocationConditionals[this.currentConditionalsIdx].priceRuleSet.priceRules.map((rule) => {\n                        if (rule.type === PriceRule.TYPE.GET_GREATER_NEXT) {\n                            rule.stepNo = -1;\n                        }\n                        return rule;\n                    }).sort((a, b) => {\n                        return a.stepNo - b.stepNo;\n                    });\n            } else {\n                this.config.priceRuleSet.priceRules = this.config.priceRuleSet.priceRules.map((rule) => {\n                    if (rule.type === PriceRule.TYPE.GET_GREATER_NEXT) {\n                        rule.stepNo = -1;\n                    }\n                    return rule;\n                }).sort((a, b) => {\n                    return a.stepNo - b.stepNo;\n                });\n            }\n        }\n    }\n\n    addRule(currentConditionalsIdx) {\n        if (currentConditionalsIdx || currentConditionalsIdx === 0) {\n            const stepNo = this.config.priceRuleLocationConditionals[currentConditionalsIdx].priceRuleSet.priceRules.length + 1;\n            const  priceRule = this.createPriceRule(stepNo);\n            this.config.priceRuleLocationConditionals[currentConditionalsIdx].priceRuleSet.priceRules.push(priceRule);\n        } else {\n            const stepNo = this.config.priceRuleSet.priceRules.length + 1;\n            const priceRule = this.createPriceRule(stepNo);\n            this.config.priceRuleSet.priceRules.push(priceRule);\n        }\n    }\n\n    removeRule(rule, currentConditionalsIdx) {\n        console.log('remove rule', rule, this.currentConditionalsIdx);\n        if (this.currentConditionalsIdx || this.currentConditionalsIdx === 0 && this.config.priceRuleLocationConditionals.length > 0) {\n            this.config.priceRuleLocationConditionals[this.currentConditionalsIdx].priceRuleSet.priceRules =\n                this.config.priceRuleLocationConditionals[this.currentConditionalsIdx].priceRuleSet.priceRules.filter((item) => {\n                return item !== rule;\n            });\n        } else {\n            this.config.priceRuleSet.priceRules = this.config.priceRuleSet.priceRules.filter((item) => {\n                return item !== rule;\n            });\n        }\n    }\n\n    // Location Conditionals\n    addLocationConditional() {\n        const conditional = this.createLocationConditional();\n        this.config.priceRuleLocationConditionals.push(conditional);\n    }\n\n    removeLocationConditionalByIdx(idx) {\n        let i = 0;\n        this.config.priceRuleLocationConditionals = this.config.priceRuleLocationConditionals.filter((item) => {\n            const isItem = i === idx; i++;\n            return !isItem;\n        });\n        this.currentConditionalsIdx = 0;\n    }\n\n    removeLocationConditional(conditional) {\n        this.config.priceRuleLocationConditionals = this.config.priceRuleLocationConditionals.filter((item) => {\n            return item !== conditional;\n        });\n    }\n\n    getCurrentLocationConditional(): PriceRuleLocationConditional {\n        return this.config.priceRuleLocationConditionals[this.currentConditionalsIdx];\n    }\n\n    createLocationConditional(name?: string) {\n        const priceRuleSet = new PriceRuleSet([]);\n        const conditional: PriceRuleLocationConditional\n            = new PriceRuleLocationConditional([], priceRuleSet, 'uuid',\n                name != null ? name : 'Filter');\n        return conditional;\n    }\n\n    setDefaultLocationConditional() {\n        const conditional: PriceRuleLocationConditional = this.createLocationConditional();\n        this.config.priceRuleLocationConditionals.push(conditional);\n    }\n\n    setCurrentLocationConditional(conditional) {\n        this.config.priceRuleLocationConditionals[this.currentConditionalsIdx] = conditional;\n    }\n\n    setCurrentLocationConditionalIdx(idx){\n        this.currentConditionalsIdx = parseInt(idx);\n    }\n\n    toggleLocation(loc) {\n        console.log('Toggling', loc);\n        // Remove;\n        if (this.config.priceRuleLocationConditionals.length < 1) {\n            console.log('No conditionals found, adding conditional');\n            this.setDefaultLocationConditional();\n        }\n\n        const conditional: PriceRuleLocationConditional = this.getCurrentLocationConditional();\n        const initLen = conditional.locationList.length;\n        conditional.locationList = conditional.locationList.filter((item) => {\n            return item.toLowerCase() !== loc.value;\n        });\n\n        // Add\n        if (initLen === conditional.locationList.length && !this.isLocationAlreadySelectedByOtherConditional(loc)) {\n            loc.isSelected = true;\n            conditional.locationList.push(loc.value.toLowerCase());\n        } else {\n            loc.isSelected = false;\n        }\n\n        this.setCurrentLocationConditional(conditional);\n        console.log('Toggling location', this.currentConditionalsIdx, this.config.priceRuleLocationConditionals);\n    }\n\n    isLocationSelected(loc) {\n        const conditional = this.getCurrentLocationConditional();\n        return conditional.locationList.filter((l) => {\n            return l.toLowerCase() === loc.value;\n        }).length > 0;\n    }\n    isLocationAlreadySelectedByOtherConditional(loc) {\n        const conditionals = this.config.priceRuleLocationConditionals;\n        const selectedLocations = [];\n        let isAlreadySelected = false;\n\n        let idx = 0;\n        conditionals.forEach((cItem) => {\n            cItem.locationList.forEach((lItem) => {\n                if (lItem.toLowerCase() === loc.value && idx !== this.currentConditionalsIdx) {\n                    isAlreadySelected = true;\n                }\n            });\n            idx++;\n        });\n\n        return isAlreadySelected;\n    }\n\n    savePriceRuleConfig() {\n        this.config.companyId = this.currentCompany;\n        this.dp.savePriceRuleSet(this.config).then((res) => {\n            this.onSave(res, 'Saved Quote Price Rule Config',\n                'Failed to Save Quote Price Rule Config ', ['price-rule']);\n        }).catch((err) => {\n            console.log(err);\n        });\n        console.log('saving config', this.config);\n    }\n\n    onSave(res: any, successMessage: string, failMessage: string, redirUri?: string[]) {\n        console.log('onSaveObj', res);\n\n        successMessage = successMessage ? successMessage : 'Saved Quote Price Rule Config';\n        failMessage = failMessage ? failMessage : 'Failed to Save Quote Price Rule Config';\n\n        const opt = JSON.parse(JSON.stringify(this.toastr.toastrConfig));\n        opt.positionClass = 'toast-bottom-right';\n        opt.toastClass = 'notyf confirm';\n        if (res) {\n            opt.toastComponent = NotyfToastSuccess;\n            this.toastr.success(successMessage, '', opt);\n            if (redirUri) {\n                this.router.navigate(redirUri);\n            }\n        } else {\n            opt.toastComponent = NotyfToastFail;\n            this.toastr.error(failMessage, '', opt);\n        }\n    }\n\n    // Helper Func\n\n    convertRuleTypeToComponentOptions(rule) {\n        const res = this.priceRuleOptions.filter((ruleOption) => {\n            return ruleOption.value.toLowerCase() === rule.type.toLowerCase();\n        });\n\n        return res && res.length > 0 ? res[0] : null;\n    }\n\n    convertRuleTypeComponentOptionsToModel(rule) {\n        return rule && rule.type ? rule.type.value : undefined;\n    }\n\n    convertConfigToComponentOptions(config: PriceRuleConfig) {\n        config.priceRuleLocationConditionals = config.priceRuleLocationConditionals.map((conditional) => {\n            conditional.priceRuleSet.priceRules = conditional.priceRuleSet.priceRules.map((rule) => {\n                rule.type = this.convertRuleTypeToComponentOptions(rule);\n                return rule;\n            });\n            return conditional;\n        });\n\n        return config;\n    }\n\n    convertConfigToModel(config: PriceRuleConfig) {\n        config.priceRuleLocationConditionals = config.priceRuleLocationConditionals.map((conditional) => {\n            conditional.priceRuleSet.priceRules = conditional.priceRuleSet.priceRules.map((rule) => {\n                rule.type = this.convertRuleTypeComponentOptionsToModel(rule);\n                return rule;\n            });\n            return conditional;\n        });\n\n        return config;\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ByaWNlLXJ1bGUtbGlzdC9wcmljZS1ydWxlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PriceRule, PriceRuleConfig, PriceRuleSet } from 'fr8models';\n\nimport * as _ from 'lodash';\n\nimport { DispatchProvider } from '../dispatch.provider';\n\n@Component({\n    selector: 'app-price-rule-list',\n    templateUrl: './price-rule-list.component.html',\n    styleUrls: ['./price-rule-list.component.css']\n})\nexport class PriceRuleListComponent implements OnInit {\n\n    public priceRuleConfigs: PriceRuleConfig[];\n    public selectedPriceRuleConfigs: PriceRuleConfig[];\n    constructor(public dp: DispatchProvider) { }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.priceRuleConfigs = [];\n        this.selectedPriceRuleConfigs = [];\n        this.dp.listPriceRules()\n            .then(() => {\n                const data = this.dp.getPriceRuleList();\n                console.log('Got price rule config list', data);\n                this.priceRuleConfigs = data;\n            }).catch((err) => {\n                console.error(err);\n            });\n    }\n\n    rowSelected(priceRuleSet: PriceRuleConfig) {\n        if (!_.includes(this.selectedPriceRuleConfigs, priceRuleSet)) {\n            this.selectedPriceRuleConfigs.push(priceRuleSet);\n        } else {\n            this.selectedPriceRuleConfigs = this.selectedPriceRuleConfigs.filter((compare: PriceRuleConfig) => {\n                return compare !== priceRuleSet;\n            });\n        }\n    }\n\n    isRowSelected(priceRuleSet: PriceRuleConfig) {\n        return _.includes(this.selectedPriceRuleConfigs, priceRuleSet);\n    }\n\n    deleteEntity(priceRuleSet: PriceRuleConfig) {\n        this.dp.removePriceRuleSet(priceRuleSet.id)\n            .then(() => this.dp.getPriceRuleList())\n            .then((configs) => {\n                this.priceRuleConfigs = configs;\n            });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtYWRkL3Byb2R1Y3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css']\n})\nexport class ProductAddComponent implements OnInit {\n\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      ProductName: ['', Validators.required ],\n      ProductDescription: ['', Validators.required ],\n      ProductPrice: ['', Validators.required ]\n    });\n  }\n\n  addProduct(ProductName, ProductDescription, ProductPrice) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit {\n\n  angForm: FormGroup;\n  product: any = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private fb: FormBuilder) {\n      this.createForm();\n }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      ProductName: ['', Validators.required ],\n      ProductDescription: ['', Validators.required ],\n      ProductPrice: ['', Validators.required ]\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n     //   this.ps.editProduct(params.id).subscribe(res => {\n     //     this.product = res;\n     // });\n    });\n  }\n\n  updateProduct(ProductName, ProductDescription, ProductPrice, id) {\n    this.route.params.subscribe(params => {\n      // this.ps.updateProduct(ProductName, ProductDescription, ProductPrice, params.id);\n      // this.router.navigate(['products']);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Company, RatingCard } from 'fr8models';\nimport { ComponentHelper } from '../component-helper';\n\nimport { AuthProvider } from '../auth.provider';\nimport { DispatchProvider } from '../dispatch.provider';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { NotyfToastSuccess } from '../notify-success-toastr';\nimport { NotyfToastFail } from '../notify-fail-toastr';\n\n@Component({\n    selector: 'app-rating-card-add',\n    templateUrl: './rating-card-add.component.html',\n    styleUrls: ['./rating-card-add.component.css']\n})\nexport class RatingCardAddComponent implements OnInit {\n\n    public companyOptions: any[];\n    public locations: any[];\n\n    // Local template var\n    public selectedLocation = '';\n    public selectedLocationRates = {\n        majorPriceLevels: [],\n        minorPriceLevels: [],\n        maxRates: []\n    };\n    public majorPriceLevels: any[];\n    public minorPriceLevels: any[];\n    public maxRates: any[];\n    // Local template var\n\n    public dbId: number;\n    public isEdit = false;\n    public ratingCard;\n\n    public angForm: FormGroup;\n\n    constructor(private fb: FormBuilder, private router: Router,\n                private dp: DispatchProvider, private toastr: ToastrService,\n                private ap: AuthProvider) {\n        this.isEdit = ComponentHelper.isEditView(router);\n        this.dbId = ComponentHelper.getId(this.isEdit, router);\n        this.ratingCard = this.dbId ? this.dp.getRatingCard(this.dbId) : this.dp.getDefaultRatingCard();\n\n        console.log('Rating Card', this.ratingCard);\n\n        this.createForm(this.ratingCard);\n\n        this.refresh();\n    }\n\n    async refresh() {\n        await this.ap.listCompanies();\n        this.companyOptions = this.ap.getCompanyOptions();\n        this.locations = this.dp.getLocationOptions();\n        this.selectedLocation = '';\n        this.selectedLocationRates = {\n            majorPriceLevels: [],\n            minorPriceLevels: [],\n            maxRates: []\n        };\n\n        console.log('Loaded Locations', this.locations);\n    }\n\n    createForm(entity) {\n        this.angForm = this.fb.group({\n            CompanyOption: [entity.companyName, Validators.required],\n        });\n    }\n\n    async update() {\n        console.log('Edit:', this.ratingCard);\n\n        const updateUserPromise = this.dp.updateRatingCard(this.ratingCard).then((res) => {\n            this.onSave(res, 'Updated RatingCard ' + this.ratingCard,\n                'Failed to Update RatingCard ' + this.ratingCard, ['rating-card']);\n        }).catch((err) => {\n            this.onSave(null, 'Updated RatingCard ' + this.ratingCard,\n                'Failed to Update RatingCard ' + this.ratingCard, ['rating-card']);\n            console.log(err);\n        });\n    }\n\n    save(companyIdx) {\n        // public majorLocations?: MajorLocationSet,\n        // public minorLocations?: MinorLocationSet,\n        // public pricingRateLevelList?: Array<PricingRateLevelPair>,\n        // public cardData?: CardData){ }\n        const companyId = this.companyOptions[companyIdx].value;\n        console.log('Saving card for:', companyId, this.ratingCard);\n        this.dp.saveRatingCard(\n            companyId,\n            this.ratingCard\n        ).then((res) => {\n            this.onSave(res, 'Saved RatingCard',\n                'Failed to Save RatingCard ', ['rating-card']);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    onSave(res: any, successMessage: string, failMessage: string, redirUri?: string[]) {\n        console.log('onSaveObj', res);\n\n        successMessage = successMessage ? successMessage : 'Saved RatingCard';\n        failMessage = failMessage ? failMessage : 'Failed to Save RatingCard';\n\n        const opt = JSON.parse(JSON.stringify(this.toastr.toastrConfig));\n        opt.positionClass = 'toast-bottom-right';\n        opt.toastClass = 'notyf confirm';\n        if (res) {\n            opt.toastComponent = NotyfToastSuccess;\n            this.toastr.success(successMessage, '', opt);\n            if (redirUri) {\n                this.router.navigate(redirUri);\n            }\n        } else {\n            opt.toastComponent = NotyfToastFail;\n            this.toastr.error(failMessage, '', opt);\n        }\n    }\n\n    selectLocation(location) {\n        this.locations.forEach((location) => {\n            location.isSelected = false;\n        });\n\n        location.isSelected = location.isSelected ? false : true;\n        this.selectedLocation = location;\n        this.getLocationRatesObj(location);\n    }\n\n    getLocationRatesObj(location) {\n        this.selectedLocationRates = this.dp.getLocationRatesObj(location.value, this.ratingCard);\n        this.majorPriceLevels = this.selectedLocationRates.majorPriceLevels;\n        this.minorPriceLevels = this.selectedLocationRates.minorPriceLevels;\n        this.maxRates = this.selectedLocationRates.maxRates;\n        console.log(this.selectedLocationRates);\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhdGluZy1jYXJkLWFkZC9yYXRpbmctY2FyZC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhdGluZy1jYXJkLWdldC9yYXRpbmctY2FyZC1nZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { RatingCard } from 'fr8models';\nimport { DispatchProvider } from '../dispatch.provider';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-rating-card-get',\n  templateUrl: './rating-card-get.component.html',\n  styleUrls: ['./rating-card-get.component.css']\n})\nexport class RatingCardListComponent implements OnInit {\n    private ratingCards: RatingCard[];\n    private selectedEntities: RatingCard[];\n    constructor(private dispatchProvider: DispatchProvider) { }\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.ratingCards = [];\n        this.selectedEntities = [];\n        this.dispatchProvider.listRatingCard()\n            .then(() => this.dispatchProvider.getRatingCards())\n            .then((ratingCards) => {\n                this.ratingCards = ratingCards;\n            });\n    }\n\n    rowSelected(company: RatingCard) {\n        if (!_.includes(this.selectedEntities, company)) {\n            this.selectedEntities.push(company);\n        } else {\n            this.selectedEntities = this.selectedEntities.filter((compare: RatingCard) => {\n                return compare !== RatingCard;\n            });\n        }\n    }\n\n    isRowSelected(selected: RatingCard) {\n        return _.includes(this.selectedEntities, selected);\n    }\n\n    deleteEntity(ratingCard: RatingCard) {\n        const id = ratingCard.cardData ? ratingCard.cardData.id : null;\n        this.dispatchProvider.deleteRatingCard(id)\n            .then(() => this.dispatchProvider.listRatingCard())\n            .then(() => this.dispatchProvider.getRatingCards())\n            .then((ratingCards) => {\n                this.ratingCards = ratingCards;\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { RatingCard } from 'fr8models';\nimport { DispatchQuoteGateway } from './dispatch-quote.gateway';\nimport { LoginService } from './login.service';\nimport { AuthService } from './auth.service';\nimport { QuoteConfig } from './dispatch-quote/quote-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RatingCardService {\n\n    public myRatingCard: RatingCard;\n    public ratingCards: RatingCard[];\n\n    constructor(private dqg: DispatchQuoteGateway, private ls: LoginService, private as: AuthService, private qc: QuoteConfig) { }\n\n    addRatingCard(): Promise<any> {\n        return Promise.resolve();\n    }\n\n    // Gateway func\n    // RatingCard\n    async listRatingCard(): Promise<any> {\n        const res = new Promise((res, rej) => {\n            this.as.listCompanies()\n                .then(() => this.dqg.getRatingAllCard())\n                .then((ratingCards) => {\n                    // Default Rating Card if ratingCards are not defined\n                    ratingCards = ratingCards ? ratingCards : [this.qc.getRatingCard()];\n                    this.ratingCards = this.extendRaingCardList(ratingCards);\n                    this.myRatingCard = this.findMyRatingCard(this.ratingCards);\n                    res();\n                });\n        });\n        return res;\n    }\n\n    getMyRatingCard(): RatingCard {\n        return this.myRatingCard ? this.myRatingCard : this.findMyRatingCard(this.ratingCards);\n    }\n\n    findMyRatingCard(list): RatingCard {\n        const companyId = this.ls.getUserCompanyId();\n        const myRatingCard: RatingCard[] = list.filter((ratingCard) => {\n            console.log(ratingCard.cardData, companyId);\n            return ratingCard.cardData.companyId === companyId;\n        });\n        return myRatingCard && myRatingCard.length ? myRatingCard[0] : null;\n    }\n\n    getDefaultRatingCard(): RatingCard {\n        return this.qc.getRatingCard();\n    }\n\n    getRatingCards(): RatingCard[] {\n        return this.ratingCards;\n    }\n\n    getRatingCard(id: number): RatingCard {\n        let card;\n        this.ratingCards.forEach(\n            (ratingCard) => {\n                if (ratingCard.cardData && ratingCard.cardData.id === id) {\n                    card = ratingCard;\n                }\n            }\n        );\n        return card;\n    }\n\n    getLocationRatesObj(location, ratingCard): any {\n        const majorPriceLevels = ratingCard.majorLocations[location];\n        const zone = this.qc.getZone(location);\n        const minorPriceLevels = ratingCard.minorLocations[zone];\n        let maxRates = ratingCard.pricingRateLevelList[location];\n        if (!maxRates) {\n            maxRates = ratingCard.pricingRateLevelList[zone];\n        }\n        return {\n            majorPriceLevels,\n            minorPriceLevels,\n            maxRates\n        };\n    }\n\n    async saveRatingCardWithModel(companyId: number, ratingCard: RatingCard): Promise<any> {\n        return this.dqg.saveRatingCard(companyId, ratingCard);\n    }\n\n    updateCompanyWithModel(ratingCard: RatingCard): Promise<any> {\n        const id = ratingCard.cardData.id;\n        return this.dqg.updateRatingCard(id, ratingCard);\n    }\n\n    deleteRatingCard(id): Promise<any> {\n        return this.dqg.deleteRatingCard(id)\n        .then(() => {\n            this.ratingCards = this.ratingCards.filter((ratingCard) => {\n                return ratingCard.id !== id;\n            });\n        });\n    }\n\n    // Helper\n    extendRaingCardList(ratingCardList: RatingCard[]): RatingCard[] {\n        return ratingCardList.map((ratingCard: RatingCard) => {\n            (ratingCard.cardData as any) = ratingCard.cardData ? ratingCard.cardData : {\n               companyName: 'default'\n            };\n            if (ratingCard.cardData.companyId) {\n                const company  = this.as.getCompany(ratingCard.cardData.companyId);\n                const companyName = company ? company.companyName : 'Default Company';\n                (ratingCard as any).companyName = companyName;\n            }\n            return ratingCard;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n    public KEY: any = {\n        LOGIN_TOKEN: 'fr8cortoken',\n        USER_INFO: 'fr8userinfo'\n    };\n\n    constructor() { }\n\n    public getItem(k): any {\n        return localStorage.getItem(k);\n    }\n    public setItem(k, v): any {\n        return localStorage.setItem(k, v);\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItYWRkL3VzZXItYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthProvider } from '../auth.provider';\nimport { Company, User } from 'fr8models';\nimport { ComponentHelper } from '../component-helper';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { NotyfToastSuccess } from '../notify-success-toastr';\nimport { NotyfToastFail } from '../notify-fail-toastr';\n\n@Component({\n    selector: 'app-user-add',\n    templateUrl: './user-add.component.html',\n    styleUrls: ['./user-add.component.css']\n})\nexport class UserAddComponent implements OnInit {\n\n    public companies: Company[];\n    public companyOptions: any[];\n    public selectedCompanyIndex: number;\n    public userDbId: number;\n    public isEdit = false;\n    public user;\n\n    public angForm: FormGroup;\n\n    constructor(private fb: FormBuilder, private router: Router, private ap: AuthProvider,\n        private toastr: ToastrService) {\n        this.isEdit = ComponentHelper.isEditView(router);\n        this.userDbId = ComponentHelper.getId(this.isEdit, router);\n        this.user = this.userDbId ? ap.getUser(this.userDbId) : this.user;\n\n        this.createForm(this.user);\n        this.refresh(this.user, this.isEdit); \n    }\n\n    refresh(user, isEdit) {\n        this.ap.listCompanies()\n            .then(() => this.ap.getCompanies())\n            .then((companies) => {\n                this.companies = companies;\n                if (user && isEdit) {\n                    // Couldn't fig out how to set angular form item on init\n                    // so loading only one company if edit view\n                    this.companyOptions = companies\n                        .filter((company) =>{\n                            return company.id === user.company.id\n                        }).map((company) => {\n                            return  {\n                                label: company.companyName,\n                                value: company.id\n                            };\n                        });\n                } else {\n                    this.companyOptions = companies.map((company) => {\n                        const option = {\n                            label: company.companyName,\n                            value: company.id\n                        };\n                        return option;\n                    });\n                }\n\n            });\n    }\n\n    createForm(user) {\n        if (user) {\n            const companyName = user.company ? this.ap.getCompany(user.company.id).companyName : '';\n            console.log(companyName);\n            this.angForm = this.fb.group({\n                Username: [user.username, Validators.required],\n                Password: ['', Validators.required],\n                CompanyOption: [{value: '', disabled: true}, Validators.required]\n            });\n        } else {\n            this.angForm = this.fb.group({\n                Username: ['', Validators.required],\n                Password: ['', Validators.required],\n                CompanyOption: ['', Validators.required]\n            });\n        }\n    }\n\n    async updateUser(username, password) {\n        this.user.username = username;\n        let resetPassPromise = Promise.resolve();\n        if (password) {\n            const userId = this.user.id;\n            resetPassPromise = this.ap.resetPassword(userId, password);\n        }\n        const updateUserPromise = this.ap.updateUser(this.user);\n\n        Promise.all([resetPassPromise, updateUserPromise]).then((res: any[]) => {\n            if(res[0] || res[1]) {\n                this.onSave(res, 'Updated User '+this.user.username, 'Failed to Update User '+this.user.username, ['user']);\n            } else {\n                this.onSave(null, 'Updated User '+this.user.username, 'Failed to Update User '+this.user.username, ['user']);\n            }\n        }).catch((err) => {\n            this.onSave(null, 'Updated User '+this.user.username, 'Failed to Update User '+this.user.username, ['user']);\n            console.log(err);\n        });\n    }\n\n    saveUser(username, password, companySelectedIndex) {\n        const companyOption = ComponentHelper.reverseLookUpSelectedDropdownValue(companySelectedIndex, this.companyOptions);\n        const companyId = companyOption ? companyOption.value : -1;\n        password = password ? password : '';\n        this.ap.saveUser(this.userDbId, username, password, companyId).then((res) => {\n            this.onSave(res, 'Saved User '+username, 'Failed to Save User '+username, ['user']);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    onSave(res: any, successMessage: string, failMessage: string, redirUri?: string[]) {\n        console.log('onSaveObj', res);\n\n        successMessage = successMessage ? successMessage : 'Saved User';\n        failMessage = failMessage ? failMessage : 'Failed to Save User';\n\n        const opt = JSON.parse(JSON.stringify(this.toastr.toastrConfig));\n        opt.positionClass = 'toast-bottom-right';\n        opt.toastClass = 'notyf confirm';\n        if (res) {\n            opt.toastComponent = NotyfToastSuccess;\n            this.toastr.success(successMessage, '', opt);\n            if (redirUri) {\n                this.router.navigate(redirUri);\n            }\n        } else {\n            opt.toastComponent = NotyfToastFail;\n            this.toastr.error(failMessage, '', opt);\n        }\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZ2V0L3VzZXItZ2V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { User, Company } from 'fr8models';\nimport { AuthProvider } from '../auth.provider';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-user-get',\n  templateUrl: './user-get.component.html',\n  styleUrls: ['./user-get.component.css']\n})\nexport class UserListComponent implements OnInit {\n    private companies: Company[];\n    private selectedUsers: User[];\n    private users = [];\n    constructor(private authProvider: AuthProvider) { }\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.users = [];\n        this.selectedUsers = [];\n        this.authProvider.listCompanies();\n        this.authProvider.listUsers()\n            .then(() => this.authProvider.getMyUsers())\n            .then((users) => {\n                this.users = users;\n            });\n    }\n\n    rowSelected(user: User) {\n        if (!_.includes(this.selectedUsers, user)) {\n            this.selectedUsers.push(user);\n        } else {\n            this.selectedUsers = this.selectedUsers.filter((compare: User) => {\n                return compare !== user;\n            });\n        }\n    }\n\n    isRowSelected(selected: User) {\n        return _.includes(this.selectedUsers, selected);\n    }\n\n    deleteUser(user: User) {\n        this.authProvider.removeUser(user.id)\n            .then(() => this.authProvider.getMyUsers())\n            .then((users) => {\n                this.users = users;\n            });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  backendUrl: 'http://13.211.179.196'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}